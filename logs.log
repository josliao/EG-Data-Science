2023-05-25 15:42:41,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 15:42:41,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 15:42:41,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 15:42:41,541:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 15:42:42,256:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-25 15:42:42,529:INFO:PyCaret ClassificationExperiment
2023-05-25 15:42:42,529:INFO:Logging name: clf-default-name
2023-05-25 15:42:42,529:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 15:42:42,529:INFO:version 3.0.2
2023-05-25 15:42:42,529:INFO:Initializing setup()
2023-05-25 15:42:42,529:INFO:self.USI: 8d4f
2023-05-25 15:42:42,529:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 15:42:42,529:INFO:Checking environment
2023-05-25 15:42:42,529:INFO:python_version: 3.10.9
2023-05-25 15:42:42,529:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 15:42:42,530:INFO:machine: AMD64
2023-05-25 15:42:42,530:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 15:42:42,530:INFO:Memory: svmem(total=17112055808, available=7216353280, percent=57.8, used=9895702528, free=7216353280)
2023-05-25 15:42:42,530:INFO:Physical Core: 8
2023-05-25 15:42:42,530:INFO:Logical Core: 16
2023-05-25 15:42:42,530:INFO:Checking libraries
2023-05-25 15:42:42,530:INFO:System:
2023-05-25 15:42:42,530:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 15:42:42,530:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 15:42:42,530:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 15:42:42,530:INFO:PyCaret required dependencies:
2023-05-25 15:42:42,530:INFO:                 pip: 22.3.1
2023-05-25 15:42:42,530:INFO:          setuptools: 65.6.3
2023-05-25 15:42:42,530:INFO:             pycaret: 3.0.2
2023-05-25 15:42:42,530:INFO:             IPython: 8.10.0
2023-05-25 15:42:42,530:INFO:          ipywidgets: 7.6.5
2023-05-25 15:42:42,530:INFO:                tqdm: 4.64.1
2023-05-25 15:42:42,530:INFO:               numpy: 1.23.5
2023-05-25 15:42:42,530:INFO:              pandas: 1.5.3
2023-05-25 15:42:42,530:INFO:              jinja2: 3.1.2
2023-05-25 15:42:42,530:INFO:               scipy: 1.10.0
2023-05-25 15:42:42,530:INFO:              joblib: 1.1.1
2023-05-25 15:42:42,531:INFO:             sklearn: 1.2.1
2023-05-25 15:42:42,531:INFO:                pyod: 1.0.9
2023-05-25 15:42:42,531:INFO:            imblearn: 0.10.1
2023-05-25 15:42:42,531:INFO:   category_encoders: 2.6.1
2023-05-25 15:42:42,531:INFO:            lightgbm: 3.3.5
2023-05-25 15:42:42,531:INFO:               numba: 0.56.4
2023-05-25 15:42:42,531:INFO:            requests: 2.28.1
2023-05-25 15:42:42,531:INFO:          matplotlib: 3.7.0
2023-05-25 15:42:42,531:INFO:          scikitplot: 0.3.7
2023-05-25 15:42:42,531:INFO:         yellowbrick: 1.5
2023-05-25 15:42:42,531:INFO:              plotly: 5.9.0
2023-05-25 15:42:42,531:INFO:             kaleido: 0.2.1
2023-05-25 15:42:42,531:INFO:         statsmodels: 0.13.5
2023-05-25 15:42:42,531:INFO:              sktime: 0.17.0
2023-05-25 15:42:42,531:INFO:               tbats: 1.1.3
2023-05-25 15:42:42,531:INFO:            pmdarima: 2.0.3
2023-05-25 15:42:42,531:INFO:              psutil: 5.9.0
2023-05-25 15:42:42,531:INFO:PyCaret optional dependencies:
2023-05-25 15:42:42,543:INFO:                shap: Not installed
2023-05-25 15:42:42,543:INFO:           interpret: Not installed
2023-05-25 15:42:42,543:INFO:                umap: Not installed
2023-05-25 15:42:42,543:INFO:    pandas_profiling: Not installed
2023-05-25 15:42:42,543:INFO:  explainerdashboard: Not installed
2023-05-25 15:42:42,543:INFO:             autoviz: Not installed
2023-05-25 15:42:42,543:INFO:           fairlearn: Not installed
2023-05-25 15:42:42,543:INFO:             xgboost: Not installed
2023-05-25 15:42:42,543:INFO:            catboost: Not installed
2023-05-25 15:42:42,543:INFO:              kmodes: Not installed
2023-05-25 15:42:42,544:INFO:             mlxtend: Not installed
2023-05-25 15:42:42,544:INFO:       statsforecast: Not installed
2023-05-25 15:42:42,544:INFO:        tune_sklearn: Not installed
2023-05-25 15:42:42,544:INFO:                 ray: Not installed
2023-05-25 15:42:42,544:INFO:            hyperopt: Not installed
2023-05-25 15:42:42,544:INFO:              optuna: Not installed
2023-05-25 15:42:42,544:INFO:               skopt: Not installed
2023-05-25 15:42:42,544:INFO:              mlflow: Not installed
2023-05-25 15:42:42,544:INFO:              gradio: Not installed
2023-05-25 15:42:42,544:INFO:             fastapi: Not installed
2023-05-25 15:42:42,544:INFO:             uvicorn: Not installed
2023-05-25 15:42:42,544:INFO:              m2cgen: Not installed
2023-05-25 15:42:42,544:INFO:           evidently: Not installed
2023-05-25 15:42:42,544:INFO:               fugue: Not installed
2023-05-25 15:42:42,544:INFO:           streamlit: Not installed
2023-05-25 15:42:42,544:INFO:             prophet: Not installed
2023-05-25 15:42:42,544:INFO:None
2023-05-25 15:42:42,544:INFO:Set up data.
2023-05-25 15:42:42,554:INFO:Set up train/test split.
2023-05-25 15:42:42,560:INFO:Set up index.
2023-05-25 15:42:42,560:INFO:Set up folding strategy.
2023-05-25 15:42:42,560:INFO:Assigning column types.
2023-05-25 15:42:42,564:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 15:42:42,603:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 15:42:42,605:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 15:42:42,637:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:42,882:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:42,923:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 15:42:42,923:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 15:42:42,949:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:42,950:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:42,950:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 15:42:42,990:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 15:42:43,015:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:43,015:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:43,056:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 15:42:43,081:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:43,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:43,081:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 15:42:43,148:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:43,148:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:43,215:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:43,215:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:43,218:INFO:Preparing preprocessing pipeline...
2023-05-25 15:42:43,219:INFO:Set up label encoding.
2023-05-25 15:42:43,219:INFO:Set up simple imputation.
2023-05-25 15:42:43,221:INFO:Set up encoding of categorical features.
2023-05-25 15:42:43,292:INFO:Finished creating preprocessing pipeline.
2023-05-25 15:42:43,299:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['APM', 'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'Num...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours'],
                                    transformer=TargetEncoder(cols=['Age',
                                                                    'HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 15:42:43,299:INFO:Creating final display dataframe.
2023-05-25 15:42:43,514:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      1997
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                (3338, 19)
5        Transformed data shape                                (3338, 19)
6   Transformed train set shape                                (2336, 19)
7    Transformed test set shape                                (1002, 19)
8              Numeric features                                        15
9          Categorical features                                         3
10                   Preprocess                                      True
11              Imputation type                                    simple
12           Numeric imputation                                      mean
13       Categorical imputation                                      mode
14     Maximum one-hot encoding                                        25
15              Encoding method                                      None
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                        10
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      8d4f
2023-05-25 15:42:43,588:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:43,588:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:43,656:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:43,657:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 15:42:43,657:INFO:setup() successfully completed in 1.13s...............
2023-05-25 15:43:00,294:INFO:Initializing compare_models()
2023-05-25 15:43:00,294:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 15:43:00,294:INFO:Checking exceptions
2023-05-25 15:43:00,298:INFO:Preparing display monitor
2023-05-25 15:43:00,322:INFO:Initializing Logistic Regression
2023-05-25 15:43:00,323:INFO:Total runtime is 1.6562143961588542e-05 minutes
2023-05-25 15:43:00,326:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:00,326:INFO:Initializing create_model()
2023-05-25 15:43:00,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:00,326:INFO:Checking exceptions
2023-05-25 15:43:00,326:INFO:Importing libraries
2023-05-25 15:43:00,326:INFO:Copying training dataset
2023-05-25 15:43:00,330:INFO:Defining folds
2023-05-25 15:43:00,330:INFO:Declaring metric variables
2023-05-25 15:43:00,333:INFO:Importing untrained model
2023-05-25 15:43:00,336:INFO:Logistic Regression Imported successfully
2023-05-25 15:43:00,344:INFO:Starting cross validation
2023-05-25 15:43:00,345:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:06,106:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 15:43:06,116:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 15:43:06,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 15:43:06,131:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 15:43:06,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 15:43:06,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 15:43:06,154:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 15:43:06,169:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 15:43:06,175:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 15:43:06,182:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 15:43:06,329:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,329:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,330:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,331:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,331:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:06,332:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,333:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,333:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,335:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,336:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:06,337:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,349:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,351:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,353:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:06,354:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,355:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,357:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,358:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,376:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,377:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,378:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:06,379:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,382:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:06,385:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,403:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,404:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,406:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:06,407:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,408:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,409:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,416:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,418:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,419:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:06,420:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:06,425:INFO:Calculating mean and std
2023-05-25 15:43:06,427:INFO:Creating metrics dataframe
2023-05-25 15:43:06,439:INFO:Uploading results into container
2023-05-25 15:43:06,440:INFO:Uploading model into container now
2023-05-25 15:43:06,440:INFO:_master_model_container: 1
2023-05-25 15:43:06,440:INFO:_display_container: 2
2023-05-25 15:43:06,441:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1997, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 15:43:06,441:INFO:create_model() successfully completed......................................
2023-05-25 15:43:06,516:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:06,516:INFO:Creating metrics dataframe
2023-05-25 15:43:06,524:INFO:Initializing K Neighbors Classifier
2023-05-25 15:43:06,524:INFO:Total runtime is 0.10336929559707642 minutes
2023-05-25 15:43:06,527:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:06,527:INFO:Initializing create_model()
2023-05-25 15:43:06,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:06,527:INFO:Checking exceptions
2023-05-25 15:43:06,527:INFO:Importing libraries
2023-05-25 15:43:06,527:INFO:Copying training dataset
2023-05-25 15:43:06,532:INFO:Defining folds
2023-05-25 15:43:06,532:INFO:Declaring metric variables
2023-05-25 15:43:06,535:INFO:Importing untrained model
2023-05-25 15:43:06,538:INFO:K Neighbors Classifier Imported successfully
2023-05-25 15:43:06,544:INFO:Starting cross validation
2023-05-25 15:43:06,545:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:07,017:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:07,019:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:07,020:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:07,021:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:07,025:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:07,027:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:07,029:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:07,030:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:07,037:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:07,039:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:07,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:07,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:07,055:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:07,056:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:07,057:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,145:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,145:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,146:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,146:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,147:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:09,147:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,147:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,148:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,149:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,150:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,150:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:09,151:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,151:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,152:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:09,152:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,160:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,162:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,162:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,163:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:09,163:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,163:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,164:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:09,165:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,175:INFO:Calculating mean and std
2023-05-25 15:43:09,177:INFO:Creating metrics dataframe
2023-05-25 15:43:09,189:INFO:Uploading results into container
2023-05-25 15:43:09,190:INFO:Uploading model into container now
2023-05-25 15:43:09,190:INFO:_master_model_container: 2
2023-05-25 15:43:09,190:INFO:_display_container: 2
2023-05-25 15:43:09,191:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 15:43:09,191:INFO:create_model() successfully completed......................................
2023-05-25 15:43:09,266:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:09,267:INFO:Creating metrics dataframe
2023-05-25 15:43:09,275:INFO:Initializing Naive Bayes
2023-05-25 15:43:09,275:INFO:Total runtime is 0.14921234051386514 minutes
2023-05-25 15:43:09,278:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:09,278:INFO:Initializing create_model()
2023-05-25 15:43:09,278:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:09,278:INFO:Checking exceptions
2023-05-25 15:43:09,278:INFO:Importing libraries
2023-05-25 15:43:09,278:INFO:Copying training dataset
2023-05-25 15:43:09,283:INFO:Defining folds
2023-05-25 15:43:09,283:INFO:Declaring metric variables
2023-05-25 15:43:09,286:INFO:Importing untrained model
2023-05-25 15:43:09,289:INFO:Naive Bayes Imported successfully
2023-05-25 15:43:09,294:INFO:Starting cross validation
2023-05-25 15:43:09,295:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:09,604:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,606:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,606:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,608:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,608:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,609:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,609:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,610:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,610:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,610:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,610:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,611:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,611:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,611:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,612:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,613:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,615:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,623:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,624:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,625:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,625:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,627:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,627:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,633:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,634:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,635:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,638:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,639:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,641:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:09,657:INFO:Calculating mean and std
2023-05-25 15:43:09,658:INFO:Creating metrics dataframe
2023-05-25 15:43:09,668:INFO:Uploading results into container
2023-05-25 15:43:09,668:INFO:Uploading model into container now
2023-05-25 15:43:09,669:INFO:_master_model_container: 3
2023-05-25 15:43:09,669:INFO:_display_container: 2
2023-05-25 15:43:09,669:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 15:43:09,669:INFO:create_model() successfully completed......................................
2023-05-25 15:43:09,738:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:09,738:INFO:Creating metrics dataframe
2023-05-25 15:43:09,749:INFO:Initializing Decision Tree Classifier
2023-05-25 15:43:09,749:INFO:Total runtime is 0.15712331930796306 minutes
2023-05-25 15:43:09,752:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:09,752:INFO:Initializing create_model()
2023-05-25 15:43:09,752:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:09,752:INFO:Checking exceptions
2023-05-25 15:43:09,753:INFO:Importing libraries
2023-05-25 15:43:09,753:INFO:Copying training dataset
2023-05-25 15:43:09,757:INFO:Defining folds
2023-05-25 15:43:09,757:INFO:Declaring metric variables
2023-05-25 15:43:09,760:INFO:Importing untrained model
2023-05-25 15:43:09,762:INFO:Decision Tree Classifier Imported successfully
2023-05-25 15:43:09,769:INFO:Starting cross validation
2023-05-25 15:43:09,770:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:10,073:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,074:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,077:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,078:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,080:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,081:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,098:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,099:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,100:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,102:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,105:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,106:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,111:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,113:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,114:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,121:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,122:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,128:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,130:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,131:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,142:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,143:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,147:INFO:Calculating mean and std
2023-05-25 15:43:10,147:INFO:Creating metrics dataframe
2023-05-25 15:43:10,157:INFO:Uploading results into container
2023-05-25 15:43:10,158:INFO:Uploading model into container now
2023-05-25 15:43:10,158:INFO:_master_model_container: 4
2023-05-25 15:43:10,158:INFO:_display_container: 2
2023-05-25 15:43:10,159:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1997, splitter='best')
2023-05-25 15:43:10,159:INFO:create_model() successfully completed......................................
2023-05-25 15:43:10,227:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:10,227:INFO:Creating metrics dataframe
2023-05-25 15:43:10,236:INFO:Initializing SVM - Linear Kernel
2023-05-25 15:43:10,236:INFO:Total runtime is 0.16524229844411215 minutes
2023-05-25 15:43:10,239:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:10,239:INFO:Initializing create_model()
2023-05-25 15:43:10,239:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:10,239:INFO:Checking exceptions
2023-05-25 15:43:10,239:INFO:Importing libraries
2023-05-25 15:43:10,239:INFO:Copying training dataset
2023-05-25 15:43:10,244:INFO:Defining folds
2023-05-25 15:43:10,244:INFO:Declaring metric variables
2023-05-25 15:43:10,247:INFO:Importing untrained model
2023-05-25 15:43:10,251:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 15:43:10,257:INFO:Starting cross validation
2023-05-25 15:43:10,258:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:10,544:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 15:43:10,545:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,548:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,549:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 15:43:10,549:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:10,550:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,550:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,552:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,553:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:10,555:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,555:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 15:43:10,556:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,558:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,559:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:10,560:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,584:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 15:43:10,585:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,587:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:10,587:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,588:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 15:43:10,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,590:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,590:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 15:43:10,590:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:10,591:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,591:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,593:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,594:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:10,595:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,598:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 15:43:10,599:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,600:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,601:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:10,601:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,618:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 15:43:10,619:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,620:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,621:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:10,621:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,625:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 15:43:10,626:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,627:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,628:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:10,629:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,654:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 15:43:10,654:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,655:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,656:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:10,657:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:10,660:INFO:Calculating mean and std
2023-05-25 15:43:10,661:INFO:Creating metrics dataframe
2023-05-25 15:43:10,671:INFO:Uploading results into container
2023-05-25 15:43:10,672:INFO:Uploading model into container now
2023-05-25 15:43:10,672:INFO:_master_model_container: 5
2023-05-25 15:43:10,672:INFO:_display_container: 2
2023-05-25 15:43:10,672:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1997, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 15:43:10,672:INFO:create_model() successfully completed......................................
2023-05-25 15:43:10,747:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:10,747:INFO:Creating metrics dataframe
2023-05-25 15:43:10,758:INFO:Initializing Ridge Classifier
2023-05-25 15:43:10,758:INFO:Total runtime is 0.17394174337387086 minutes
2023-05-25 15:43:10,761:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:10,761:INFO:Initializing create_model()
2023-05-25 15:43:10,761:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:10,761:INFO:Checking exceptions
2023-05-25 15:43:10,761:INFO:Importing libraries
2023-05-25 15:43:10,761:INFO:Copying training dataset
2023-05-25 15:43:10,766:INFO:Defining folds
2023-05-25 15:43:10,766:INFO:Declaring metric variables
2023-05-25 15:43:10,769:INFO:Importing untrained model
2023-05-25 15:43:10,772:INFO:Ridge Classifier Imported successfully
2023-05-25 15:43:10,777:INFO:Starting cross validation
2023-05-25 15:43:10,778:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:11,034:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 15:43:11,034:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,036:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,036:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 15:43:11,037:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:11,037:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,037:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,038:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,039:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 15:43:11,040:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 15:43:11,040:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 15:43:11,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,042:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:11,042:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:11,044:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:11,044:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,045:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,048:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 15:43:11,049:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,050:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 15:43:11,051:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:11,051:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,051:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,051:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 15:43:11,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:11,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,054:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,054:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:11,055:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,061:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 15:43:11,061:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 15:43:11,062:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,062:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,063:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,063:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,063:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:11,064:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:11,064:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,064:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:11,085:INFO:Calculating mean and std
2023-05-25 15:43:11,086:INFO:Creating metrics dataframe
2023-05-25 15:43:11,095:INFO:Uploading results into container
2023-05-25 15:43:11,096:INFO:Uploading model into container now
2023-05-25 15:43:11,096:INFO:_master_model_container: 6
2023-05-25 15:43:11,096:INFO:_display_container: 2
2023-05-25 15:43:11,096:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1997, solver='auto',
                tol=0.0001)
2023-05-25 15:43:11,096:INFO:create_model() successfully completed......................................
2023-05-25 15:43:11,168:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:11,168:INFO:Creating metrics dataframe
2023-05-25 15:43:11,178:INFO:Initializing Random Forest Classifier
2023-05-25 15:43:11,178:INFO:Total runtime is 0.18092743158340455 minutes
2023-05-25 15:43:11,182:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:11,182:INFO:Initializing create_model()
2023-05-25 15:43:11,182:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:11,182:INFO:Checking exceptions
2023-05-25 15:43:11,182:INFO:Importing libraries
2023-05-25 15:43:11,182:INFO:Copying training dataset
2023-05-25 15:43:11,187:INFO:Defining folds
2023-05-25 15:43:11,187:INFO:Declaring metric variables
2023-05-25 15:43:11,190:INFO:Importing untrained model
2023-05-25 15:43:11,193:INFO:Random Forest Classifier Imported successfully
2023-05-25 15:43:11,199:INFO:Starting cross validation
2023-05-25 15:43:11,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:12,620:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,621:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,621:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,622:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:12,623:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,623:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,624:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:12,624:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,653:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,655:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,656:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:12,657:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,665:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,666:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,667:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:12,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,682:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,685:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:12,686:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,690:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,691:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,692:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:12,692:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,693:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,694:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,695:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:12,695:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,695:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,696:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,697:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:12,697:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,703:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,705:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,705:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:12,706:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,706:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,707:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,708:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:12,708:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:12,732:INFO:Calculating mean and std
2023-05-25 15:43:12,733:INFO:Creating metrics dataframe
2023-05-25 15:43:12,747:INFO:Uploading results into container
2023-05-25 15:43:12,747:INFO:Uploading model into container now
2023-05-25 15:43:12,748:INFO:_master_model_container: 7
2023-05-25 15:43:12,748:INFO:_display_container: 2
2023-05-25 15:43:12,748:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1997, verbose=0, warm_start=False)
2023-05-25 15:43:12,748:INFO:create_model() successfully completed......................................
2023-05-25 15:43:12,814:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:12,814:INFO:Creating metrics dataframe
2023-05-25 15:43:12,825:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 15:43:12,826:INFO:Total runtime is 0.20840314626693726 minutes
2023-05-25 15:43:12,829:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:12,829:INFO:Initializing create_model()
2023-05-25 15:43:12,829:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:12,829:INFO:Checking exceptions
2023-05-25 15:43:12,830:INFO:Importing libraries
2023-05-25 15:43:12,830:INFO:Copying training dataset
2023-05-25 15:43:12,839:INFO:Defining folds
2023-05-25 15:43:12,840:INFO:Declaring metric variables
2023-05-25 15:43:12,846:INFO:Importing untrained model
2023-05-25 15:43:12,849:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 15:43:12,856:INFO:Starting cross validation
2023-05-25 15:43:12,857:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:13,047:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 15:43:13,206:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,207:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,208:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:13,208:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,209:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,209:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,210:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,211:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:13,211:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,211:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,212:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,219:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,221:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,222:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,223:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:13,223:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,224:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,224:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,225:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,225:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,226:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,226:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:13,227:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,227:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,229:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,229:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,231:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,232:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,241:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,243:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,244:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:13,244:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,245:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,246:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,247:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:13,287:INFO:Calculating mean and std
2023-05-25 15:43:13,288:INFO:Creating metrics dataframe
2023-05-25 15:43:13,304:INFO:Uploading results into container
2023-05-25 15:43:13,304:INFO:Uploading model into container now
2023-05-25 15:43:13,304:INFO:_master_model_container: 8
2023-05-25 15:43:13,305:INFO:_display_container: 2
2023-05-25 15:43:13,305:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 15:43:13,305:INFO:create_model() successfully completed......................................
2023-05-25 15:43:13,367:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:13,367:INFO:Creating metrics dataframe
2023-05-25 15:43:13,377:INFO:Initializing Ada Boost Classifier
2023-05-25 15:43:13,377:INFO:Total runtime is 0.21758045752843222 minutes
2023-05-25 15:43:13,379:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:13,379:INFO:Initializing create_model()
2023-05-25 15:43:13,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:13,380:INFO:Checking exceptions
2023-05-25 15:43:13,380:INFO:Importing libraries
2023-05-25 15:43:13,380:INFO:Copying training dataset
2023-05-25 15:43:13,383:INFO:Defining folds
2023-05-25 15:43:13,384:INFO:Declaring metric variables
2023-05-25 15:43:13,386:INFO:Importing untrained model
2023-05-25 15:43:13,389:INFO:Ada Boost Classifier Imported successfully
2023-05-25 15:43:13,395:INFO:Starting cross validation
2023-05-25 15:43:13,396:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:14,166:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,168:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,169:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:14,170:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,170:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,172:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,173:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:14,174:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,190:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,192:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,193:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:14,193:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,194:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,196:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,198:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:14,199:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,206:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,207:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,207:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,208:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:14,209:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,209:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,210:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:14,211:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,231:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,232:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,232:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:14,233:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,235:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,236:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,237:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,238:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,239:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,240:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:14,240:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,245:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,246:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,247:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:14,247:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:14,290:INFO:Calculating mean and std
2023-05-25 15:43:14,291:INFO:Creating metrics dataframe
2023-05-25 15:43:14,313:INFO:Uploading results into container
2023-05-25 15:43:14,314:INFO:Uploading model into container now
2023-05-25 15:43:14,314:INFO:_master_model_container: 9
2023-05-25 15:43:14,315:INFO:_display_container: 2
2023-05-25 15:43:14,315:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1997)
2023-05-25 15:43:14,315:INFO:create_model() successfully completed......................................
2023-05-25 15:43:14,384:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:14,385:INFO:Creating metrics dataframe
2023-05-25 15:43:14,395:INFO:Initializing Gradient Boosting Classifier
2023-05-25 15:43:14,395:INFO:Total runtime is 0.2345565915107727 minutes
2023-05-25 15:43:14,398:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:14,398:INFO:Initializing create_model()
2023-05-25 15:43:14,398:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:14,398:INFO:Checking exceptions
2023-05-25 15:43:14,398:INFO:Importing libraries
2023-05-25 15:43:14,398:INFO:Copying training dataset
2023-05-25 15:43:14,403:INFO:Defining folds
2023-05-25 15:43:14,403:INFO:Declaring metric variables
2023-05-25 15:43:14,406:INFO:Importing untrained model
2023-05-25 15:43:14,409:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 15:43:14,414:INFO:Starting cross validation
2023-05-25 15:43:14,415:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:23,866:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,868:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,870:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,943:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,945:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,946:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,976:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,978:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,981:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,983:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,985:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,995:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,997:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:23,998:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:23,999:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,022:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,023:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,024:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,029:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,031:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,032:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,044:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,045:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,093:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,094:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,095:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:24,096:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,153:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,154:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,156:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,158:INFO:Calculating mean and std
2023-05-25 15:43:24,159:INFO:Creating metrics dataframe
2023-05-25 15:43:24,188:INFO:Uploading results into container
2023-05-25 15:43:24,189:INFO:Uploading model into container now
2023-05-25 15:43:24,189:INFO:_master_model_container: 10
2023-05-25 15:43:24,189:INFO:_display_container: 2
2023-05-25 15:43:24,190:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1997, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 15:43:24,190:INFO:create_model() successfully completed......................................
2023-05-25 15:43:24,255:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:24,256:INFO:Creating metrics dataframe
2023-05-25 15:43:24,266:INFO:Initializing Linear Discriminant Analysis
2023-05-25 15:43:24,267:INFO:Total runtime is 0.3990920980771383 minutes
2023-05-25 15:43:24,269:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:24,270:INFO:Initializing create_model()
2023-05-25 15:43:24,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:24,270:INFO:Checking exceptions
2023-05-25 15:43:24,270:INFO:Importing libraries
2023-05-25 15:43:24,270:INFO:Copying training dataset
2023-05-25 15:43:24,275:INFO:Defining folds
2023-05-25 15:43:24,275:INFO:Declaring metric variables
2023-05-25 15:43:24,278:INFO:Importing untrained model
2023-05-25 15:43:24,282:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 15:43:24,287:INFO:Starting cross validation
2023-05-25 15:43:24,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:24,578:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,580:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,589:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,590:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,592:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,592:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,594:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,596:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,597:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,599:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,600:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,601:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,602:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,604:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,628:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,629:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,630:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,636:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,636:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,637:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,638:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,638:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,638:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,639:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,639:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,639:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,649:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,650:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:24,743:INFO:Calculating mean and std
2023-05-25 15:43:24,745:INFO:Creating metrics dataframe
2023-05-25 15:43:24,773:INFO:Uploading results into container
2023-05-25 15:43:24,774:INFO:Uploading model into container now
2023-05-25 15:43:24,774:INFO:_master_model_container: 11
2023-05-25 15:43:24,774:INFO:_display_container: 2
2023-05-25 15:43:24,774:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 15:43:24,774:INFO:create_model() successfully completed......................................
2023-05-25 15:43:24,839:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:24,839:INFO:Creating metrics dataframe
2023-05-25 15:43:24,850:INFO:Initializing Extra Trees Classifier
2023-05-25 15:43:24,850:INFO:Total runtime is 0.40879902044932054 minutes
2023-05-25 15:43:24,853:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:24,853:INFO:Initializing create_model()
2023-05-25 15:43:24,853:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:24,853:INFO:Checking exceptions
2023-05-25 15:43:24,854:INFO:Importing libraries
2023-05-25 15:43:24,854:INFO:Copying training dataset
2023-05-25 15:43:24,858:INFO:Defining folds
2023-05-25 15:43:24,858:INFO:Declaring metric variables
2023-05-25 15:43:24,861:INFO:Importing untrained model
2023-05-25 15:43:24,865:INFO:Extra Trees Classifier Imported successfully
2023-05-25 15:43:24,870:INFO:Starting cross validation
2023-05-25 15:43:24,871:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:25,921:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,922:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,924:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:25,925:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,926:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,928:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,929:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:25,930:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,964:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,967:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,968:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:25,969:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,969:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,970:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:25,971:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,974:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,975:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,976:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:25,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,991:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,992:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:25,994:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:25,995:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:26,012:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:26,012:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:26,013:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:26,014:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:26,014:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:26,014:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:26,015:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:26,015:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:26,048:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:26,049:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:26,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:26,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:26,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:26,054:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:26,055:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:26,055:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:26,124:INFO:Calculating mean and std
2023-05-25 15:43:26,124:INFO:Creating metrics dataframe
2023-05-25 15:43:26,159:INFO:Uploading results into container
2023-05-25 15:43:26,159:INFO:Uploading model into container now
2023-05-25 15:43:26,160:INFO:_master_model_container: 12
2023-05-25 15:43:26,160:INFO:_display_container: 2
2023-05-25 15:43:26,160:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False)
2023-05-25 15:43:26,160:INFO:create_model() successfully completed......................................
2023-05-25 15:43:26,221:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:26,221:INFO:Creating metrics dataframe
2023-05-25 15:43:26,232:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 15:43:26,232:INFO:Total runtime is 0.43183475335439053 minutes
2023-05-25 15:43:26,234:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:26,235:INFO:Initializing create_model()
2023-05-25 15:43:26,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:26,235:INFO:Checking exceptions
2023-05-25 15:43:26,235:INFO:Importing libraries
2023-05-25 15:43:26,235:INFO:Copying training dataset
2023-05-25 15:43:26,239:INFO:Defining folds
2023-05-25 15:43:26,239:INFO:Declaring metric variables
2023-05-25 15:43:26,244:INFO:Importing untrained model
2023-05-25 15:43:26,247:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 15:43:26,253:INFO:Starting cross validation
2023-05-25 15:43:26,254:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:28,976:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:28,978:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:28,981:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,042:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:29,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,057:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,058:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,060:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:29,060:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,105:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:29,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,114:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,114:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,116:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,117:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,117:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:29,117:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:29,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,133:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,134:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,135:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,149:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,461:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,461:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,462:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:29,462:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,263:INFO:Calculating mean and std
2023-05-25 15:43:30,264:INFO:Creating metrics dataframe
2023-05-25 15:43:30,302:INFO:Uploading results into container
2023-05-25 15:43:30,303:INFO:Uploading model into container now
2023-05-25 15:43:30,303:INFO:_master_model_container: 13
2023-05-25 15:43:30,303:INFO:_display_container: 2
2023-05-25 15:43:30,303:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1997, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 15:43:30,304:INFO:create_model() successfully completed......................................
2023-05-25 15:43:30,365:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:30,365:INFO:Creating metrics dataframe
2023-05-25 15:43:30,377:INFO:Initializing Dummy Classifier
2023-05-25 15:43:30,377:INFO:Total runtime is 0.5009164929389954 minutes
2023-05-25 15:43:30,380:INFO:SubProcess create_model() called ==================================
2023-05-25 15:43:30,380:INFO:Initializing create_model()
2023-05-25 15:43:30,380:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE56DAD2D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:30,380:INFO:Checking exceptions
2023-05-25 15:43:30,380:INFO:Importing libraries
2023-05-25 15:43:30,380:INFO:Copying training dataset
2023-05-25 15:43:30,385:INFO:Defining folds
2023-05-25 15:43:30,385:INFO:Declaring metric variables
2023-05-25 15:43:30,388:INFO:Importing untrained model
2023-05-25 15:43:30,391:INFO:Dummy Classifier Imported successfully
2023-05-25 15:43:30,397:INFO:Starting cross validation
2023-05-25 15:43:30,398:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:43:30,669:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,671:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,672:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:30,673:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,697:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,698:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,699:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:30,700:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,705:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,707:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,708:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:30,709:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,710:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,712:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,712:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,713:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,713:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:30,714:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,714:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,714:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,714:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,714:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,715:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:30,715:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:30,715:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,716:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,716:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,716:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:30,716:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,717:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,717:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:30,719:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,726:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,728:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,728:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:30,729:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,737:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,739:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,739:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:43:30,740:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:43:30,892:INFO:Calculating mean and std
2023-05-25 15:43:30,893:INFO:Creating metrics dataframe
2023-05-25 15:43:30,930:INFO:Uploading results into container
2023-05-25 15:43:30,930:INFO:Uploading model into container now
2023-05-25 15:43:30,931:INFO:_master_model_container: 14
2023-05-25 15:43:30,931:INFO:_display_container: 2
2023-05-25 15:43:30,931:INFO:DummyClassifier(constant=None, random_state=1997, strategy='prior')
2023-05-25 15:43:30,931:INFO:create_model() successfully completed......................................
2023-05-25 15:43:30,990:INFO:SubProcess create_model() end ==================================
2023-05-25 15:43:30,991:INFO:Creating metrics dataframe
2023-05-25 15:43:31,010:INFO:Initializing create_model()
2023-05-25 15:43:31,011:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:43:31,011:INFO:Checking exceptions
2023-05-25 15:43:31,012:INFO:Importing libraries
2023-05-25 15:43:31,012:INFO:Copying training dataset
2023-05-25 15:43:31,017:INFO:Defining folds
2023-05-25 15:43:31,017:INFO:Declaring metric variables
2023-05-25 15:43:31,017:INFO:Importing untrained model
2023-05-25 15:43:31,017:INFO:Declaring custom model
2023-05-25 15:43:31,018:INFO:Extra Trees Classifier Imported successfully
2023-05-25 15:43:31,019:INFO:Cross validation set to False
2023-05-25 15:43:31,019:INFO:Fitting Model
2023-05-25 15:43:31,380:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False)
2023-05-25 15:43:31,381:INFO:create_model() successfully completed......................................
2023-05-25 15:43:31,469:INFO:_master_model_container: 14
2023-05-25 15:43:31,469:INFO:_display_container: 2
2023-05-25 15:43:31,470:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False)
2023-05-25 15:43:31,470:INFO:compare_models() successfully completed......................................
2023-05-25 15:46:32,340:INFO:Initializing tune_model()
2023-05-25 15:46:32,340:INFO:tune_model(estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>)
2023-05-25 15:46:32,340:INFO:Checking exceptions
2023-05-25 15:46:32,357:INFO:Copying training dataset
2023-05-25 15:46:32,361:INFO:Checking base model
2023-05-25 15:46:32,361:INFO:Base model : Extra Trees Classifier
2023-05-25 15:46:32,365:INFO:Declaring metric variables
2023-05-25 15:46:32,369:INFO:Defining Hyperparameters
2023-05-25 15:46:32,442:INFO:Tuning with n_jobs=-1
2023-05-25 15:46:32,442:INFO:Initializing RandomizedSearchCV
2023-05-25 15:46:39,466:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.54s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-25 15:46:40,044:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.57s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-25 15:46:43,942:INFO:best_params: {'actual_estimator__n_estimators': 120, 'actual_estimator__min_samples_split': 5, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0, 'actual_estimator__max_features': 1.0, 'actual_estimator__max_depth': 8, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': {}, 'actual_estimator__bootstrap': False}
2023-05-25 15:46:43,943:INFO:Hyperparameter search completed
2023-05-25 15:46:43,943:INFO:SubProcess create_model() called ==================================
2023-05-25 15:46:43,943:INFO:Initializing create_model()
2023-05-25 15:46:43,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE57D97940>, model_only=True, return_train_score=False, kwargs={'n_estimators': 120, 'min_samples_split': 5, 'min_samples_leaf': 2, 'min_impurity_decrease': 0, 'max_features': 1.0, 'max_depth': 8, 'criterion': 'gini', 'class_weight': {}, 'bootstrap': False})
2023-05-25 15:46:43,943:INFO:Checking exceptions
2023-05-25 15:46:43,943:INFO:Importing libraries
2023-05-25 15:46:43,943:INFO:Copying training dataset
2023-05-25 15:46:43,949:INFO:Defining folds
2023-05-25 15:46:43,949:INFO:Declaring metric variables
2023-05-25 15:46:43,952:INFO:Importing untrained model
2023-05-25 15:46:43,952:INFO:Declaring custom model
2023-05-25 15:46:43,956:INFO:Extra Trees Classifier Imported successfully
2023-05-25 15:46:43,962:INFO:Starting cross validation
2023-05-25 15:46:43,963:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:46:44,534:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,536:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,537:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:44,538:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,539:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,541:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,542:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:44,543:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,547:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,548:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,549:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,550:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,551:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:44,551:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:44,552:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,552:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,574:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,576:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,576:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,577:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:44,578:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,578:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,579:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:44,580:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,584:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,585:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,587:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:44,587:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,587:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:44,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,611:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,613:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,614:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:44,615:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,626:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,627:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:44,629:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:44,630:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:45,141:INFO:Calculating mean and std
2023-05-25 15:46:45,142:INFO:Creating metrics dataframe
2023-05-25 15:46:45,147:INFO:Finalizing model
2023-05-25 15:46:45,630:INFO:Uploading results into container
2023-05-25 15:46:45,631:INFO:Uploading model into container now
2023-05-25 15:46:45,631:INFO:_master_model_container: 15
2023-05-25 15:46:45,631:INFO:_display_container: 3
2023-05-25 15:46:45,632:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False)
2023-05-25 15:46:45,632:INFO:create_model() successfully completed......................................
2023-05-25 15:46:45,698:INFO:SubProcess create_model() end ==================================
2023-05-25 15:46:45,698:INFO:choose_better activated
2023-05-25 15:46:45,701:INFO:SubProcess create_model() called ==================================
2023-05-25 15:46:45,701:INFO:Initializing create_model()
2023-05-25 15:46:45,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 15:46:45,701:INFO:Checking exceptions
2023-05-25 15:46:45,703:INFO:Importing libraries
2023-05-25 15:46:45,703:INFO:Copying training dataset
2023-05-25 15:46:45,706:INFO:Defining folds
2023-05-25 15:46:45,706:INFO:Declaring metric variables
2023-05-25 15:46:45,707:INFO:Importing untrained model
2023-05-25 15:46:45,707:INFO:Declaring custom model
2023-05-25 15:46:45,707:INFO:Extra Trees Classifier Imported successfully
2023-05-25 15:46:45,708:INFO:Starting cross validation
2023-05-25 15:46:45,709:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 15:46:46,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,318:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,319:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:46,320:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,346:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,348:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,349:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,349:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:46,350:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,351:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,352:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:46,353:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,353:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,354:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,355:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,356:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,356:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:46,358:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:46,358:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,358:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,359:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,360:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,361:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:46,361:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,397:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,399:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,399:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,400:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:46,401:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,401:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,402:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:46,403:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,419:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,420:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,421:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,422:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,422:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:46,423:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,424:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 15:46:46,425:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 15:46:46,938:INFO:Calculating mean and std
2023-05-25 15:46:46,938:INFO:Creating metrics dataframe
2023-05-25 15:46:46,940:INFO:Finalizing model
2023-05-25 15:46:47,180:INFO:Uploading results into container
2023-05-25 15:46:47,181:INFO:Uploading model into container now
2023-05-25 15:46:47,181:INFO:_master_model_container: 16
2023-05-25 15:46:47,181:INFO:_display_container: 4
2023-05-25 15:46:47,181:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False)
2023-05-25 15:46:47,181:INFO:create_model() successfully completed......................................
2023-05-25 15:46:47,242:INFO:SubProcess create_model() end ==================================
2023-05-25 15:46:47,243:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False) result for Accuracy is 0.402
2023-05-25 15:46:47,243:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False) result for Accuracy is 0.4041
2023-05-25 15:46:47,243:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False) is best model
2023-05-25 15:46:47,244:INFO:choose_better completed
2023-05-25 15:46:47,251:INFO:_master_model_container: 16
2023-05-25 15:46:47,251:INFO:_display_container: 3
2023-05-25 15:46:47,252:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False)
2023-05-25 15:46:47,252:INFO:tune_model() successfully completed......................................
2023-05-25 15:47:06,883:INFO:Initializing evaluate_model()
2023-05-25 15:47:06,883:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-25 15:47:06,898:INFO:Initializing plot_model()
2023-05-25 15:47:06,898:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, system=True)
2023-05-25 15:47:06,898:INFO:Checking exceptions
2023-05-25 15:47:06,917:INFO:Preloading libraries
2023-05-25 15:47:06,934:INFO:Copying training dataset
2023-05-25 15:47:06,934:INFO:Plot type: pipeline
2023-05-25 15:47:07,098:INFO:Visual Rendered Successfully
2023-05-25 15:47:07,159:INFO:plot_model() successfully completed......................................
2023-05-25 15:47:15,964:INFO:Initializing plot_model()
2023-05-25 15:47:15,964:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, system=True)
2023-05-25 15:47:15,964:INFO:Checking exceptions
2023-05-25 15:47:15,984:INFO:Preloading libraries
2023-05-25 15:47:15,995:INFO:Copying training dataset
2023-05-25 15:47:15,995:INFO:Plot type: auc
2023-05-25 15:47:16,199:INFO:Fitting Model
2023-05-25 15:47:16,202:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-05-25 15:47:16,202:INFO:Scoring test/hold-out set
2023-05-25 15:47:16,493:INFO:Visual Rendered Successfully
2023-05-25 15:47:16,559:INFO:plot_model() successfully completed......................................
2023-05-25 15:47:18,510:INFO:Initializing plot_model()
2023-05-25 15:47:18,511:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, system=True)
2023-05-25 15:47:18,511:INFO:Checking exceptions
2023-05-25 15:47:18,532:INFO:Preloading libraries
2023-05-25 15:47:18,541:INFO:Copying training dataset
2023-05-25 15:47:18,542:INFO:Plot type: vc
2023-05-25 15:47:18,542:INFO:Determining param_name
2023-05-25 15:47:18,542:INFO:param_name: max_depth
2023-05-25 15:47:18,763:INFO:Fitting Model
2023-05-25 15:47:23,209:INFO:Visual Rendered Successfully
2023-05-25 15:47:23,277:INFO:plot_model() successfully completed......................................
2023-05-25 15:47:24,709:INFO:Initializing plot_model()
2023-05-25 15:47:24,710:INFO:plot_model(plot=error, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, system=True)
2023-05-25 15:47:24,710:INFO:Checking exceptions
2023-05-25 15:47:24,730:INFO:Preloading libraries
2023-05-25 15:47:24,741:INFO:Copying training dataset
2023-05-25 15:47:24,742:INFO:Plot type: error
2023-05-25 15:47:24,958:INFO:Fitting Model
2023-05-25 15:47:24,958:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-05-25 15:47:24,958:INFO:Scoring test/hold-out set
2023-05-25 15:47:25,293:INFO:Visual Rendered Successfully
2023-05-25 15:47:25,364:INFO:plot_model() successfully completed......................................
2023-05-25 15:47:28,359:INFO:Initializing plot_model()
2023-05-25 15:47:28,359:INFO:plot_model(plot=pr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, system=True)
2023-05-25 15:47:28,360:INFO:Checking exceptions
2023-05-25 15:47:28,381:INFO:Preloading libraries
2023-05-25 15:47:28,391:INFO:Copying training dataset
2023-05-25 15:47:28,392:INFO:Plot type: pr
2023-05-25 15:47:28,603:INFO:Fitting Model
2023-05-25 15:47:29,648:INFO:Scoring test/hold-out set
2023-05-25 15:47:30,213:INFO:Visual Rendered Successfully
2023-05-25 15:47:30,282:INFO:plot_model() successfully completed......................................
2023-05-25 15:47:33,005:INFO:Initializing plot_model()
2023-05-25 15:47:33,006:INFO:plot_model(plot=boundary, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, system=True)
2023-05-25 15:47:33,006:INFO:Checking exceptions
2023-05-25 15:47:33,025:INFO:Preloading libraries
2023-05-25 15:47:33,035:INFO:Copying training dataset
2023-05-25 15:47:33,035:INFO:Plot type: boundary
2023-05-25 15:47:33,140:INFO:Fitting StandardScaler()
2023-05-25 15:47:33,145:INFO:Fitting PCA()
2023-05-25 15:47:33,284:INFO:Fitting Model
2023-05-25 15:47:33,887:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\yellowbrick\contrib\classifier\boundaries.py:467: UserWarning: You passed a edgecolor/edgecolors ('black') for an unfilled marker ('+').  Matplotlib is ignoring the edgecolor in favor of the facecolor.  This behavior may change in the future.
  self.ax.scatter(

2023-05-25 15:47:34,804:INFO:Visual Rendered Successfully
2023-05-25 15:47:34,908:INFO:plot_model() successfully completed......................................
2023-05-25 15:47:36,648:INFO:Initializing plot_model()
2023-05-25 15:47:36,648:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, system=True)
2023-05-25 15:47:36,648:INFO:Checking exceptions
2023-05-25 15:47:36,667:INFO:Preloading libraries
2023-05-25 15:47:36,680:INFO:Copying training dataset
2023-05-25 15:47:36,680:INFO:Plot type: auc
2023-05-25 15:47:36,900:INFO:Fitting Model
2023-05-25 15:47:36,900:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-05-25 15:47:36,900:INFO:Scoring test/hold-out set
2023-05-25 15:47:37,185:INFO:Visual Rendered Successfully
2023-05-25 15:47:37,249:INFO:plot_model() successfully completed......................................
2023-05-25 15:47:37,657:INFO:Initializing plot_model()
2023-05-25 15:47:37,658:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, system=True)
2023-05-25 15:47:37,658:INFO:Checking exceptions
2023-05-25 15:47:37,677:INFO:Preloading libraries
2023-05-25 15:47:37,687:INFO:Copying training dataset
2023-05-25 15:47:37,687:INFO:Plot type: confusion_matrix
2023-05-25 15:47:37,894:INFO:Fitting Model
2023-05-25 15:47:37,894:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-05-25 15:47:37,895:INFO:Scoring test/hold-out set
2023-05-25 15:47:38,172:INFO:Visual Rendered Successfully
2023-05-25 15:47:38,235:INFO:plot_model() successfully completed......................................
2023-05-25 15:48:09,041:INFO:Initializing finalize_model()
2023-05-25 15:48:09,041:INFO:finalize_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), fit_kwargs=None, groups=None, model_only=False, experiment_custom_tags=None)
2023-05-25 15:48:09,042:INFO:Finalizing ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False)
2023-05-25 15:48:09,044:INFO:Initializing create_model()
2023-05-25 15:48:09,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), fold=None, round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=False, metrics=None, display=None, model_only=False, return_train_score=False, kwargs={})
2023-05-25 15:48:09,045:INFO:Checking exceptions
2023-05-25 15:48:09,046:INFO:Importing libraries
2023-05-25 15:48:09,046:INFO:Copying training dataset
2023-05-25 15:48:09,047:INFO:Defining folds
2023-05-25 15:48:09,047:INFO:Declaring metric variables
2023-05-25 15:48:09,047:INFO:Importing untrained model
2023-05-25 15:48:09,047:INFO:Declaring custom model
2023-05-25 15:48:09,048:INFO:Extra Trees Classifier Imported successfully
2023-05-25 15:48:09,049:INFO:Cross validation set to False
2023-05-25 15:48:09,049:INFO:Fitting Model
2023-05-25 15:48:09,441:INFO:Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['APM', 'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'Num...
                ('actual_estimator',
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight={}, criterion='gini',
                                      max_depth=8, max_features=1.0,
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0,
                                      min_samples_leaf=2, min_samples_split=5,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=120, n_jobs=-1,
                                      oob_score=False, random_state=1997,
                                      verbose=0, warm_start=False))],
         verbose=False)
2023-05-25 15:48:09,441:INFO:create_model() successfully completed......................................
2023-05-25 15:48:09,508:INFO:_master_model_container: 16
2023-05-25 15:48:09,509:INFO:_display_container: 3
2023-05-25 15:48:09,515:INFO:Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['APM', 'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'Num...
                ('actual_estimator',
                 ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0,
                                      class_weight={}, criterion='gini',
                                      max_depth=8, max_features=1.0,
                                      max_leaf_nodes=None, max_samples=None,
                                      min_impurity_decrease=0,
                                      min_samples_leaf=2, min_samples_split=5,
                                      min_weight_fraction_leaf=0.0,
                                      n_estimators=120, n_jobs=-1,
                                      oob_score=False, random_state=1997,
                                      verbose=0, warm_start=False))],
         verbose=False)
2023-05-25 15:48:09,515:INFO:finalize_model() successfully completed......................................
2023-05-25 15:53:41,465:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:08:30,732:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_10308\797969593.py:22: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  correlation_matrix = scdf.corr()

2023-05-25 16:12:17,266:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_10308\74029707.py:1: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  scdf = scdf.drop('SelectByHotkeys', 'Action Latency',)

2023-05-25 16:12:26,079:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_10308\139021393.py:1: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  scdf = scdf.drop('SelectByHotkeys', 'Action Latency', axis=1)

2023-05-25 16:12:34,278:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_10308\3574605733.py:1: FutureWarning: In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only.
  scdf = scdf.drop('SelectByHotkeys', 'Action Latency', axis=2)

2023-05-25 16:13:49,443:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_10308\1569036350.py:20: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  correlation_matrix = scdf.corr()

2023-05-25 16:14:34,933:INFO:PyCaret ClassificationExperiment
2023-05-25 16:14:34,934:INFO:Logging name: clf-default-name
2023-05-25 16:14:34,934:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 16:14:34,934:INFO:version 3.0.2
2023-05-25 16:14:34,934:INFO:Initializing setup()
2023-05-25 16:14:34,934:INFO:self.USI: f800
2023-05-25 16:14:34,934:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 16:14:34,934:INFO:Checking environment
2023-05-25 16:14:34,934:INFO:python_version: 3.10.9
2023-05-25 16:14:34,934:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 16:14:34,934:INFO:machine: AMD64
2023-05-25 16:14:34,934:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 16:14:34,934:INFO:Memory: svmem(total=17112055808, available=7785545728, percent=54.5, used=9326510080, free=7785545728)
2023-05-25 16:14:34,934:INFO:Physical Core: 8
2023-05-25 16:14:34,934:INFO:Logical Core: 16
2023-05-25 16:14:34,934:INFO:Checking libraries
2023-05-25 16:14:34,934:INFO:System:
2023-05-25 16:14:34,934:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 16:14:34,934:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 16:14:34,934:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 16:14:34,935:INFO:PyCaret required dependencies:
2023-05-25 16:14:34,935:INFO:                 pip: 22.3.1
2023-05-25 16:14:34,935:INFO:          setuptools: 65.6.3
2023-05-25 16:14:34,935:INFO:             pycaret: 3.0.2
2023-05-25 16:14:34,935:INFO:             IPython: 8.10.0
2023-05-25 16:14:34,935:INFO:          ipywidgets: 7.6.5
2023-05-25 16:14:34,935:INFO:                tqdm: 4.64.1
2023-05-25 16:14:34,935:INFO:               numpy: 1.23.5
2023-05-25 16:14:34,935:INFO:              pandas: 1.5.3
2023-05-25 16:14:34,935:INFO:              jinja2: 3.1.2
2023-05-25 16:14:34,935:INFO:               scipy: 1.10.0
2023-05-25 16:14:34,935:INFO:              joblib: 1.1.1
2023-05-25 16:14:34,935:INFO:             sklearn: 1.2.1
2023-05-25 16:14:34,935:INFO:                pyod: 1.0.9
2023-05-25 16:14:34,936:INFO:            imblearn: 0.10.1
2023-05-25 16:14:34,936:INFO:   category_encoders: 2.6.1
2023-05-25 16:14:34,936:INFO:            lightgbm: 3.3.5
2023-05-25 16:14:34,936:INFO:               numba: 0.56.4
2023-05-25 16:14:34,936:INFO:            requests: 2.28.1
2023-05-25 16:14:34,936:INFO:          matplotlib: 3.7.0
2023-05-25 16:14:34,936:INFO:          scikitplot: 0.3.7
2023-05-25 16:14:34,936:INFO:         yellowbrick: 1.5
2023-05-25 16:14:34,936:INFO:              plotly: 5.9.0
2023-05-25 16:14:34,936:INFO:             kaleido: 0.2.1
2023-05-25 16:14:34,936:INFO:         statsmodels: 0.13.5
2023-05-25 16:14:34,936:INFO:              sktime: 0.17.0
2023-05-25 16:14:34,936:INFO:               tbats: 1.1.3
2023-05-25 16:14:34,936:INFO:            pmdarima: 2.0.3
2023-05-25 16:14:34,936:INFO:              psutil: 5.9.0
2023-05-25 16:14:34,936:INFO:PyCaret optional dependencies:
2023-05-25 16:14:34,936:INFO:                shap: Not installed
2023-05-25 16:14:34,936:INFO:           interpret: Not installed
2023-05-25 16:14:34,937:INFO:                umap: Not installed
2023-05-25 16:14:34,937:INFO:    pandas_profiling: Not installed
2023-05-25 16:14:34,937:INFO:  explainerdashboard: Not installed
2023-05-25 16:14:34,937:INFO:             autoviz: Not installed
2023-05-25 16:14:34,937:INFO:           fairlearn: Not installed
2023-05-25 16:14:34,937:INFO:             xgboost: Not installed
2023-05-25 16:14:34,937:INFO:            catboost: Not installed
2023-05-25 16:14:34,937:INFO:              kmodes: Not installed
2023-05-25 16:14:34,937:INFO:             mlxtend: Not installed
2023-05-25 16:14:34,937:INFO:       statsforecast: Not installed
2023-05-25 16:14:34,937:INFO:        tune_sklearn: Not installed
2023-05-25 16:14:34,937:INFO:                 ray: Not installed
2023-05-25 16:14:34,937:INFO:            hyperopt: Not installed
2023-05-25 16:14:34,937:INFO:              optuna: Not installed
2023-05-25 16:14:34,937:INFO:               skopt: Not installed
2023-05-25 16:14:34,937:INFO:              mlflow: Not installed
2023-05-25 16:14:34,937:INFO:              gradio: Not installed
2023-05-25 16:14:34,937:INFO:             fastapi: Not installed
2023-05-25 16:14:34,937:INFO:             uvicorn: Not installed
2023-05-25 16:14:34,937:INFO:              m2cgen: Not installed
2023-05-25 16:14:34,937:INFO:           evidently: Not installed
2023-05-25 16:14:34,937:INFO:               fugue: Not installed
2023-05-25 16:14:34,937:INFO:           streamlit: Not installed
2023-05-25 16:14:34,937:INFO:             prophet: Not installed
2023-05-25 16:14:34,937:INFO:None
2023-05-25 16:14:34,938:INFO:Set up data.
2023-05-25 16:14:34,945:INFO:Set up train/test split.
2023-05-25 16:14:34,952:INFO:Set up index.
2023-05-25 16:14:34,952:INFO:Set up folding strategy.
2023-05-25 16:14:34,952:INFO:Assigning column types.
2023-05-25 16:14:34,957:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 16:14:34,997:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:14:34,998:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:14:35,024:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,025:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,066:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:14:35,067:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:14:35,093:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,093:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,093:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 16:14:35,135:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:14:35,160:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,201:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:14:35,227:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,228:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,228:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 16:14:35,293:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,360:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,361:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,361:INFO:Preparing preprocessing pipeline...
2023-05-25 16:14:35,362:INFO:Set up label encoding.
2023-05-25 16:14:35,362:INFO:Set up simple imputation.
2023-05-25 16:14:35,365:INFO:Set up encoding of categorical features.
2023-05-25 16:14:35,435:INFO:Finished creating preprocessing pipeline.
2023-05-25 16:14:35,441:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['APM', 'AssignToHotkeys',
                                             'UniqueHotkeys', 'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'NumberOfPACs', 'GapBet...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours'],
                                    transformer=TargetEncoder(cols=['Age',
                                                                    'HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 16:14:35,441:INFO:Creating final display dataframe.
2023-05-25 16:14:35,664:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      1613
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                (3338, 17)
5        Transformed data shape                                (3338, 17)
6   Transformed train set shape                                (2336, 17)
7    Transformed test set shape                                (1002, 17)
8              Numeric features                                        13
9          Categorical features                                         3
10                   Preprocess                                      True
11              Imputation type                                    simple
12           Numeric imputation                                      mean
13       Categorical imputation                                      mode
14     Maximum one-hot encoding                                        25
15              Encoding method                                      None
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                        10
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      f800
2023-05-25 16:14:35,734:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,800:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,800:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:14:35,801:INFO:setup() successfully completed in 0.93s...............
2023-05-25 16:14:38,021:INFO:Initializing compare_models()
2023-05-25 16:14:38,021:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 16:14:38,021:INFO:Checking exceptions
2023-05-25 16:14:38,025:INFO:Preparing display monitor
2023-05-25 16:14:38,049:INFO:Initializing Logistic Regression
2023-05-25 16:14:38,049:INFO:Total runtime is 0.0 minutes
2023-05-25 16:14:38,052:INFO:SubProcess create_model() called ==================================
2023-05-25 16:14:38,052:INFO:Initializing create_model()
2023-05-25 16:14:38,052:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:14:38,052:INFO:Checking exceptions
2023-05-25 16:14:38,052:INFO:Importing libraries
2023-05-25 16:14:38,052:INFO:Copying training dataset
2023-05-25 16:14:38,057:INFO:Defining folds
2023-05-25 16:14:38,057:INFO:Declaring metric variables
2023-05-25 16:14:38,060:INFO:Importing untrained model
2023-05-25 16:14:38,062:INFO:Logistic Regression Imported successfully
2023-05-25 16:14:38,069:INFO:Starting cross validation
2023-05-25 16:14:38,070:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:14:43,547:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:14:43,552:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:14:43,581:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:14:43,592:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:14:43,593:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:14:43,597:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:14:43,619:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:14:43,627:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:14:43,636:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:14:43,676:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:14:43,716:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,718:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,718:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:43,719:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,719:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,720:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,721:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:43,722:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,765:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,768:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,770:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,770:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,771:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,772:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:43,773:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,786:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,788:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,790:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:43,790:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,792:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,793:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,794:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,794:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,796:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:43,796:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,796:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,813:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,814:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,815:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:43,816:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,817:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,819:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:43,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,866:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,867:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:43,868:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:44,381:INFO:Calculating mean and std
2023-05-25 16:14:44,383:INFO:Creating metrics dataframe
2023-05-25 16:14:44,488:INFO:Uploading results into container
2023-05-25 16:14:44,488:INFO:Uploading model into container now
2023-05-25 16:14:44,489:INFO:_master_model_container: 1
2023-05-25 16:14:44,489:INFO:_display_container: 2
2023-05-25 16:14:44,489:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 16:14:44,489:INFO:create_model() successfully completed......................................
2023-05-25 16:14:44,649:INFO:SubProcess create_model() end ==================================
2023-05-25 16:14:44,649:INFO:Creating metrics dataframe
2023-05-25 16:14:44,658:INFO:Initializing K Neighbors Classifier
2023-05-25 16:14:44,658:INFO:Total runtime is 0.1101494034131368 minutes
2023-05-25 16:14:44,661:INFO:SubProcess create_model() called ==================================
2023-05-25 16:14:44,662:INFO:Initializing create_model()
2023-05-25 16:14:44,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:14:44,662:INFO:Checking exceptions
2023-05-25 16:14:44,662:INFO:Importing libraries
2023-05-25 16:14:44,662:INFO:Copying training dataset
2023-05-25 16:14:44,667:INFO:Defining folds
2023-05-25 16:14:44,667:INFO:Declaring metric variables
2023-05-25 16:14:44,670:INFO:Importing untrained model
2023-05-25 16:14:44,673:INFO:K Neighbors Classifier Imported successfully
2023-05-25 16:14:44,679:INFO:Starting cross validation
2023-05-25 16:14:44,680:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:14:45,152:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:45,154:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:45,154:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:45,155:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:45,163:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:45,164:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:45,165:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:45,166:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:45,173:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:45,175:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:45,176:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:45,177:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:45,183:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:45,186:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:45,187:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:45,188:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,255:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,257:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,258:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:47,258:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:47,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:47,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,269:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,278:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,279:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,280:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:47,281:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,296:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,297:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,298:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,298:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:47,299:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,299:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,300:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:47,300:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:47,604:INFO:Calculating mean and std
2023-05-25 16:14:47,605:INFO:Creating metrics dataframe
2023-05-25 16:14:47,706:INFO:Uploading results into container
2023-05-25 16:14:47,707:INFO:Uploading model into container now
2023-05-25 16:14:47,707:INFO:_master_model_container: 2
2023-05-25 16:14:47,707:INFO:_display_container: 2
2023-05-25 16:14:47,707:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 16:14:47,707:INFO:create_model() successfully completed......................................
2023-05-25 16:14:47,826:INFO:SubProcess create_model() end ==================================
2023-05-25 16:14:47,826:INFO:Creating metrics dataframe
2023-05-25 16:14:47,836:INFO:Initializing Naive Bayes
2023-05-25 16:14:47,836:INFO:Total runtime is 0.16312898794809977 minutes
2023-05-25 16:14:47,839:INFO:SubProcess create_model() called ==================================
2023-05-25 16:14:47,839:INFO:Initializing create_model()
2023-05-25 16:14:47,840:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:14:47,840:INFO:Checking exceptions
2023-05-25 16:14:47,840:INFO:Importing libraries
2023-05-25 16:14:47,840:INFO:Copying training dataset
2023-05-25 16:14:47,846:INFO:Defining folds
2023-05-25 16:14:47,847:INFO:Declaring metric variables
2023-05-25 16:14:47,850:INFO:Importing untrained model
2023-05-25 16:14:47,853:INFO:Naive Bayes Imported successfully
2023-05-25 16:14:47,859:INFO:Starting cross validation
2023-05-25 16:14:47,860:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:14:48,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,120:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,122:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,137:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,139:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,141:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,141:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,143:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,145:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,148:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,150:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,151:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,169:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,169:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,171:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,171:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,173:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,174:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,182:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,184:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,185:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,185:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:48,186:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,187:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,189:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,206:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,207:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,209:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,223:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,225:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,226:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:48,227:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:48,755:INFO:Calculating mean and std
2023-05-25 16:14:48,756:INFO:Creating metrics dataframe
2023-05-25 16:14:48,862:INFO:Uploading results into container
2023-05-25 16:14:48,863:INFO:Uploading model into container now
2023-05-25 16:14:48,863:INFO:_master_model_container: 3
2023-05-25 16:14:48,863:INFO:_display_container: 2
2023-05-25 16:14:48,863:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 16:14:48,863:INFO:create_model() successfully completed......................................
2023-05-25 16:14:48,992:INFO:SubProcess create_model() end ==================================
2023-05-25 16:14:48,992:INFO:Creating metrics dataframe
2023-05-25 16:14:49,001:INFO:Initializing Decision Tree Classifier
2023-05-25 16:14:49,001:INFO:Total runtime is 0.1825353781382243 minutes
2023-05-25 16:14:49,004:INFO:SubProcess create_model() called ==================================
2023-05-25 16:14:49,005:INFO:Initializing create_model()
2023-05-25 16:14:49,005:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:14:49,005:INFO:Checking exceptions
2023-05-25 16:14:49,005:INFO:Importing libraries
2023-05-25 16:14:49,005:INFO:Copying training dataset
2023-05-25 16:14:49,009:INFO:Defining folds
2023-05-25 16:14:49,009:INFO:Declaring metric variables
2023-05-25 16:14:49,012:INFO:Importing untrained model
2023-05-25 16:14:49,015:INFO:Decision Tree Classifier Imported successfully
2023-05-25 16:14:49,021:INFO:Starting cross validation
2023-05-25 16:14:49,022:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:14:49,305:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,306:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,307:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,334:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,336:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,338:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,354:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,354:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,356:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,356:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,357:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:49,358:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,358:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,361:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,362:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,363:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:49,364:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,365:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,367:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,368:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,369:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,370:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,372:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,382:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,383:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,385:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:49,385:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,399:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,401:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,402:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,415:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,417:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,418:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:49,945:INFO:Calculating mean and std
2023-05-25 16:14:49,946:INFO:Creating metrics dataframe
2023-05-25 16:14:50,052:INFO:Uploading results into container
2023-05-25 16:14:50,052:INFO:Uploading model into container now
2023-05-25 16:14:50,053:INFO:_master_model_container: 4
2023-05-25 16:14:50,053:INFO:_display_container: 2
2023-05-25 16:14:50,053:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1613, splitter='best')
2023-05-25 16:14:50,053:INFO:create_model() successfully completed......................................
2023-05-25 16:14:50,181:INFO:SubProcess create_model() end ==================================
2023-05-25 16:14:50,181:INFO:Creating metrics dataframe
2023-05-25 16:14:50,191:INFO:Initializing SVM - Linear Kernel
2023-05-25 16:14:50,191:INFO:Total runtime is 0.20236417452494304 minutes
2023-05-25 16:14:50,195:INFO:SubProcess create_model() called ==================================
2023-05-25 16:14:50,195:INFO:Initializing create_model()
2023-05-25 16:14:50,195:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:14:50,195:INFO:Checking exceptions
2023-05-25 16:14:50,195:INFO:Importing libraries
2023-05-25 16:14:50,195:INFO:Copying training dataset
2023-05-25 16:14:50,200:INFO:Defining folds
2023-05-25 16:14:50,200:INFO:Declaring metric variables
2023-05-25 16:14:50,203:INFO:Importing untrained model
2023-05-25 16:14:50,208:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 16:14:50,213:INFO:Starting cross validation
2023-05-25 16:14:50,214:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:14:50,504:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:14:50,505:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,507:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,509:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:50,509:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,533:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:14:50,534:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,535:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:14:50,535:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,536:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,536:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:50,537:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,538:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,539:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:50,540:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,547:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:14:50,548:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,548:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:14:50,549:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,549:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,550:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:50,551:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,551:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,552:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:50,554:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,554:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:14:50,555:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:14:50,555:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,555:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:14:50,556:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,557:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,557:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,557:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:50,557:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,558:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:50,558:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:50,558:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,558:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,559:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,583:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:14:50,584:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,585:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:50,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,590:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:14:50,591:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,592:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:50,593:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:50,593:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,127:INFO:Calculating mean and std
2023-05-25 16:14:51,128:INFO:Creating metrics dataframe
2023-05-25 16:14:51,219:INFO:Uploading results into container
2023-05-25 16:14:51,220:INFO:Uploading model into container now
2023-05-25 16:14:51,220:INFO:_master_model_container: 5
2023-05-25 16:14:51,220:INFO:_display_container: 2
2023-05-25 16:14:51,221:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1613, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 16:14:51,221:INFO:create_model() successfully completed......................................
2023-05-25 16:14:51,343:INFO:SubProcess create_model() end ==================================
2023-05-25 16:14:51,343:INFO:Creating metrics dataframe
2023-05-25 16:14:51,353:INFO:Initializing Ridge Classifier
2023-05-25 16:14:51,353:INFO:Total runtime is 0.22173286279042562 minutes
2023-05-25 16:14:51,356:INFO:SubProcess create_model() called ==================================
2023-05-25 16:14:51,356:INFO:Initializing create_model()
2023-05-25 16:14:51,356:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:14:51,356:INFO:Checking exceptions
2023-05-25 16:14:51,356:INFO:Importing libraries
2023-05-25 16:14:51,356:INFO:Copying training dataset
2023-05-25 16:14:51,362:INFO:Defining folds
2023-05-25 16:14:51,362:INFO:Declaring metric variables
2023-05-25 16:14:51,365:INFO:Importing untrained model
2023-05-25 16:14:51,369:INFO:Ridge Classifier Imported successfully
2023-05-25 16:14:51,375:INFO:Starting cross validation
2023-05-25 16:14:51,376:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:14:51,582:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:14:51,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,585:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:51,586:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:14:51,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,588:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:14:51,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,589:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:51,589:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,589:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,590:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:51,591:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,592:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:14:51,592:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,594:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,595:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:51,596:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,615:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:14:51,616:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,618:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,619:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:51,620:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,638:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:14:51,638:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,640:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:14:51,640:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,640:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,641:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:51,641:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,642:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,643:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:51,644:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,651:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:14:51,652:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,652:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:14:51,653:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,654:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,654:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,654:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:14:51,655:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:51,655:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,655:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:51,655:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,656:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,657:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:51,658:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:51,659:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:52,211:INFO:Calculating mean and std
2023-05-25 16:14:52,212:INFO:Creating metrics dataframe
2023-05-25 16:14:52,327:INFO:Uploading results into container
2023-05-25 16:14:52,327:INFO:Uploading model into container now
2023-05-25 16:14:52,327:INFO:_master_model_container: 6
2023-05-25 16:14:52,328:INFO:_display_container: 2
2023-05-25 16:14:52,328:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1613, solver='auto',
                tol=0.0001)
2023-05-25 16:14:52,328:INFO:create_model() successfully completed......................................
2023-05-25 16:14:52,448:INFO:SubProcess create_model() end ==================================
2023-05-25 16:14:52,449:INFO:Creating metrics dataframe
2023-05-25 16:14:52,458:INFO:Initializing Random Forest Classifier
2023-05-25 16:14:52,459:INFO:Total runtime is 0.2401716113090515 minutes
2023-05-25 16:14:52,461:INFO:SubProcess create_model() called ==================================
2023-05-25 16:14:52,462:INFO:Initializing create_model()
2023-05-25 16:14:52,462:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:14:52,462:INFO:Checking exceptions
2023-05-25 16:14:52,462:INFO:Importing libraries
2023-05-25 16:14:52,462:INFO:Copying training dataset
2023-05-25 16:14:52,467:INFO:Defining folds
2023-05-25 16:14:52,467:INFO:Declaring metric variables
2023-05-25 16:14:52,470:INFO:Importing untrained model
2023-05-25 16:14:52,473:INFO:Random Forest Classifier Imported successfully
2023-05-25 16:14:52,478:INFO:Starting cross validation
2023-05-25 16:14:52,479:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:14:53,755:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,757:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,758:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:53,759:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,771:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,772:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,773:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:53,774:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,777:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,778:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,779:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:53,780:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,791:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,793:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,794:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:53,795:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,823:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,825:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:53,827:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,830:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,831:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,832:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:53,833:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,852:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,854:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:53,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,880:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,881:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,882:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:53,882:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,937:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,938:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:53,938:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:53,939:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:54,016:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:54,018:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:54,018:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:54,019:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:54,450:INFO:Calculating mean and std
2023-05-25 16:14:54,451:INFO:Creating metrics dataframe
2023-05-25 16:14:54,562:INFO:Uploading results into container
2023-05-25 16:14:54,562:INFO:Uploading model into container now
2023-05-25 16:14:54,562:INFO:_master_model_container: 7
2023-05-25 16:14:54,562:INFO:_display_container: 2
2023-05-25 16:14:54,563:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1613, verbose=0, warm_start=False)
2023-05-25 16:14:54,563:INFO:create_model() successfully completed......................................
2023-05-25 16:14:54,694:INFO:SubProcess create_model() end ==================================
2023-05-25 16:14:54,695:INFO:Creating metrics dataframe
2023-05-25 16:14:54,705:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 16:14:54,705:INFO:Total runtime is 0.2776024023691813 minutes
2023-05-25 16:14:54,709:INFO:SubProcess create_model() called ==================================
2023-05-25 16:14:54,709:INFO:Initializing create_model()
2023-05-25 16:14:54,710:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:14:54,710:INFO:Checking exceptions
2023-05-25 16:14:54,710:INFO:Importing libraries
2023-05-25 16:14:54,710:INFO:Copying training dataset
2023-05-25 16:14:54,715:INFO:Defining folds
2023-05-25 16:14:54,715:INFO:Declaring metric variables
2023-05-25 16:14:54,718:INFO:Importing untrained model
2023-05-25 16:14:54,721:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 16:14:54,727:INFO:Starting cross validation
2023-05-25 16:14:54,728:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:14:55,037:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,039:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,044:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,045:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:55,046:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,054:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,055:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,056:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,056:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:55,056:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,057:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,057:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:55,058:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,058:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,060:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,061:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,062:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,062:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,064:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,065:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,066:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,066:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,068:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,077:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,078:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,080:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,084:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,085:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,086:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:55,088:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:55,718:INFO:Calculating mean and std
2023-05-25 16:14:55,719:INFO:Creating metrics dataframe
2023-05-25 16:14:55,831:INFO:Uploading results into container
2023-05-25 16:14:55,831:INFO:Uploading model into container now
2023-05-25 16:14:55,831:INFO:_master_model_container: 8
2023-05-25 16:14:55,831:INFO:_display_container: 2
2023-05-25 16:14:55,832:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 16:14:55,832:INFO:create_model() successfully completed......................................
2023-05-25 16:14:55,952:INFO:SubProcess create_model() end ==================================
2023-05-25 16:14:55,952:INFO:Creating metrics dataframe
2023-05-25 16:14:55,962:INFO:Initializing Ada Boost Classifier
2023-05-25 16:14:55,962:INFO:Total runtime is 0.2985524614651998 minutes
2023-05-25 16:14:55,965:INFO:SubProcess create_model() called ==================================
2023-05-25 16:14:55,966:INFO:Initializing create_model()
2023-05-25 16:14:55,966:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:14:55,966:INFO:Checking exceptions
2023-05-25 16:14:55,966:INFO:Importing libraries
2023-05-25 16:14:55,966:INFO:Copying training dataset
2023-05-25 16:14:55,971:INFO:Defining folds
2023-05-25 16:14:55,971:INFO:Declaring metric variables
2023-05-25 16:14:55,974:INFO:Importing untrained model
2023-05-25 16:14:55,978:INFO:Ada Boost Classifier Imported successfully
2023-05-25 16:14:55,983:INFO:Starting cross validation
2023-05-25 16:14:55,985:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:14:56,736:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,738:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,739:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:56,739:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,770:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,772:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,774:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,787:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,791:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,792:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:56,793:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,794:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,795:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,796:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:56,797:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,798:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,798:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,800:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,801:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:56,801:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,801:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,802:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:56,802:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,803:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,803:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,804:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:56,805:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,814:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,815:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,816:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,825:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,827:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,828:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:56,829:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,835:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:56,838:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:14:56,839:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:14:57,437:INFO:Calculating mean and std
2023-05-25 16:14:57,438:INFO:Creating metrics dataframe
2023-05-25 16:14:57,556:INFO:Uploading results into container
2023-05-25 16:14:57,557:INFO:Uploading model into container now
2023-05-25 16:14:57,557:INFO:_master_model_container: 9
2023-05-25 16:14:57,557:INFO:_display_container: 2
2023-05-25 16:14:57,557:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1613)
2023-05-25 16:14:57,558:INFO:create_model() successfully completed......................................
2023-05-25 16:14:57,681:INFO:SubProcess create_model() end ==================================
2023-05-25 16:14:57,681:INFO:Creating metrics dataframe
2023-05-25 16:14:57,691:INFO:Initializing Gradient Boosting Classifier
2023-05-25 16:14:57,691:INFO:Total runtime is 0.32737686236699426 minutes
2023-05-25 16:14:57,693:INFO:SubProcess create_model() called ==================================
2023-05-25 16:14:57,694:INFO:Initializing create_model()
2023-05-25 16:14:57,694:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:14:57,694:INFO:Checking exceptions
2023-05-25 16:14:57,694:INFO:Importing libraries
2023-05-25 16:14:57,694:INFO:Copying training dataset
2023-05-25 16:14:57,699:INFO:Defining folds
2023-05-25 16:14:57,699:INFO:Declaring metric variables
2023-05-25 16:14:57,702:INFO:Importing untrained model
2023-05-25 16:14:57,705:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 16:14:57,710:INFO:Starting cross validation
2023-05-25 16:14:57,711:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:15:05,870:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,871:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,872:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,886:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,887:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,889:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,904:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,906:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,907:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:05,908:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,912:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,913:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,914:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,943:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,945:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,946:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,961:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,963:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:05,965:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:06,033:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:06,034:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:06,035:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:06,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:06,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:06,042:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:06,065:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:06,067:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:06,069:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:06,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:06,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:06,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:06,104:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:06,600:INFO:Calculating mean and std
2023-05-25 16:15:06,601:INFO:Creating metrics dataframe
2023-05-25 16:15:06,726:INFO:Uploading results into container
2023-05-25 16:15:06,726:INFO:Uploading model into container now
2023-05-25 16:15:06,727:INFO:_master_model_container: 10
2023-05-25 16:15:06,727:INFO:_display_container: 2
2023-05-25 16:15:06,727:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1613, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 16:15:06,727:INFO:create_model() successfully completed......................................
2023-05-25 16:15:06,846:INFO:SubProcess create_model() end ==================================
2023-05-25 16:15:06,847:INFO:Creating metrics dataframe
2023-05-25 16:15:06,857:INFO:Initializing Linear Discriminant Analysis
2023-05-25 16:15:06,857:INFO:Total runtime is 0.48014475504557297 minutes
2023-05-25 16:15:06,861:INFO:SubProcess create_model() called ==================================
2023-05-25 16:15:06,861:INFO:Initializing create_model()
2023-05-25 16:15:06,861:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:15:06,861:INFO:Checking exceptions
2023-05-25 16:15:06,861:INFO:Importing libraries
2023-05-25 16:15:06,862:INFO:Copying training dataset
2023-05-25 16:15:06,866:INFO:Defining folds
2023-05-25 16:15:06,866:INFO:Declaring metric variables
2023-05-25 16:15:06,869:INFO:Importing untrained model
2023-05-25 16:15:06,872:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 16:15:06,878:INFO:Starting cross validation
2023-05-25 16:15:06,879:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:15:07,141:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,142:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,148:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,149:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,151:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,165:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,167:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,169:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,174:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,176:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,178:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,181:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,183:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,185:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,185:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,186:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,187:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,190:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,193:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,194:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,195:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,196:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,197:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,213:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,216:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,216:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,217:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,218:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,220:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:07,858:INFO:Calculating mean and std
2023-05-25 16:15:07,859:INFO:Creating metrics dataframe
2023-05-25 16:15:07,977:INFO:Uploading results into container
2023-05-25 16:15:07,978:INFO:Uploading model into container now
2023-05-25 16:15:07,978:INFO:_master_model_container: 11
2023-05-25 16:15:07,978:INFO:_display_container: 2
2023-05-25 16:15:07,978:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 16:15:07,978:INFO:create_model() successfully completed......................................
2023-05-25 16:15:08,099:INFO:SubProcess create_model() end ==================================
2023-05-25 16:15:08,099:INFO:Creating metrics dataframe
2023-05-25 16:15:08,110:INFO:Initializing Extra Trees Classifier
2023-05-25 16:15:08,110:INFO:Total runtime is 0.5010214765866599 minutes
2023-05-25 16:15:08,113:INFO:SubProcess create_model() called ==================================
2023-05-25 16:15:08,113:INFO:Initializing create_model()
2023-05-25 16:15:08,113:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:15:08,114:INFO:Checking exceptions
2023-05-25 16:15:08,114:INFO:Importing libraries
2023-05-25 16:15:08,114:INFO:Copying training dataset
2023-05-25 16:15:08,118:INFO:Defining folds
2023-05-25 16:15:08,119:INFO:Declaring metric variables
2023-05-25 16:15:08,122:INFO:Importing untrained model
2023-05-25 16:15:08,125:INFO:Extra Trees Classifier Imported successfully
2023-05-25 16:15:08,132:INFO:Starting cross validation
2023-05-25 16:15:08,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:15:09,095:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,098:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,099:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:09,100:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,121:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,122:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,123:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,124:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,124:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:09,125:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,125:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,126:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:09,126:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,127:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,127:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:09,128:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,132:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,134:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,135:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:09,136:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,147:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,148:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,150:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:09,150:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,162:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,164:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,165:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:09,166:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,170:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,172:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,173:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:09,174:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,200:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,202:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,204:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,332:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,333:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,333:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:09,334:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:09,894:INFO:Calculating mean and std
2023-05-25 16:15:09,895:INFO:Creating metrics dataframe
2023-05-25 16:15:10,022:INFO:Uploading results into container
2023-05-25 16:15:10,023:INFO:Uploading model into container now
2023-05-25 16:15:10,024:INFO:_master_model_container: 12
2023-05-25 16:15:10,024:INFO:_display_container: 2
2023-05-25 16:15:10,024:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1613, verbose=0, warm_start=False)
2023-05-25 16:15:10,024:INFO:create_model() successfully completed......................................
2023-05-25 16:15:10,147:INFO:SubProcess create_model() end ==================================
2023-05-25 16:15:10,147:INFO:Creating metrics dataframe
2023-05-25 16:15:10,159:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 16:15:10,159:INFO:Total runtime is 0.5351704637209576 minutes
2023-05-25 16:15:10,162:INFO:SubProcess create_model() called ==================================
2023-05-25 16:15:10,162:INFO:Initializing create_model()
2023-05-25 16:15:10,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:15:10,163:INFO:Checking exceptions
2023-05-25 16:15:10,163:INFO:Importing libraries
2023-05-25 16:15:10,163:INFO:Copying training dataset
2023-05-25 16:15:10,168:INFO:Defining folds
2023-05-25 16:15:10,168:INFO:Declaring metric variables
2023-05-25 16:15:10,171:INFO:Importing untrained model
2023-05-25 16:15:10,174:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 16:15:10,184:INFO:Starting cross validation
2023-05-25 16:15:10,186:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:15:12,811:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,814:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,815:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:12,816:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,818:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,819:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:12,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,823:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,825:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,825:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:12,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,901:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,904:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,905:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:12,906:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,934:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,936:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,937:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:12,938:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,958:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,960:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,973:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,975:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:12,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:13,009:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:13,011:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:13,013:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:13,014:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:13,069:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:13,070:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:13,071:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:13,071:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:13,116:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:13,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:13,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:13,693:INFO:Calculating mean and std
2023-05-25 16:15:13,694:INFO:Creating metrics dataframe
2023-05-25 16:15:13,826:INFO:Uploading results into container
2023-05-25 16:15:13,827:INFO:Uploading model into container now
2023-05-25 16:15:13,827:INFO:_master_model_container: 13
2023-05-25 16:15:13,827:INFO:_display_container: 2
2023-05-25 16:15:13,828:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1613, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 16:15:13,828:INFO:create_model() successfully completed......................................
2023-05-25 16:15:13,950:INFO:SubProcess create_model() end ==================================
2023-05-25 16:15:13,950:INFO:Creating metrics dataframe
2023-05-25 16:15:13,963:INFO:Initializing Dummy Classifier
2023-05-25 16:15:13,963:INFO:Total runtime is 0.598564644654592 minutes
2023-05-25 16:15:13,966:INFO:SubProcess create_model() called ==================================
2023-05-25 16:15:13,966:INFO:Initializing create_model()
2023-05-25 16:15:13,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5EED4490>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:15:13,967:INFO:Checking exceptions
2023-05-25 16:15:13,967:INFO:Importing libraries
2023-05-25 16:15:13,967:INFO:Copying training dataset
2023-05-25 16:15:13,972:INFO:Defining folds
2023-05-25 16:15:13,972:INFO:Declaring metric variables
2023-05-25 16:15:13,975:INFO:Importing untrained model
2023-05-25 16:15:13,978:INFO:Dummy Classifier Imported successfully
2023-05-25 16:15:13,984:INFO:Starting cross validation
2023-05-25 16:15:13,985:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:15:14,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:14,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,270:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,271:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:14,272:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,273:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,275:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,276:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:14,277:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,283:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,284:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,285:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:14,285:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,285:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,287:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,287:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:14,288:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,288:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,290:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,291:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:14,292:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,309:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,309:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,311:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,311:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,312:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:14,312:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:14,313:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,313:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,313:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,315:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:14,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,327:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,329:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:14,331:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:15:14,332:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:15:15,115:INFO:Calculating mean and std
2023-05-25 16:15:15,116:INFO:Creating metrics dataframe
2023-05-25 16:15:15,247:INFO:Uploading results into container
2023-05-25 16:15:15,247:INFO:Uploading model into container now
2023-05-25 16:15:15,248:INFO:_master_model_container: 14
2023-05-25 16:15:15,248:INFO:_display_container: 2
2023-05-25 16:15:15,248:INFO:DummyClassifier(constant=None, random_state=1613, strategy='prior')
2023-05-25 16:15:15,248:INFO:create_model() successfully completed......................................
2023-05-25 16:15:15,376:INFO:SubProcess create_model() end ==================================
2023-05-25 16:15:15,376:INFO:Creating metrics dataframe
2023-05-25 16:15:15,395:INFO:Initializing create_model()
2023-05-25 16:15:15,395:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:15:15,395:INFO:Checking exceptions
2023-05-25 16:15:15,397:INFO:Importing libraries
2023-05-25 16:15:15,397:INFO:Copying training dataset
2023-05-25 16:15:15,400:INFO:Defining folds
2023-05-25 16:15:15,400:INFO:Declaring metric variables
2023-05-25 16:15:15,400:INFO:Importing untrained model
2023-05-25 16:15:15,400:INFO:Declaring custom model
2023-05-25 16:15:15,401:INFO:Logistic Regression Imported successfully
2023-05-25 16:15:15,402:INFO:Cross validation set to False
2023-05-25 16:15:15,402:INFO:Fitting Model
2023-05-25 16:15:15,961:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:15:16,058:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 16:15:16,058:INFO:create_model() successfully completed......................................
2023-05-25 16:15:16,214:INFO:_master_model_container: 14
2023-05-25 16:15:16,214:INFO:_display_container: 2
2023-05-25 16:15:16,214:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 16:15:16,214:INFO:compare_models() successfully completed......................................
2023-05-25 16:17:06,627:INFO:Initializing tune_model()
2023-05-25 16:17:06,627:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>)
2023-05-25 16:17:06,627:INFO:Checking exceptions
2023-05-25 16:17:06,644:INFO:Copying training dataset
2023-05-25 16:17:06,647:INFO:Checking base model
2023-05-25 16:17:06,647:INFO:Base model : Logistic Regression
2023-05-25 16:17:06,650:INFO:Declaring metric variables
2023-05-25 16:17:06,653:INFO:Defining Hyperparameters
2023-05-25 16:17:06,781:INFO:Tuning with n_jobs=-1
2023-05-25 16:17:06,781:INFO:Initializing RandomizedSearchCV
2023-05-25 16:17:07,745:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,746:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,781:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,786:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,795:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,808:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,815:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,859:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,865:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,871:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,887:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,911:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,916:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,933:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:07,984:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,056:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,072:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,086:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,104:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,126:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,152:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,168:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,179:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,192:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,195:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,240:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,331:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,336:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,386:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,415:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:09,425:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:10,159:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:10,173:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:10,193:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:10,248:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:10,272:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:10,285:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:10,287:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:10,501:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:10,562:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:10,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:10,804:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:10,879:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:10,960:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:11,135:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:11,190:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:11,309:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:11,439:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:11,574:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:11,671:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:11,746:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:11,940:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:12,026:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:12,139:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:12,307:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:12,379:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:12,523:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:12,639:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:12,759:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:12,822:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:12,942:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:13,089:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:13,247:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:13,317:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:13,456:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:13,572:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:13,690:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:13,822:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:13,962:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:14,102:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:14,199:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:14,345:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:14,456:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:14,566:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:14,720:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:14,804:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:14,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:15,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:15,203:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:15,342:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:15,476:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:15,585:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:15,729:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:15,858:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:15,981:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:16,104:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:16,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:16,349:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:16,506:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:16,634:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:16,753:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:16,841:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:17,009:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:17,152:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:17,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:17,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:17,529:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:17,628:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:17,784:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:21,096:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 7.593000000000001}
2023-05-25 16:17:21,096:INFO:Hyperparameter search completed
2023-05-25 16:17:21,096:INFO:SubProcess create_model() called ==================================
2023-05-25 16:17:21,097:INFO:Initializing create_model()
2023-05-25 16:17:21,097:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2EA70>, model_only=True, return_train_score=False, kwargs={'class_weight': {}, 'C': 7.593000000000001})
2023-05-25 16:17:21,097:INFO:Checking exceptions
2023-05-25 16:17:21,097:INFO:Importing libraries
2023-05-25 16:17:21,097:INFO:Copying training dataset
2023-05-25 16:17:21,101:INFO:Defining folds
2023-05-25 16:17:21,102:INFO:Declaring metric variables
2023-05-25 16:17:21,104:INFO:Importing untrained model
2023-05-25 16:17:21,104:INFO:Declaring custom model
2023-05-25 16:17:21,107:INFO:Logistic Regression Imported successfully
2023-05-25 16:17:21,113:INFO:Starting cross validation
2023-05-25 16:17:21,114:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:17:21,377:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,379:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,380:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:21,380:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,383:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,385:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,385:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,386:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:21,387:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,394:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,395:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,397:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:21,398:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,404:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,405:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,406:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:21,407:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,425:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,426:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,427:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,428:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,429:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:21,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,432:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,434:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,435:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,440:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,441:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,443:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:21,443:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:21,444:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:21,444:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:22,477:INFO:Calculating mean and std
2023-05-25 16:17:22,478:INFO:Creating metrics dataframe
2023-05-25 16:17:22,482:INFO:Finalizing model
2023-05-25 16:17:23,097:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:17:23,232:INFO:Uploading results into container
2023-05-25 16:17:23,232:INFO:Uploading model into container now
2023-05-25 16:17:23,233:INFO:_master_model_container: 15
2023-05-25 16:17:23,233:INFO:_display_container: 3
2023-05-25 16:17:23,233:INFO:LogisticRegression(C=7.593000000000001, class_weight={}, dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 16:17:23,233:INFO:create_model() successfully completed......................................
2023-05-25 16:17:23,358:INFO:SubProcess create_model() end ==================================
2023-05-25 16:17:23,358:INFO:choose_better activated
2023-05-25 16:17:23,361:INFO:SubProcess create_model() called ==================================
2023-05-25 16:17:23,361:INFO:Initializing create_model()
2023-05-25 16:17:23,361:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC27070>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:17:23,361:INFO:Checking exceptions
2023-05-25 16:17:23,362:INFO:Importing libraries
2023-05-25 16:17:23,362:INFO:Copying training dataset
2023-05-25 16:17:23,366:INFO:Defining folds
2023-05-25 16:17:23,367:INFO:Declaring metric variables
2023-05-25 16:17:23,367:INFO:Importing untrained model
2023-05-25 16:17:23,367:INFO:Declaring custom model
2023-05-25 16:17:23,367:INFO:Logistic Regression Imported successfully
2023-05-25 16:17:23,367:INFO:Starting cross validation
2023-05-25 16:17:23,368:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:17:23,635:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,637:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,638:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,638:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,639:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,639:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,640:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,640:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,640:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:23,641:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,660:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,662:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,664:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:23,664:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,664:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,665:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,666:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:23,666:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,667:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,669:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,669:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,670:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:23,670:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:23,671:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,671:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,681:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,685:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:23,685:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,686:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,687:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,688:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:17:23,689:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,699:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,701:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:23,703:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:17:24,758:INFO:Calculating mean and std
2023-05-25 16:17:24,759:INFO:Creating metrics dataframe
2023-05-25 16:17:24,760:INFO:Finalizing model
2023-05-25 16:17:25,028:INFO:Uploading results into container
2023-05-25 16:17:25,029:INFO:Uploading model into container now
2023-05-25 16:17:25,029:INFO:_master_model_container: 16
2023-05-25 16:17:25,029:INFO:_display_container: 4
2023-05-25 16:17:25,029:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 16:17:25,029:INFO:create_model() successfully completed......................................
2023-05-25 16:17:25,157:INFO:SubProcess create_model() end ==================================
2023-05-25 16:17:25,158:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.4037
2023-05-25 16:17:25,158:INFO:LogisticRegression(C=7.593000000000001, class_weight={}, dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.4106
2023-05-25 16:17:25,158:INFO:LogisticRegression(C=7.593000000000001, class_weight={}, dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-05-25 16:17:25,159:INFO:choose_better completed
2023-05-25 16:17:25,167:INFO:_master_model_container: 16
2023-05-25 16:17:25,168:INFO:_display_container: 3
2023-05-25 16:17:25,168:INFO:LogisticRegression(C=7.593000000000001, class_weight={}, dual=False,
                   fit_intercept=True, intercept_scaling=1, l1_ratio=None,
                   max_iter=1000, multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1613, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 16:17:25,168:INFO:tune_model() successfully completed......................................
2023-05-25 16:27:51,902:INFO:PyCaret ClassificationExperiment
2023-05-25 16:27:51,902:INFO:Logging name: clf-default-name
2023-05-25 16:27:51,902:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 16:27:51,902:INFO:version 3.0.2
2023-05-25 16:27:51,902:INFO:Initializing setup()
2023-05-25 16:27:51,902:INFO:self.USI: 2a30
2023-05-25 16:27:51,902:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 16:27:51,902:INFO:Checking environment
2023-05-25 16:27:51,902:INFO:python_version: 3.10.9
2023-05-25 16:27:51,902:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 16:27:51,902:INFO:machine: AMD64
2023-05-25 16:27:51,902:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 16:27:51,902:INFO:Memory: svmem(total=17112055808, available=7838625792, percent=54.2, used=9273430016, free=7838625792)
2023-05-25 16:27:51,902:INFO:Physical Core: 8
2023-05-25 16:27:51,902:INFO:Logical Core: 16
2023-05-25 16:27:51,902:INFO:Checking libraries
2023-05-25 16:27:51,902:INFO:System:
2023-05-25 16:27:51,902:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 16:27:51,903:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 16:27:51,903:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 16:27:51,903:INFO:PyCaret required dependencies:
2023-05-25 16:27:51,903:INFO:                 pip: 22.3.1
2023-05-25 16:27:51,903:INFO:          setuptools: 65.6.3
2023-05-25 16:27:51,903:INFO:             pycaret: 3.0.2
2023-05-25 16:27:51,903:INFO:             IPython: 8.10.0
2023-05-25 16:27:51,903:INFO:          ipywidgets: 7.6.5
2023-05-25 16:27:51,903:INFO:                tqdm: 4.64.1
2023-05-25 16:27:51,903:INFO:               numpy: 1.23.5
2023-05-25 16:27:51,903:INFO:              pandas: 1.5.3
2023-05-25 16:27:51,903:INFO:              jinja2: 3.1.2
2023-05-25 16:27:51,903:INFO:               scipy: 1.10.0
2023-05-25 16:27:51,903:INFO:              joblib: 1.1.1
2023-05-25 16:27:51,903:INFO:             sklearn: 1.2.1
2023-05-25 16:27:51,903:INFO:                pyod: 1.0.9
2023-05-25 16:27:51,903:INFO:            imblearn: 0.10.1
2023-05-25 16:27:51,903:INFO:   category_encoders: 2.6.1
2023-05-25 16:27:51,903:INFO:            lightgbm: 3.3.5
2023-05-25 16:27:51,903:INFO:               numba: 0.56.4
2023-05-25 16:27:51,904:INFO:            requests: 2.28.1
2023-05-25 16:27:51,904:INFO:          matplotlib: 3.7.0
2023-05-25 16:27:51,904:INFO:          scikitplot: 0.3.7
2023-05-25 16:27:51,904:INFO:         yellowbrick: 1.5
2023-05-25 16:27:51,904:INFO:              plotly: 5.9.0
2023-05-25 16:27:51,904:INFO:             kaleido: 0.2.1
2023-05-25 16:27:51,904:INFO:         statsmodels: 0.13.5
2023-05-25 16:27:51,904:INFO:              sktime: 0.17.0
2023-05-25 16:27:51,904:INFO:               tbats: 1.1.3
2023-05-25 16:27:51,904:INFO:            pmdarima: 2.0.3
2023-05-25 16:27:51,904:INFO:              psutil: 5.9.0
2023-05-25 16:27:51,904:INFO:PyCaret optional dependencies:
2023-05-25 16:27:51,904:INFO:                shap: Not installed
2023-05-25 16:27:51,904:INFO:           interpret: Not installed
2023-05-25 16:27:51,904:INFO:                umap: Not installed
2023-05-25 16:27:51,904:INFO:    pandas_profiling: Not installed
2023-05-25 16:27:51,904:INFO:  explainerdashboard: Not installed
2023-05-25 16:27:51,904:INFO:             autoviz: Not installed
2023-05-25 16:27:51,904:INFO:           fairlearn: Not installed
2023-05-25 16:27:51,904:INFO:             xgboost: Not installed
2023-05-25 16:27:51,904:INFO:            catboost: Not installed
2023-05-25 16:27:51,904:INFO:              kmodes: Not installed
2023-05-25 16:27:51,905:INFO:             mlxtend: Not installed
2023-05-25 16:27:51,905:INFO:       statsforecast: Not installed
2023-05-25 16:27:51,905:INFO:        tune_sklearn: Not installed
2023-05-25 16:27:51,905:INFO:                 ray: Not installed
2023-05-25 16:27:51,905:INFO:            hyperopt: Not installed
2023-05-25 16:27:51,905:INFO:              optuna: Not installed
2023-05-25 16:27:51,905:INFO:               skopt: Not installed
2023-05-25 16:27:51,905:INFO:              mlflow: Not installed
2023-05-25 16:27:51,905:INFO:              gradio: Not installed
2023-05-25 16:27:51,905:INFO:             fastapi: Not installed
2023-05-25 16:27:51,905:INFO:             uvicorn: Not installed
2023-05-25 16:27:51,905:INFO:              m2cgen: Not installed
2023-05-25 16:27:51,905:INFO:           evidently: Not installed
2023-05-25 16:27:51,905:INFO:               fugue: Not installed
2023-05-25 16:27:51,905:INFO:           streamlit: Not installed
2023-05-25 16:27:51,905:INFO:             prophet: Not installed
2023-05-25 16:27:51,905:INFO:None
2023-05-25 16:27:51,905:INFO:Set up data.
2023-05-25 16:27:51,913:INFO:Set up train/test split.
2023-05-25 16:27:51,918:INFO:Set up index.
2023-05-25 16:27:51,920:INFO:Set up folding strategy.
2023-05-25 16:27:51,920:INFO:Assigning column types.
2023-05-25 16:27:51,923:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 16:27:51,962:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:27:51,963:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:27:51,987:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:51,988:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,028:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:27:52,028:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:27:52,053:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,054:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,054:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 16:27:52,094:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:27:52,119:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,120:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,160:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:27:52,184:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,185:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 16:27:52,248:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,249:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,314:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,314:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,315:INFO:Preparing preprocessing pipeline...
2023-05-25 16:27:52,316:INFO:Set up label encoding.
2023-05-25 16:27:52,316:INFO:Set up simple imputation.
2023-05-25 16:27:52,319:INFO:Set up encoding of categorical features.
2023-05-25 16:27:52,392:INFO:Finished creating preprocessing pipeline.
2023-05-25 16:27:52,399:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['APM', 'AssignToHotkeys',
                                             'UniqueHotkeys', 'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'NumberOfPACs', 'GapBet...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours'],
                                    transformer=TargetEncoder(cols=['Age',
                                                                    'HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 16:27:52,399:INFO:Creating final display dataframe.
2023-05-25 16:27:52,618:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      4595
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                (3338, 17)
5        Transformed data shape                                (3338, 17)
6   Transformed train set shape                                (2336, 17)
7    Transformed test set shape                                (1002, 17)
8              Numeric features                                        13
9          Categorical features                                         3
10                   Preprocess                                      True
11              Imputation type                                    simple
12           Numeric imputation                                      mean
13       Categorical imputation                                      mode
14     Maximum one-hot encoding                                        25
15              Encoding method                                      None
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                        10
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      2a30
2023-05-25 16:27:52,688:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,688:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,754:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:27:52,755:INFO:setup() successfully completed in 0.97s...............
2023-05-25 16:27:54,976:INFO:Initializing compare_models()
2023-05-25 16:27:54,976:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 16:27:54,976:INFO:Checking exceptions
2023-05-25 16:27:54,980:INFO:Preparing display monitor
2023-05-25 16:27:55,003:INFO:Initializing Logistic Regression
2023-05-25 16:27:55,003:INFO:Total runtime is 0.0 minutes
2023-05-25 16:27:55,006:INFO:SubProcess create_model() called ==================================
2023-05-25 16:27:55,006:INFO:Initializing create_model()
2023-05-25 16:27:55,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:27:55,006:INFO:Checking exceptions
2023-05-25 16:27:55,006:INFO:Importing libraries
2023-05-25 16:27:55,006:INFO:Copying training dataset
2023-05-25 16:27:55,011:INFO:Defining folds
2023-05-25 16:27:55,011:INFO:Declaring metric variables
2023-05-25 16:27:55,015:INFO:Importing untrained model
2023-05-25 16:27:55,019:INFO:Logistic Regression Imported successfully
2023-05-25 16:27:55,024:INFO:Starting cross validation
2023-05-25 16:27:55,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:00,761:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:28:00,772:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:28:00,782:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:28:00,792:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:28:00,796:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:28:00,798:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:28:00,801:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:28:00,804:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:28:00,808:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:28:00,835:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:28:00,964:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:00,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:00,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:00,968:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:00,970:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:00,972:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:00,973:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:00,974:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:00,974:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:00,975:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:00,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:00,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:00,978:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:00,980:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:00,982:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:00,983:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,003:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,005:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,005:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,005:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,006:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:01,008:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,008:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,008:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,009:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:01,010:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:01,011:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,011:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,022:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,024:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,026:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,027:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,029:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,030:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:01,031:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,048:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,051:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:01,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:01,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:02,191:INFO:Calculating mean and std
2023-05-25 16:28:02,192:INFO:Creating metrics dataframe
2023-05-25 16:28:02,384:INFO:Uploading results into container
2023-05-25 16:28:02,384:INFO:Uploading model into container now
2023-05-25 16:28:02,385:INFO:_master_model_container: 1
2023-05-25 16:28:02,385:INFO:_display_container: 2
2023-05-25 16:28:02,385:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4595, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 16:28:02,385:INFO:create_model() successfully completed......................................
2023-05-25 16:28:02,531:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:02,532:INFO:Creating metrics dataframe
2023-05-25 16:28:02,540:INFO:Initializing K Neighbors Classifier
2023-05-25 16:28:02,540:INFO:Total runtime is 0.12561261653900146 minutes
2023-05-25 16:28:02,543:INFO:SubProcess create_model() called ==================================
2023-05-25 16:28:02,544:INFO:Initializing create_model()
2023-05-25 16:28:02,544:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:02,544:INFO:Checking exceptions
2023-05-25 16:28:02,544:INFO:Importing libraries
2023-05-25 16:28:02,544:INFO:Copying training dataset
2023-05-25 16:28:02,548:INFO:Defining folds
2023-05-25 16:28:02,548:INFO:Declaring metric variables
2023-05-25 16:28:02,551:INFO:Importing untrained model
2023-05-25 16:28:02,554:INFO:K Neighbors Classifier Imported successfully
2023-05-25 16:28:02,561:INFO:Starting cross validation
2023-05-25 16:28:02,563:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:03,072:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:03,073:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:03,074:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:03,075:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:03,076:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:03,076:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:03,077:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:03,078:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:03,084:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:03,086:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:03,086:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:03,087:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:03,088:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:03,088:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:03,090:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:03,091:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,371:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,372:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,373:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:05,373:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,389:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,389:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,389:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,390:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,390:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,391:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,391:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:05,391:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:05,391:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,391:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:05,392:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,392:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,396:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,396:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,398:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,399:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,399:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:05,399:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,400:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:05,990:INFO:Calculating mean and std
2023-05-25 16:28:05,991:INFO:Creating metrics dataframe
2023-05-25 16:28:06,173:INFO:Uploading results into container
2023-05-25 16:28:06,174:INFO:Uploading model into container now
2023-05-25 16:28:06,174:INFO:_master_model_container: 2
2023-05-25 16:28:06,174:INFO:_display_container: 2
2023-05-25 16:28:06,175:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 16:28:06,175:INFO:create_model() successfully completed......................................
2023-05-25 16:28:06,296:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:06,296:INFO:Creating metrics dataframe
2023-05-25 16:28:06,305:INFO:Initializing Naive Bayes
2023-05-25 16:28:06,305:INFO:Total runtime is 0.18836952845255533 minutes
2023-05-25 16:28:06,308:INFO:SubProcess create_model() called ==================================
2023-05-25 16:28:06,308:INFO:Initializing create_model()
2023-05-25 16:28:06,308:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:06,308:INFO:Checking exceptions
2023-05-25 16:28:06,308:INFO:Importing libraries
2023-05-25 16:28:06,308:INFO:Copying training dataset
2023-05-25 16:28:06,313:INFO:Defining folds
2023-05-25 16:28:06,313:INFO:Declaring metric variables
2023-05-25 16:28:06,316:INFO:Importing untrained model
2023-05-25 16:28:06,320:INFO:Naive Bayes Imported successfully
2023-05-25 16:28:06,325:INFO:Starting cross validation
2023-05-25 16:28:06,326:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:06,635:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,636:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,638:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,645:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,646:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,649:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,650:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,651:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,652:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:06,653:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,653:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,655:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,655:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,657:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:06,657:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,658:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,658:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,659:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,660:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:06,660:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,674:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,676:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,677:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,681:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,681:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,682:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,683:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,685:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,697:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,698:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:06,699:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:06,699:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:07,782:INFO:Calculating mean and std
2023-05-25 16:28:07,783:INFO:Creating metrics dataframe
2023-05-25 16:28:07,972:INFO:Uploading results into container
2023-05-25 16:28:07,973:INFO:Uploading model into container now
2023-05-25 16:28:07,973:INFO:_master_model_container: 3
2023-05-25 16:28:07,973:INFO:_display_container: 2
2023-05-25 16:28:07,973:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 16:28:07,973:INFO:create_model() successfully completed......................................
2023-05-25 16:28:08,102:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:08,102:INFO:Creating metrics dataframe
2023-05-25 16:28:08,111:INFO:Initializing Decision Tree Classifier
2023-05-25 16:28:08,111:INFO:Total runtime is 0.21845995982487995 minutes
2023-05-25 16:28:08,114:INFO:SubProcess create_model() called ==================================
2023-05-25 16:28:08,115:INFO:Initializing create_model()
2023-05-25 16:28:08,115:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:08,115:INFO:Checking exceptions
2023-05-25 16:28:08,115:INFO:Importing libraries
2023-05-25 16:28:08,115:INFO:Copying training dataset
2023-05-25 16:28:08,119:INFO:Defining folds
2023-05-25 16:28:08,120:INFO:Declaring metric variables
2023-05-25 16:28:08,124:INFO:Importing untrained model
2023-05-25 16:28:08,127:INFO:Decision Tree Classifier Imported successfully
2023-05-25 16:28:08,132:INFO:Starting cross validation
2023-05-25 16:28:08,133:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:08,448:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,449:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,450:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:08,450:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,456:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,458:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,458:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:08,459:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,460:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,462:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,462:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,463:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,464:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,464:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,465:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,466:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,468:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,473:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,475:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,476:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,477:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,477:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,478:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,486:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,488:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,489:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,513:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,515:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,516:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,541:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,543:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:08,545:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:09,622:INFO:Calculating mean and std
2023-05-25 16:28:09,623:INFO:Creating metrics dataframe
2023-05-25 16:28:09,810:INFO:Uploading results into container
2023-05-25 16:28:09,810:INFO:Uploading model into container now
2023-05-25 16:28:09,811:INFO:_master_model_container: 4
2023-05-25 16:28:09,811:INFO:_display_container: 2
2023-05-25 16:28:09,811:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4595, splitter='best')
2023-05-25 16:28:09,811:INFO:create_model() successfully completed......................................
2023-05-25 16:28:09,939:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:09,939:INFO:Creating metrics dataframe
2023-05-25 16:28:09,949:INFO:Initializing SVM - Linear Kernel
2023-05-25 16:28:09,950:INFO:Total runtime is 0.2491053581237793 minutes
2023-05-25 16:28:09,953:INFO:SubProcess create_model() called ==================================
2023-05-25 16:28:09,953:INFO:Initializing create_model()
2023-05-25 16:28:09,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:09,953:INFO:Checking exceptions
2023-05-25 16:28:09,953:INFO:Importing libraries
2023-05-25 16:28:09,953:INFO:Copying training dataset
2023-05-25 16:28:09,957:INFO:Defining folds
2023-05-25 16:28:09,957:INFO:Declaring metric variables
2023-05-25 16:28:09,960:INFO:Importing untrained model
2023-05-25 16:28:09,964:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 16:28:09,968:INFO:Starting cross validation
2023-05-25 16:28:09,970:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:10,253:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:28:10,253:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,255:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,256:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:10,256:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,258:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:28:10,258:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,260:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,261:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:10,262:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,276:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:28:10,276:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,278:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:28:10,278:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,278:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,279:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:10,279:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,280:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,280:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:10,281:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,288:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:28:10,289:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,290:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,291:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:10,292:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,305:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:28:10,306:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,309:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,310:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:10,311:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,322:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:28:10,323:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,323:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:28:10,323:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,325:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,325:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:10,326:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,327:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,327:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:28:10,328:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,328:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:10,329:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,329:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,329:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:10,330:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,342:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:28:10,343:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,344:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:10,345:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:10,345:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,407:INFO:Calculating mean and std
2023-05-25 16:28:11,408:INFO:Creating metrics dataframe
2023-05-25 16:28:11,602:INFO:Uploading results into container
2023-05-25 16:28:11,603:INFO:Uploading model into container now
2023-05-25 16:28:11,603:INFO:_master_model_container: 5
2023-05-25 16:28:11,603:INFO:_display_container: 2
2023-05-25 16:28:11,604:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4595, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 16:28:11,604:INFO:create_model() successfully completed......................................
2023-05-25 16:28:11,725:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:11,725:INFO:Creating metrics dataframe
2023-05-25 16:28:11,734:INFO:Initializing Ridge Classifier
2023-05-25 16:28:11,735:INFO:Total runtime is 0.2788609266281128 minutes
2023-05-25 16:28:11,737:INFO:SubProcess create_model() called ==================================
2023-05-25 16:28:11,738:INFO:Initializing create_model()
2023-05-25 16:28:11,738:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:11,738:INFO:Checking exceptions
2023-05-25 16:28:11,738:INFO:Importing libraries
2023-05-25 16:28:11,738:INFO:Copying training dataset
2023-05-25 16:28:11,742:INFO:Defining folds
2023-05-25 16:28:11,742:INFO:Declaring metric variables
2023-05-25 16:28:11,746:INFO:Importing untrained model
2023-05-25 16:28:11,749:INFO:Ridge Classifier Imported successfully
2023-05-25 16:28:11,754:INFO:Starting cross validation
2023-05-25 16:28:11,754:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:11,953:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:28:11,953:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,954:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:28:11,954:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,954:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,955:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:11,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:11,957:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,965:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:28:11,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,967:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:11,968:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,975:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:28:11,975:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,978:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,979:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:11,980:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,985:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:28:11,986:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:28:11,986:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,986:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,988:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,988:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,989:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:28:11,989:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,990:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:11,990:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:11,990:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,991:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,991:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:11,991:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:11,992:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:12,008:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:28:12,009:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:12,010:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:12,012:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:12,013:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:12,017:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:28:12,018:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:12,019:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:28:12,020:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:12,020:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:12,021:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:12,022:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:12,022:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:12,023:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:12,024:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:13,091:INFO:Calculating mean and std
2023-05-25 16:28:13,092:INFO:Creating metrics dataframe
2023-05-25 16:28:13,266:INFO:Uploading results into container
2023-05-25 16:28:13,266:INFO:Uploading model into container now
2023-05-25 16:28:13,266:INFO:_master_model_container: 6
2023-05-25 16:28:13,266:INFO:_display_container: 2
2023-05-25 16:28:13,268:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4595, solver='auto',
                tol=0.0001)
2023-05-25 16:28:13,268:INFO:create_model() successfully completed......................................
2023-05-25 16:28:13,388:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:13,388:INFO:Creating metrics dataframe
2023-05-25 16:28:13,398:INFO:Initializing Random Forest Classifier
2023-05-25 16:28:13,398:INFO:Total runtime is 0.3065838853518168 minutes
2023-05-25 16:28:13,400:INFO:SubProcess create_model() called ==================================
2023-05-25 16:28:13,400:INFO:Initializing create_model()
2023-05-25 16:28:13,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:13,401:INFO:Checking exceptions
2023-05-25 16:28:13,401:INFO:Importing libraries
2023-05-25 16:28:13,401:INFO:Copying training dataset
2023-05-25 16:28:13,405:INFO:Defining folds
2023-05-25 16:28:13,405:INFO:Declaring metric variables
2023-05-25 16:28:13,408:INFO:Importing untrained model
2023-05-25 16:28:13,411:INFO:Random Forest Classifier Imported successfully
2023-05-25 16:28:13,417:INFO:Starting cross validation
2023-05-25 16:28:13,418:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:14,700:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,702:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,703:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:14,703:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,730:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,732:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,732:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,733:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:14,734:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,734:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,736:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:14,736:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,745:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,747:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,748:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:14,749:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,786:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,788:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,788:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,789:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:14,790:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,790:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,791:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:14,792:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,797:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,800:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,801:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:14,802:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,808:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,809:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,810:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:14,811:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,829:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,831:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,832:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:14,833:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,975:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,976:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:14,976:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:14,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:15,924:INFO:Calculating mean and std
2023-05-25 16:28:15,925:INFO:Creating metrics dataframe
2023-05-25 16:28:16,120:INFO:Uploading results into container
2023-05-25 16:28:16,121:INFO:Uploading model into container now
2023-05-25 16:28:16,121:INFO:_master_model_container: 7
2023-05-25 16:28:16,121:INFO:_display_container: 2
2023-05-25 16:28:16,122:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4595, verbose=0, warm_start=False)
2023-05-25 16:28:16,122:INFO:create_model() successfully completed......................................
2023-05-25 16:28:16,246:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:16,246:INFO:Creating metrics dataframe
2023-05-25 16:28:16,258:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 16:28:16,258:INFO:Total runtime is 0.3542395830154419 minutes
2023-05-25 16:28:16,260:INFO:SubProcess create_model() called ==================================
2023-05-25 16:28:16,261:INFO:Initializing create_model()
2023-05-25 16:28:16,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:16,261:INFO:Checking exceptions
2023-05-25 16:28:16,261:INFO:Importing libraries
2023-05-25 16:28:16,261:INFO:Copying training dataset
2023-05-25 16:28:16,265:INFO:Defining folds
2023-05-25 16:28:16,265:INFO:Declaring metric variables
2023-05-25 16:28:16,269:INFO:Importing untrained model
2023-05-25 16:28:16,272:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 16:28:16,277:INFO:Starting cross validation
2023-05-25 16:28:16,278:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:16,537:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,538:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,538:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:16,539:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,539:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,541:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,543:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,568:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,569:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,570:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,572:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,573:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,575:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,576:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,577:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,578:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:16,578:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,579:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,581:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:16,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,585:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,599:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,601:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,601:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:16,602:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,608:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,609:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,610:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:16,611:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,612:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,614:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:16,615:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:16,615:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:17,713:INFO:Calculating mean and std
2023-05-25 16:28:17,714:INFO:Creating metrics dataframe
2023-05-25 16:28:17,908:INFO:Uploading results into container
2023-05-25 16:28:17,909:INFO:Uploading model into container now
2023-05-25 16:28:17,909:INFO:_master_model_container: 8
2023-05-25 16:28:17,909:INFO:_display_container: 2
2023-05-25 16:28:17,909:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 16:28:17,909:INFO:create_model() successfully completed......................................
2023-05-25 16:28:18,031:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:18,031:INFO:Creating metrics dataframe
2023-05-25 16:28:18,042:INFO:Initializing Ada Boost Classifier
2023-05-25 16:28:18,042:INFO:Total runtime is 0.38397956689198814 minutes
2023-05-25 16:28:18,044:INFO:SubProcess create_model() called ==================================
2023-05-25 16:28:18,045:INFO:Initializing create_model()
2023-05-25 16:28:18,045:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:18,045:INFO:Checking exceptions
2023-05-25 16:28:18,045:INFO:Importing libraries
2023-05-25 16:28:18,045:INFO:Copying training dataset
2023-05-25 16:28:18,049:INFO:Defining folds
2023-05-25 16:28:18,050:INFO:Declaring metric variables
2023-05-25 16:28:18,053:INFO:Importing untrained model
2023-05-25 16:28:18,056:INFO:Ada Boost Classifier Imported successfully
2023-05-25 16:28:18,061:INFO:Starting cross validation
2023-05-25 16:28:18,062:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:18,751:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,753:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,754:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:18,755:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,763:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,764:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,765:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:18,765:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,769:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,772:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,772:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:18,773:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,781:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,783:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,784:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:18,785:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,812:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,814:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,815:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:18,816:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,822:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,822:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,822:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:18,823:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:18,823:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,824:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,832:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,833:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,834:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:18,834:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,841:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,844:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,844:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:18,845:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,856:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,857:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:18,858:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:18,859:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:20,006:INFO:Calculating mean and std
2023-05-25 16:28:20,008:INFO:Creating metrics dataframe
2023-05-25 16:28:20,208:INFO:Uploading results into container
2023-05-25 16:28:20,208:INFO:Uploading model into container now
2023-05-25 16:28:20,209:INFO:_master_model_container: 9
2023-05-25 16:28:20,209:INFO:_display_container: 2
2023-05-25 16:28:20,209:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4595)
2023-05-25 16:28:20,209:INFO:create_model() successfully completed......................................
2023-05-25 16:28:20,338:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:20,338:INFO:Creating metrics dataframe
2023-05-25 16:28:20,349:INFO:Initializing Gradient Boosting Classifier
2023-05-25 16:28:20,349:INFO:Total runtime is 0.42242390712102257 minutes
2023-05-25 16:28:20,352:INFO:SubProcess create_model() called ==================================
2023-05-25 16:28:20,352:INFO:Initializing create_model()
2023-05-25 16:28:20,352:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:20,352:INFO:Checking exceptions
2023-05-25 16:28:20,352:INFO:Importing libraries
2023-05-25 16:28:20,352:INFO:Copying training dataset
2023-05-25 16:28:20,357:INFO:Defining folds
2023-05-25 16:28:20,357:INFO:Declaring metric variables
2023-05-25 16:28:20,360:INFO:Importing untrained model
2023-05-25 16:28:20,364:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 16:28:20,369:INFO:Starting cross validation
2023-05-25 16:28:20,371:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:28,540:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,541:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,543:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,574:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,575:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,576:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,636:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,639:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,641:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,661:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,663:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,664:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:28,664:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,702:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,705:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,706:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,720:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,722:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,723:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,726:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,729:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,731:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:28,732:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,783:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,784:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,786:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,824:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,827:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,884:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,885:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:28,886:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:29,839:INFO:Calculating mean and std
2023-05-25 16:28:29,840:INFO:Creating metrics dataframe
2023-05-25 16:28:30,042:INFO:Uploading results into container
2023-05-25 16:28:30,043:INFO:Uploading model into container now
2023-05-25 16:28:30,043:INFO:_master_model_container: 10
2023-05-25 16:28:30,043:INFO:_display_container: 2
2023-05-25 16:28:30,043:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4595, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 16:28:30,043:INFO:create_model() successfully completed......................................
2023-05-25 16:28:30,176:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:30,176:INFO:Creating metrics dataframe
2023-05-25 16:28:30,187:INFO:Initializing Linear Discriminant Analysis
2023-05-25 16:28:30,188:INFO:Total runtime is 0.5864072442054749 minutes
2023-05-25 16:28:30,190:INFO:SubProcess create_model() called ==================================
2023-05-25 16:28:30,190:INFO:Initializing create_model()
2023-05-25 16:28:30,190:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:30,190:INFO:Checking exceptions
2023-05-25 16:28:30,190:INFO:Importing libraries
2023-05-25 16:28:30,190:INFO:Copying training dataset
2023-05-25 16:28:30,195:INFO:Defining folds
2023-05-25 16:28:30,195:INFO:Declaring metric variables
2023-05-25 16:28:30,198:INFO:Importing untrained model
2023-05-25 16:28:30,201:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 16:28:30,207:INFO:Starting cross validation
2023-05-25 16:28:30,208:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:30,478:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,480:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,482:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,487:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,488:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,489:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,490:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,491:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,492:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,498:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,517:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,519:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,521:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,532:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,533:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,534:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,535:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,536:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,537:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,538:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,539:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,541:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,547:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,548:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,549:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,550:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,551:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:30,552:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:31,704:INFO:Calculating mean and std
2023-05-25 16:28:31,704:INFO:Creating metrics dataframe
2023-05-25 16:28:31,896:INFO:Uploading results into container
2023-05-25 16:28:31,896:INFO:Uploading model into container now
2023-05-25 16:28:31,898:INFO:_master_model_container: 11
2023-05-25 16:28:31,898:INFO:_display_container: 2
2023-05-25 16:28:31,898:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 16:28:31,898:INFO:create_model() successfully completed......................................
2023-05-25 16:28:32,019:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:32,019:INFO:Creating metrics dataframe
2023-05-25 16:28:32,030:INFO:Initializing Extra Trees Classifier
2023-05-25 16:28:32,030:INFO:Total runtime is 0.617120889822642 minutes
2023-05-25 16:28:32,033:INFO:SubProcess create_model() called ==================================
2023-05-25 16:28:32,033:INFO:Initializing create_model()
2023-05-25 16:28:32,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:32,033:INFO:Checking exceptions
2023-05-25 16:28:32,033:INFO:Importing libraries
2023-05-25 16:28:32,033:INFO:Copying training dataset
2023-05-25 16:28:32,038:INFO:Defining folds
2023-05-25 16:28:32,038:INFO:Declaring metric variables
2023-05-25 16:28:32,041:INFO:Importing untrained model
2023-05-25 16:28:32,045:INFO:Extra Trees Classifier Imported successfully
2023-05-25 16:28:32,051:INFO:Starting cross validation
2023-05-25 16:28:32,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:33,061:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,062:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,063:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:33,064:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,080:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,082:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,082:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:33,083:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,127:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,131:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,132:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:33,133:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,138:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,139:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,140:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,141:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,141:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:33,143:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,143:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:33,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,148:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,150:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,150:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,151:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:33,152:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,153:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,153:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,154:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:33,155:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,155:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,156:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:33,158:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,168:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,169:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,170:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:33,171:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,215:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,218:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:33,220:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:33,221:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:34,440:INFO:Calculating mean and std
2023-05-25 16:28:34,441:INFO:Creating metrics dataframe
2023-05-25 16:28:34,649:INFO:Uploading results into container
2023-05-25 16:28:34,649:INFO:Uploading model into container now
2023-05-25 16:28:34,649:INFO:_master_model_container: 12
2023-05-25 16:28:34,650:INFO:_display_container: 2
2023-05-25 16:28:34,650:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4595, verbose=0, warm_start=False)
2023-05-25 16:28:34,650:INFO:create_model() successfully completed......................................
2023-05-25 16:28:34,776:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:34,776:INFO:Creating metrics dataframe
2023-05-25 16:28:34,787:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 16:28:34,787:INFO:Total runtime is 0.6630705157915752 minutes
2023-05-25 16:28:34,791:INFO:SubProcess create_model() called ==================================
2023-05-25 16:28:34,791:INFO:Initializing create_model()
2023-05-25 16:28:34,791:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:34,791:INFO:Checking exceptions
2023-05-25 16:28:34,791:INFO:Importing libraries
2023-05-25 16:28:34,792:INFO:Copying training dataset
2023-05-25 16:28:34,796:INFO:Defining folds
2023-05-25 16:28:34,796:INFO:Declaring metric variables
2023-05-25 16:28:34,799:INFO:Importing untrained model
2023-05-25 16:28:34,802:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 16:28:34,807:INFO:Starting cross validation
2023-05-25 16:28:34,808:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:37,453:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,455:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,457:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,479:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,481:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,483:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:37,483:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,493:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:37,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,529:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,532:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,533:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:37,534:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,574:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,577:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,578:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:37,579:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,592:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,594:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,596:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:37,596:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,598:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,599:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,600:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:37,601:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,632:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,634:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,635:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:37,636:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,666:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:37,669:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,685:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:37,686:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:38,833:INFO:Calculating mean and std
2023-05-25 16:28:38,834:INFO:Creating metrics dataframe
2023-05-25 16:28:39,041:INFO:Uploading results into container
2023-05-25 16:28:39,042:INFO:Uploading model into container now
2023-05-25 16:28:39,042:INFO:_master_model_container: 13
2023-05-25 16:28:39,042:INFO:_display_container: 2
2023-05-25 16:28:39,042:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4595, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 16:28:39,043:INFO:create_model() successfully completed......................................
2023-05-25 16:28:39,171:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:39,171:INFO:Creating metrics dataframe
2023-05-25 16:28:39,183:INFO:Initializing Dummy Classifier
2023-05-25 16:28:39,183:INFO:Total runtime is 0.7363268852233887 minutes
2023-05-25 16:28:39,186:INFO:SubProcess create_model() called ==================================
2023-05-25 16:28:39,186:INFO:Initializing create_model()
2023-05-25 16:28:39,187:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D4CAAA0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:39,187:INFO:Checking exceptions
2023-05-25 16:28:39,187:INFO:Importing libraries
2023-05-25 16:28:39,187:INFO:Copying training dataset
2023-05-25 16:28:39,191:INFO:Defining folds
2023-05-25 16:28:39,191:INFO:Declaring metric variables
2023-05-25 16:28:39,194:INFO:Importing untrained model
2023-05-25 16:28:39,197:INFO:Dummy Classifier Imported successfully
2023-05-25 16:28:39,202:INFO:Starting cross validation
2023-05-25 16:28:39,204:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:28:39,475:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,476:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,477:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:39,477:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,484:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,485:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,486:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:39,487:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,493:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,494:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:39,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,498:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,498:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,499:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:39,499:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,500:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,501:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:39,502:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,502:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,504:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,506:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:39,507:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,510:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,511:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,512:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:39,513:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,516:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,519:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,520:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:39,521:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,528:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,529:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,529:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,530:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:39,531:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,531:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:39,532:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:28:39,533:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:28:40,849:INFO:Calculating mean and std
2023-05-25 16:28:40,850:INFO:Creating metrics dataframe
2023-05-25 16:28:41,054:INFO:Uploading results into container
2023-05-25 16:28:41,055:INFO:Uploading model into container now
2023-05-25 16:28:41,055:INFO:_master_model_container: 14
2023-05-25 16:28:41,055:INFO:_display_container: 2
2023-05-25 16:28:41,055:INFO:DummyClassifier(constant=None, random_state=4595, strategy='prior')
2023-05-25 16:28:41,055:INFO:create_model() successfully completed......................................
2023-05-25 16:28:41,179:INFO:SubProcess create_model() end ==================================
2023-05-25 16:28:41,179:INFO:Creating metrics dataframe
2023-05-25 16:28:41,199:INFO:Initializing create_model()
2023-05-25 16:28:41,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6D4AAF50>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4595, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:28:41,199:INFO:Checking exceptions
2023-05-25 16:28:41,201:INFO:Importing libraries
2023-05-25 16:28:41,201:INFO:Copying training dataset
2023-05-25 16:28:41,204:INFO:Defining folds
2023-05-25 16:28:41,205:INFO:Declaring metric variables
2023-05-25 16:28:41,205:INFO:Importing untrained model
2023-05-25 16:28:41,205:INFO:Declaring custom model
2023-05-25 16:28:41,205:INFO:Logistic Regression Imported successfully
2023-05-25 16:28:41,206:INFO:Cross validation set to False
2023-05-25 16:28:41,206:INFO:Fitting Model
2023-05-25 16:28:41,755:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:28:41,913:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4595, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 16:28:41,913:INFO:create_model() successfully completed......................................
2023-05-25 16:28:42,056:INFO:_master_model_container: 14
2023-05-25 16:28:42,056:INFO:_display_container: 2
2023-05-25 16:28:42,056:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4595, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 16:28:42,056:INFO:compare_models() successfully completed......................................
2023-05-25 16:32:11,399:INFO:Initializing plot_model()
2023-05-25 16:32:11,399:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight={},
                     criterion='gini', max_depth=8, max_features=1.0,
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0, min_samples_leaf=2,
                     min_samples_split=5, min_weight_fraction_leaf=0.0,
                     n_estimators=120, n_jobs=-1, oob_score=False,
                     random_state=1997, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE523CD2D0>, system=True)
2023-05-25 16:32:11,399:INFO:Checking exceptions
2023-05-25 16:32:11,422:INFO:Preloading libraries
2023-05-25 16:32:11,433:INFO:Copying training dataset
2023-05-25 16:32:11,433:INFO:Plot type: auc
2023-05-25 16:32:11,646:INFO:Fitting Model
2023-05-25 16:32:11,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but ExtraTreesClassifier was fitted with feature names
  warnings.warn(

2023-05-25 16:32:11,647:INFO:Scoring test/hold-out set
2023-05-25 16:32:11,935:INFO:Visual Rendered Successfully
2023-05-25 16:32:12,065:INFO:plot_model() successfully completed......................................
2023-05-25 16:42:29,327:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_10308\1569036350.py:20: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  correlation_matrix = scdf.corr()

2023-05-25 16:42:36,906:INFO:PyCaret ClassificationExperiment
2023-05-25 16:42:36,906:INFO:Logging name: clf-default-name
2023-05-25 16:42:36,907:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 16:42:36,907:INFO:version 3.0.2
2023-05-25 16:42:36,907:INFO:Initializing setup()
2023-05-25 16:42:36,907:INFO:self.USI: 6e24
2023-05-25 16:42:36,907:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 16:42:36,907:INFO:Checking environment
2023-05-25 16:42:36,907:INFO:python_version: 3.10.9
2023-05-25 16:42:36,907:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 16:42:36,907:INFO:machine: AMD64
2023-05-25 16:42:36,907:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 16:42:36,907:INFO:Memory: svmem(total=17112055808, available=7582892032, percent=55.7, used=9529163776, free=7582892032)
2023-05-25 16:42:36,907:INFO:Physical Core: 8
2023-05-25 16:42:36,907:INFO:Logical Core: 16
2023-05-25 16:42:36,907:INFO:Checking libraries
2023-05-25 16:42:36,907:INFO:System:
2023-05-25 16:42:36,907:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 16:42:36,907:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 16:42:36,907:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 16:42:36,907:INFO:PyCaret required dependencies:
2023-05-25 16:42:36,908:INFO:                 pip: 22.3.1
2023-05-25 16:42:36,908:INFO:          setuptools: 65.6.3
2023-05-25 16:42:36,908:INFO:             pycaret: 3.0.2
2023-05-25 16:42:36,908:INFO:             IPython: 8.10.0
2023-05-25 16:42:36,908:INFO:          ipywidgets: 7.6.5
2023-05-25 16:42:36,908:INFO:                tqdm: 4.64.1
2023-05-25 16:42:36,908:INFO:               numpy: 1.23.5
2023-05-25 16:42:36,908:INFO:              pandas: 1.5.3
2023-05-25 16:42:36,908:INFO:              jinja2: 3.1.2
2023-05-25 16:42:36,908:INFO:               scipy: 1.10.0
2023-05-25 16:42:36,908:INFO:              joblib: 1.1.1
2023-05-25 16:42:36,908:INFO:             sklearn: 1.2.1
2023-05-25 16:42:36,908:INFO:                pyod: 1.0.9
2023-05-25 16:42:36,908:INFO:            imblearn: 0.10.1
2023-05-25 16:42:36,908:INFO:   category_encoders: 2.6.1
2023-05-25 16:42:36,908:INFO:            lightgbm: 3.3.5
2023-05-25 16:42:36,908:INFO:               numba: 0.56.4
2023-05-25 16:42:36,908:INFO:            requests: 2.28.1
2023-05-25 16:42:36,908:INFO:          matplotlib: 3.7.0
2023-05-25 16:42:36,908:INFO:          scikitplot: 0.3.7
2023-05-25 16:42:36,908:INFO:         yellowbrick: 1.5
2023-05-25 16:42:36,908:INFO:              plotly: 5.9.0
2023-05-25 16:42:36,908:INFO:             kaleido: 0.2.1
2023-05-25 16:42:36,908:INFO:         statsmodels: 0.13.5
2023-05-25 16:42:36,909:INFO:              sktime: 0.17.0
2023-05-25 16:42:36,909:INFO:               tbats: 1.1.3
2023-05-25 16:42:36,909:INFO:            pmdarima: 2.0.3
2023-05-25 16:42:36,909:INFO:              psutil: 5.9.0
2023-05-25 16:42:36,909:INFO:PyCaret optional dependencies:
2023-05-25 16:42:36,909:INFO:                shap: Not installed
2023-05-25 16:42:36,909:INFO:           interpret: Not installed
2023-05-25 16:42:36,909:INFO:                umap: Not installed
2023-05-25 16:42:36,909:INFO:    pandas_profiling: Not installed
2023-05-25 16:42:36,909:INFO:  explainerdashboard: Not installed
2023-05-25 16:42:36,909:INFO:             autoviz: Not installed
2023-05-25 16:42:36,909:INFO:           fairlearn: Not installed
2023-05-25 16:42:36,909:INFO:             xgboost: Not installed
2023-05-25 16:42:36,909:INFO:            catboost: Not installed
2023-05-25 16:42:36,909:INFO:              kmodes: Not installed
2023-05-25 16:42:36,909:INFO:             mlxtend: Not installed
2023-05-25 16:42:36,909:INFO:       statsforecast: Not installed
2023-05-25 16:42:36,909:INFO:        tune_sklearn: Not installed
2023-05-25 16:42:36,909:INFO:                 ray: Not installed
2023-05-25 16:42:36,909:INFO:            hyperopt: Not installed
2023-05-25 16:42:36,909:INFO:              optuna: Not installed
2023-05-25 16:42:36,909:INFO:               skopt: Not installed
2023-05-25 16:42:36,910:INFO:              mlflow: Not installed
2023-05-25 16:42:36,910:INFO:              gradio: Not installed
2023-05-25 16:42:36,910:INFO:             fastapi: Not installed
2023-05-25 16:42:36,910:INFO:             uvicorn: Not installed
2023-05-25 16:42:36,910:INFO:              m2cgen: Not installed
2023-05-25 16:42:36,910:INFO:           evidently: Not installed
2023-05-25 16:42:36,910:INFO:               fugue: Not installed
2023-05-25 16:42:36,910:INFO:           streamlit: Not installed
2023-05-25 16:42:36,910:INFO:             prophet: Not installed
2023-05-25 16:42:36,910:INFO:None
2023-05-25 16:42:36,910:INFO:Set up data.
2023-05-25 16:42:59,573:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_10308\1569036350.py:20: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  correlation_matrix = scdf.corr()

2023-05-25 16:43:27,577:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_10308\1569036350.py:20: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  correlation_matrix = scdf.corr()

2023-05-25 16:43:35,779:INFO:PyCaret ClassificationExperiment
2023-05-25 16:43:35,779:INFO:Logging name: clf-default-name
2023-05-25 16:43:35,779:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 16:43:35,779:INFO:version 3.0.2
2023-05-25 16:43:35,780:INFO:Initializing setup()
2023-05-25 16:43:35,780:INFO:self.USI: b666
2023-05-25 16:43:35,780:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 16:43:35,780:INFO:Checking environment
2023-05-25 16:43:35,780:INFO:python_version: 3.10.9
2023-05-25 16:43:35,780:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 16:43:35,780:INFO:machine: AMD64
2023-05-25 16:43:35,780:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 16:43:35,780:INFO:Memory: svmem(total=17112055808, available=7573884928, percent=55.7, used=9538170880, free=7573884928)
2023-05-25 16:43:35,780:INFO:Physical Core: 8
2023-05-25 16:43:35,780:INFO:Logical Core: 16
2023-05-25 16:43:35,780:INFO:Checking libraries
2023-05-25 16:43:35,780:INFO:System:
2023-05-25 16:43:35,780:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 16:43:35,780:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 16:43:35,781:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 16:43:35,781:INFO:PyCaret required dependencies:
2023-05-25 16:43:35,781:INFO:                 pip: 22.3.1
2023-05-25 16:43:35,781:INFO:          setuptools: 65.6.3
2023-05-25 16:43:35,781:INFO:             pycaret: 3.0.2
2023-05-25 16:43:35,781:INFO:             IPython: 8.10.0
2023-05-25 16:43:35,781:INFO:          ipywidgets: 7.6.5
2023-05-25 16:43:35,781:INFO:                tqdm: 4.64.1
2023-05-25 16:43:35,781:INFO:               numpy: 1.23.5
2023-05-25 16:43:35,781:INFO:              pandas: 1.5.3
2023-05-25 16:43:35,781:INFO:              jinja2: 3.1.2
2023-05-25 16:43:35,781:INFO:               scipy: 1.10.0
2023-05-25 16:43:35,781:INFO:              joblib: 1.1.1
2023-05-25 16:43:35,781:INFO:             sklearn: 1.2.1
2023-05-25 16:43:35,781:INFO:                pyod: 1.0.9
2023-05-25 16:43:35,781:INFO:            imblearn: 0.10.1
2023-05-25 16:43:35,782:INFO:   category_encoders: 2.6.1
2023-05-25 16:43:35,782:INFO:            lightgbm: 3.3.5
2023-05-25 16:43:35,782:INFO:               numba: 0.56.4
2023-05-25 16:43:35,782:INFO:            requests: 2.28.1
2023-05-25 16:43:35,782:INFO:          matplotlib: 3.7.0
2023-05-25 16:43:35,782:INFO:          scikitplot: 0.3.7
2023-05-25 16:43:35,782:INFO:         yellowbrick: 1.5
2023-05-25 16:43:35,782:INFO:              plotly: 5.9.0
2023-05-25 16:43:35,782:INFO:             kaleido: 0.2.1
2023-05-25 16:43:35,782:INFO:         statsmodels: 0.13.5
2023-05-25 16:43:35,782:INFO:              sktime: 0.17.0
2023-05-25 16:43:35,782:INFO:               tbats: 1.1.3
2023-05-25 16:43:35,782:INFO:            pmdarima: 2.0.3
2023-05-25 16:43:35,782:INFO:              psutil: 5.9.0
2023-05-25 16:43:35,782:INFO:PyCaret optional dependencies:
2023-05-25 16:43:35,782:INFO:                shap: Not installed
2023-05-25 16:43:35,783:INFO:           interpret: Not installed
2023-05-25 16:43:35,783:INFO:                umap: Not installed
2023-05-25 16:43:35,783:INFO:    pandas_profiling: Not installed
2023-05-25 16:43:35,783:INFO:  explainerdashboard: Not installed
2023-05-25 16:43:35,783:INFO:             autoviz: Not installed
2023-05-25 16:43:35,783:INFO:           fairlearn: Not installed
2023-05-25 16:43:35,783:INFO:             xgboost: Not installed
2023-05-25 16:43:35,783:INFO:            catboost: Not installed
2023-05-25 16:43:35,783:INFO:              kmodes: Not installed
2023-05-25 16:43:35,783:INFO:             mlxtend: Not installed
2023-05-25 16:43:35,783:INFO:       statsforecast: Not installed
2023-05-25 16:43:35,783:INFO:        tune_sklearn: Not installed
2023-05-25 16:43:35,783:INFO:                 ray: Not installed
2023-05-25 16:43:35,783:INFO:            hyperopt: Not installed
2023-05-25 16:43:35,783:INFO:              optuna: Not installed
2023-05-25 16:43:35,783:INFO:               skopt: Not installed
2023-05-25 16:43:35,783:INFO:              mlflow: Not installed
2023-05-25 16:43:35,783:INFO:              gradio: Not installed
2023-05-25 16:43:35,783:INFO:             fastapi: Not installed
2023-05-25 16:43:35,783:INFO:             uvicorn: Not installed
2023-05-25 16:43:35,783:INFO:              m2cgen: Not installed
2023-05-25 16:43:35,783:INFO:           evidently: Not installed
2023-05-25 16:43:35,783:INFO:               fugue: Not installed
2023-05-25 16:43:35,783:INFO:           streamlit: Not installed
2023-05-25 16:43:35,783:INFO:             prophet: Not installed
2023-05-25 16:43:35,783:INFO:None
2023-05-25 16:43:35,783:INFO:Set up data.
2023-05-25 16:43:35,791:INFO:Set up train/test split.
2023-05-25 16:43:35,796:INFO:Set up index.
2023-05-25 16:43:35,796:INFO:Set up folding strategy.
2023-05-25 16:43:35,796:INFO:Assigning column types.
2023-05-25 16:43:35,799:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 16:43:35,839:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:43:35,840:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:43:35,864:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:35,865:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:35,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 16:43:35,905:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:43:35,930:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:35,930:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:35,931:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 16:43:35,970:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:43:35,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:35,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:36,036:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 16:43:36,061:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:36,062:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:36,062:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 16:43:36,126:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:36,126:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:36,191:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:36,191:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:36,192:INFO:Preparing preprocessing pipeline...
2023-05-25 16:43:36,193:INFO:Set up label encoding.
2023-05-25 16:43:36,193:INFO:Set up simple imputation.
2023-05-25 16:43:36,195:INFO:Set up encoding of categorical features.
2023-05-25 16:43:36,253:INFO:Finished creating preprocessing pipeline.
2023-05-25 16:43:36,258:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['APM', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'NumberOfPACs', 'GapBetweenPACs',
                                             'TotalMa...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['HoursPerWeek', 'TotalHours'],
                                    transformer=TargetEncoder(cols=['HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 16:43:36,259:INFO:Creating final display dataframe.
2023-05-25 16:43:36,446:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      7615
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                (3338, 11)
5        Transformed data shape                                (3338, 11)
6   Transformed train set shape                                (2336, 11)
7    Transformed test set shape                                (1002, 11)
8              Numeric features                                         8
9          Categorical features                                         2
10                   Preprocess                                      True
11              Imputation type                                    simple
12           Numeric imputation                                      mean
13       Categorical imputation                                      mode
14     Maximum one-hot encoding                                        25
15              Encoding method                                      None
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                        10
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      b666
2023-05-25 16:43:36,516:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:36,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:36,583:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:36,583:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 16:43:36,583:INFO:setup() successfully completed in 0.94s...............
2023-05-25 16:43:40,657:INFO:Initializing compare_models()
2023-05-25 16:43:40,657:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 16:43:40,657:INFO:Checking exceptions
2023-05-25 16:43:40,661:INFO:Preparing display monitor
2023-05-25 16:43:40,683:INFO:Initializing Logistic Regression
2023-05-25 16:43:40,683:INFO:Total runtime is 0.0 minutes
2023-05-25 16:43:40,686:INFO:SubProcess create_model() called ==================================
2023-05-25 16:43:40,686:INFO:Initializing create_model()
2023-05-25 16:43:40,686:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:43:40,686:INFO:Checking exceptions
2023-05-25 16:43:40,686:INFO:Importing libraries
2023-05-25 16:43:40,686:INFO:Copying training dataset
2023-05-25 16:43:40,689:INFO:Defining folds
2023-05-25 16:43:40,689:INFO:Declaring metric variables
2023-05-25 16:43:40,692:INFO:Importing untrained model
2023-05-25 16:43:40,695:INFO:Logistic Regression Imported successfully
2023-05-25 16:43:40,702:INFO:Starting cross validation
2023-05-25 16:43:40,703:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:43:46,277:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:43:46,282:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:43:46,308:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:43:46,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:43:46,318:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:43:46,334:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:43:46,341:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:43:46,362:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:43:46,362:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:43:46,363:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 16:43:46,449:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,451:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,452:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,453:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,454:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,456:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,468:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,470:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,472:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,472:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,474:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,476:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:46,477:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,493:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,494:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,494:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:46,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,497:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:46,498:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,516:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,519:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,521:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,523:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,527:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:46,528:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,533:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,536:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,537:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,538:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,539:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:46,541:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:47,826:INFO:Calculating mean and std
2023-05-25 16:43:47,827:INFO:Creating metrics dataframe
2023-05-25 16:43:48,032:INFO:Uploading results into container
2023-05-25 16:43:48,032:INFO:Uploading model into container now
2023-05-25 16:43:48,033:INFO:_master_model_container: 1
2023-05-25 16:43:48,033:INFO:_display_container: 2
2023-05-25 16:43:48,033:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7615, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 16:43:48,033:INFO:create_model() successfully completed......................................
2023-05-25 16:43:48,189:INFO:SubProcess create_model() end ==================================
2023-05-25 16:43:48,189:INFO:Creating metrics dataframe
2023-05-25 16:43:48,197:INFO:Initializing K Neighbors Classifier
2023-05-25 16:43:48,197:INFO:Total runtime is 0.12523982922236124 minutes
2023-05-25 16:43:48,200:INFO:SubProcess create_model() called ==================================
2023-05-25 16:43:48,200:INFO:Initializing create_model()
2023-05-25 16:43:48,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:43:48,200:INFO:Checking exceptions
2023-05-25 16:43:48,200:INFO:Importing libraries
2023-05-25 16:43:48,200:INFO:Copying training dataset
2023-05-25 16:43:48,205:INFO:Defining folds
2023-05-25 16:43:48,205:INFO:Declaring metric variables
2023-05-25 16:43:48,208:INFO:Importing untrained model
2023-05-25 16:43:48,211:INFO:K Neighbors Classifier Imported successfully
2023-05-25 16:43:48,217:INFO:Starting cross validation
2023-05-25 16:43:48,218:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:43:48,562:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:48,563:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:48,563:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:48,564:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:48,566:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:48,566:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:48,567:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:48,567:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:48,568:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:48,568:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:48,569:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:48,569:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:48,570:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:48,570:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:48,571:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,842:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,842:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,843:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,844:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,845:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:50,845:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:50,846:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,846:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,847:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,847:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,848:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,849:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,849:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:50,849:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,850:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,850:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:50,850:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,851:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,852:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:50,852:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,854:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,856:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:50,856:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:50,857:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:51,570:INFO:Calculating mean and std
2023-05-25 16:43:51,571:INFO:Creating metrics dataframe
2023-05-25 16:43:51,784:INFO:Uploading results into container
2023-05-25 16:43:51,784:INFO:Uploading model into container now
2023-05-25 16:43:51,785:INFO:_master_model_container: 2
2023-05-25 16:43:51,785:INFO:_display_container: 2
2023-05-25 16:43:51,785:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 16:43:51,785:INFO:create_model() successfully completed......................................
2023-05-25 16:43:51,937:INFO:SubProcess create_model() end ==================================
2023-05-25 16:43:51,937:INFO:Creating metrics dataframe
2023-05-25 16:43:51,946:INFO:Initializing Naive Bayes
2023-05-25 16:43:51,946:INFO:Total runtime is 0.18771806955337522 minutes
2023-05-25 16:43:51,949:INFO:SubProcess create_model() called ==================================
2023-05-25 16:43:51,949:INFO:Initializing create_model()
2023-05-25 16:43:51,949:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:43:51,949:INFO:Checking exceptions
2023-05-25 16:43:51,949:INFO:Importing libraries
2023-05-25 16:43:51,949:INFO:Copying training dataset
2023-05-25 16:43:51,953:INFO:Defining folds
2023-05-25 16:43:51,953:INFO:Declaring metric variables
2023-05-25 16:43:51,958:INFO:Importing untrained model
2023-05-25 16:43:51,960:INFO:Naive Bayes Imported successfully
2023-05-25 16:43:51,966:INFO:Starting cross validation
2023-05-25 16:43:51,967:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:43:52,218:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,220:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,222:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,223:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,224:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,225:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,243:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,245:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,246:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,257:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,259:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,260:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,261:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,262:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,262:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,271:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,273:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,274:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:52,275:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,280:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,281:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,281:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,282:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:52,282:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,283:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,284:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,284:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,286:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:52,287:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:53,619:INFO:Calculating mean and std
2023-05-25 16:43:53,620:INFO:Creating metrics dataframe
2023-05-25 16:43:53,834:INFO:Uploading results into container
2023-05-25 16:43:53,835:INFO:Uploading model into container now
2023-05-25 16:43:53,835:INFO:_master_model_container: 3
2023-05-25 16:43:53,835:INFO:_display_container: 2
2023-05-25 16:43:53,835:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 16:43:53,835:INFO:create_model() successfully completed......................................
2023-05-25 16:43:53,992:INFO:SubProcess create_model() end ==================================
2023-05-25 16:43:53,992:INFO:Creating metrics dataframe
2023-05-25 16:43:54,001:INFO:Initializing Decision Tree Classifier
2023-05-25 16:43:54,001:INFO:Total runtime is 0.22197552124659217 minutes
2023-05-25 16:43:54,004:INFO:SubProcess create_model() called ==================================
2023-05-25 16:43:54,004:INFO:Initializing create_model()
2023-05-25 16:43:54,004:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:43:54,004:INFO:Checking exceptions
2023-05-25 16:43:54,004:INFO:Importing libraries
2023-05-25 16:43:54,004:INFO:Copying training dataset
2023-05-25 16:43:54,009:INFO:Defining folds
2023-05-25 16:43:54,009:INFO:Declaring metric variables
2023-05-25 16:43:54,012:INFO:Importing untrained model
2023-05-25 16:43:54,016:INFO:Decision Tree Classifier Imported successfully
2023-05-25 16:43:54,022:INFO:Starting cross validation
2023-05-25 16:43:54,023:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:43:54,283:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,284:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,285:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,296:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,298:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,299:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,300:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,302:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,303:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,310:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,311:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,312:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,313:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,315:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,318:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,318:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,319:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,320:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,321:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,323:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,324:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,326:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,328:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,329:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,329:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,330:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:54,333:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:55,665:INFO:Calculating mean and std
2023-05-25 16:43:55,666:INFO:Creating metrics dataframe
2023-05-25 16:43:55,882:INFO:Uploading results into container
2023-05-25 16:43:55,882:INFO:Uploading model into container now
2023-05-25 16:43:55,882:INFO:_master_model_container: 4
2023-05-25 16:43:55,883:INFO:_display_container: 2
2023-05-25 16:43:55,883:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7615, splitter='best')
2023-05-25 16:43:55,883:INFO:create_model() successfully completed......................................
2023-05-25 16:43:56,033:INFO:SubProcess create_model() end ==================================
2023-05-25 16:43:56,034:INFO:Creating metrics dataframe
2023-05-25 16:43:56,043:INFO:Initializing SVM - Linear Kernel
2023-05-25 16:43:56,043:INFO:Total runtime is 0.2560083866119384 minutes
2023-05-25 16:43:56,046:INFO:SubProcess create_model() called ==================================
2023-05-25 16:43:56,046:INFO:Initializing create_model()
2023-05-25 16:43:56,046:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:43:56,047:INFO:Checking exceptions
2023-05-25 16:43:56,047:INFO:Importing libraries
2023-05-25 16:43:56,047:INFO:Copying training dataset
2023-05-25 16:43:56,051:INFO:Defining folds
2023-05-25 16:43:56,052:INFO:Declaring metric variables
2023-05-25 16:43:56,054:INFO:Importing untrained model
2023-05-25 16:43:56,057:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 16:43:56,063:INFO:Starting cross validation
2023-05-25 16:43:56,063:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:43:56,310:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:43:56,311:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,312:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,313:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:56,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,315:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:43:56,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,317:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,318:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:56,319:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,322:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:43:56,322:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,325:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,326:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:56,327:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,332:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:43:56,333:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,335:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,337:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:56,337:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:43:56,338:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,338:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,339:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,340:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:56,341:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,349:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:43:56,350:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,350:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:43:56,350:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,352:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,353:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,353:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:56,353:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:56,354:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,354:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,355:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:43:56,356:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,357:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,358:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:43:56,358:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:56,358:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,359:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,360:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,360:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:56,361:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,381:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 16:43:56,382:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:56,386:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:56,386:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:57,673:INFO:Calculating mean and std
2023-05-25 16:43:57,675:INFO:Creating metrics dataframe
2023-05-25 16:43:57,891:INFO:Uploading results into container
2023-05-25 16:43:57,892:INFO:Uploading model into container now
2023-05-25 16:43:57,892:INFO:_master_model_container: 5
2023-05-25 16:43:57,892:INFO:_display_container: 2
2023-05-25 16:43:57,892:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7615, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 16:43:57,892:INFO:create_model() successfully completed......................................
2023-05-25 16:43:58,043:INFO:SubProcess create_model() end ==================================
2023-05-25 16:43:58,043:INFO:Creating metrics dataframe
2023-05-25 16:43:58,053:INFO:Initializing Ridge Classifier
2023-05-25 16:43:58,053:INFO:Total runtime is 0.2894970019658406 minutes
2023-05-25 16:43:58,056:INFO:SubProcess create_model() called ==================================
2023-05-25 16:43:58,056:INFO:Initializing create_model()
2023-05-25 16:43:58,056:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:43:58,057:INFO:Checking exceptions
2023-05-25 16:43:58,057:INFO:Importing libraries
2023-05-25 16:43:58,057:INFO:Copying training dataset
2023-05-25 16:43:58,061:INFO:Defining folds
2023-05-25 16:43:58,062:INFO:Declaring metric variables
2023-05-25 16:43:58,065:INFO:Importing untrained model
2023-05-25 16:43:58,068:INFO:Ridge Classifier Imported successfully
2023-05-25 16:43:58,075:INFO:Starting cross validation
2023-05-25 16:43:58,076:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:43:58,258:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:43:58,258:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,259:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,260:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:58,261:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,265:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:43:58,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:58,268:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:43:58,269:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,269:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,271:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,272:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:58,273:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:43:58,273:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,273:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,274:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,275:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:58,275:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,278:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:43:58,278:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,280:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,280:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:58,281:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,288:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:43:58,289:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,290:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,291:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:58,291:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:43:58,292:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,292:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,292:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:43:58,293:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,293:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,293:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:58,293:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,295:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,295:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:58,296:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,300:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:43:58,301:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,303:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,304:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:58,306:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,313:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 16:43:58,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:58,317:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:43:58,317:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:43:59,648:INFO:Calculating mean and std
2023-05-25 16:43:59,649:INFO:Creating metrics dataframe
2023-05-25 16:43:59,864:INFO:Uploading results into container
2023-05-25 16:43:59,864:INFO:Uploading model into container now
2023-05-25 16:43:59,864:INFO:_master_model_container: 6
2023-05-25 16:43:59,864:INFO:_display_container: 2
2023-05-25 16:43:59,866:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7615, solver='auto',
                tol=0.0001)
2023-05-25 16:43:59,866:INFO:create_model() successfully completed......................................
2023-05-25 16:44:00,025:INFO:SubProcess create_model() end ==================================
2023-05-25 16:44:00,025:INFO:Creating metrics dataframe
2023-05-25 16:44:00,035:INFO:Initializing Random Forest Classifier
2023-05-25 16:44:00,035:INFO:Total runtime is 0.32254078785578405 minutes
2023-05-25 16:44:00,038:INFO:SubProcess create_model() called ==================================
2023-05-25 16:44:00,038:INFO:Initializing create_model()
2023-05-25 16:44:00,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:44:00,038:INFO:Checking exceptions
2023-05-25 16:44:00,038:INFO:Importing libraries
2023-05-25 16:44:00,038:INFO:Copying training dataset
2023-05-25 16:44:00,043:INFO:Defining folds
2023-05-25 16:44:00,043:INFO:Declaring metric variables
2023-05-25 16:44:00,047:INFO:Importing untrained model
2023-05-25 16:44:00,051:INFO:Random Forest Classifier Imported successfully
2023-05-25 16:44:00,056:INFO:Starting cross validation
2023-05-25 16:44:00,057:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:44:01,213:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,214:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,216:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,248:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,249:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,251:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,269:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,271:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,272:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:01,273:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,276:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,278:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,279:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:01,280:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,292:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,294:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,295:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:01,296:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,318:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,320:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,321:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:01,322:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,358:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,360:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,361:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:01,362:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,364:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,366:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,368:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:01,368:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,369:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,370:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,372:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:01,373:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,399:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,401:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:01,403:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:01,404:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:02,652:INFO:Calculating mean and std
2023-05-25 16:44:02,653:INFO:Creating metrics dataframe
2023-05-25 16:44:02,865:INFO:Uploading results into container
2023-05-25 16:44:02,866:INFO:Uploading model into container now
2023-05-25 16:44:02,866:INFO:_master_model_container: 7
2023-05-25 16:44:02,866:INFO:_display_container: 2
2023-05-25 16:44:02,867:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7615, verbose=0, warm_start=False)
2023-05-25 16:44:02,867:INFO:create_model() successfully completed......................................
2023-05-25 16:44:03,018:INFO:SubProcess create_model() end ==================================
2023-05-25 16:44:03,019:INFO:Creating metrics dataframe
2023-05-25 16:44:03,028:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 16:44:03,028:INFO:Total runtime is 0.37242163419723506 minutes
2023-05-25 16:44:03,031:INFO:SubProcess create_model() called ==================================
2023-05-25 16:44:03,031:INFO:Initializing create_model()
2023-05-25 16:44:03,031:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:44:03,031:INFO:Checking exceptions
2023-05-25 16:44:03,032:INFO:Importing libraries
2023-05-25 16:44:03,032:INFO:Copying training dataset
2023-05-25 16:44:03,036:INFO:Defining folds
2023-05-25 16:44:03,036:INFO:Declaring metric variables
2023-05-25 16:44:03,039:INFO:Importing untrained model
2023-05-25 16:44:03,042:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 16:44:03,048:INFO:Starting cross validation
2023-05-25 16:44:03,049:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:44:03,274:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,276:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,278:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,293:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,294:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,296:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,318:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,318:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,319:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,324:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,327:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,329:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,330:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,330:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,332:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,332:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,333:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,333:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,334:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,334:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,335:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,348:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,349:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,350:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,358:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,359:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:03,360:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:04,690:INFO:Calculating mean and std
2023-05-25 16:44:04,691:INFO:Creating metrics dataframe
2023-05-25 16:44:04,914:INFO:Uploading results into container
2023-05-25 16:44:04,915:INFO:Uploading model into container now
2023-05-25 16:44:04,915:INFO:_master_model_container: 8
2023-05-25 16:44:04,915:INFO:_display_container: 2
2023-05-25 16:44:04,915:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 16:44:04,915:INFO:create_model() successfully completed......................................
2023-05-25 16:44:05,074:INFO:SubProcess create_model() end ==================================
2023-05-25 16:44:05,074:INFO:Creating metrics dataframe
2023-05-25 16:44:05,084:INFO:Initializing Ada Boost Classifier
2023-05-25 16:44:05,084:INFO:Total runtime is 0.40668891668319695 minutes
2023-05-25 16:44:05,088:INFO:SubProcess create_model() called ==================================
2023-05-25 16:44:05,088:INFO:Initializing create_model()
2023-05-25 16:44:05,089:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:44:05,089:INFO:Checking exceptions
2023-05-25 16:44:05,089:INFO:Importing libraries
2023-05-25 16:44:05,089:INFO:Copying training dataset
2023-05-25 16:44:05,093:INFO:Defining folds
2023-05-25 16:44:05,093:INFO:Declaring metric variables
2023-05-25 16:44:05,095:INFO:Importing untrained model
2023-05-25 16:44:05,098:INFO:Ada Boost Classifier Imported successfully
2023-05-25 16:44:05,105:INFO:Starting cross validation
2023-05-25 16:44:05,106:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:44:05,703:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,704:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,705:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:05,706:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,732:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,733:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,734:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:05,734:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,745:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,748:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,748:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,750:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,750:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,751:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:05,752:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,752:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,753:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,754:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,755:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,755:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:05,756:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,757:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,767:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,768:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:05,769:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,769:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,771:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,772:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:05,772:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,778:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,780:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,780:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:05,781:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,803:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,806:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:05,806:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:05,807:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:07,107:INFO:Calculating mean and std
2023-05-25 16:44:07,108:INFO:Creating metrics dataframe
2023-05-25 16:44:07,335:INFO:Uploading results into container
2023-05-25 16:44:07,335:INFO:Uploading model into container now
2023-05-25 16:44:07,336:INFO:_master_model_container: 9
2023-05-25 16:44:07,336:INFO:_display_container: 2
2023-05-25 16:44:07,336:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7615)
2023-05-25 16:44:07,336:INFO:create_model() successfully completed......................................
2023-05-25 16:44:07,487:INFO:SubProcess create_model() end ==================================
2023-05-25 16:44:07,487:INFO:Creating metrics dataframe
2023-05-25 16:44:07,499:INFO:Initializing Gradient Boosting Classifier
2023-05-25 16:44:07,499:INFO:Total runtime is 0.4469276348749796 minutes
2023-05-25 16:44:07,502:INFO:SubProcess create_model() called ==================================
2023-05-25 16:44:07,502:INFO:Initializing create_model()
2023-05-25 16:44:07,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:44:07,503:INFO:Checking exceptions
2023-05-25 16:44:07,503:INFO:Importing libraries
2023-05-25 16:44:07,503:INFO:Copying training dataset
2023-05-25 16:44:07,506:INFO:Defining folds
2023-05-25 16:44:07,506:INFO:Declaring metric variables
2023-05-25 16:44:07,510:INFO:Importing untrained model
2023-05-25 16:44:07,513:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 16:44:07,519:INFO:Starting cross validation
2023-05-25 16:44:07,520:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:44:13,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,587:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:13,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,624:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,626:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,627:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,633:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,635:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,637:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,695:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,697:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,699:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,722:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,723:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,725:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,732:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,735:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,737:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,739:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,740:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,743:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,787:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,789:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,791:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,797:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,798:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,799:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,838:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:13,840:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,106:INFO:Calculating mean and std
2023-05-25 16:44:15,107:INFO:Creating metrics dataframe
2023-05-25 16:44:15,329:INFO:Uploading results into container
2023-05-25 16:44:15,329:INFO:Uploading model into container now
2023-05-25 16:44:15,329:INFO:_master_model_container: 10
2023-05-25 16:44:15,330:INFO:_display_container: 2
2023-05-25 16:44:15,330:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7615, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 16:44:15,330:INFO:create_model() successfully completed......................................
2023-05-25 16:44:15,488:INFO:SubProcess create_model() end ==================================
2023-05-25 16:44:15,489:INFO:Creating metrics dataframe
2023-05-25 16:44:15,500:INFO:Initializing Linear Discriminant Analysis
2023-05-25 16:44:15,500:INFO:Total runtime is 0.580290667215983 minutes
2023-05-25 16:44:15,503:INFO:SubProcess create_model() called ==================================
2023-05-25 16:44:15,503:INFO:Initializing create_model()
2023-05-25 16:44:15,503:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:44:15,503:INFO:Checking exceptions
2023-05-25 16:44:15,503:INFO:Importing libraries
2023-05-25 16:44:15,503:INFO:Copying training dataset
2023-05-25 16:44:15,507:INFO:Defining folds
2023-05-25 16:44:15,508:INFO:Declaring metric variables
2023-05-25 16:44:15,511:INFO:Importing untrained model
2023-05-25 16:44:15,515:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 16:44:15,520:INFO:Starting cross validation
2023-05-25 16:44:15,521:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:44:15,760:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,762:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,763:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,765:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,768:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,770:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,792:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,794:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,794:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,795:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,796:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,796:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,797:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,797:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,799:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,800:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,802:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,804:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,804:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,805:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,806:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:15,806:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,816:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,817:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,818:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,819:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:15,821:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:17,183:INFO:Calculating mean and std
2023-05-25 16:44:17,184:INFO:Creating metrics dataframe
2023-05-25 16:44:17,415:INFO:Uploading results into container
2023-05-25 16:44:17,415:INFO:Uploading model into container now
2023-05-25 16:44:17,416:INFO:_master_model_container: 11
2023-05-25 16:44:17,416:INFO:_display_container: 2
2023-05-25 16:44:17,416:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 16:44:17,416:INFO:create_model() successfully completed......................................
2023-05-25 16:44:17,567:INFO:SubProcess create_model() end ==================================
2023-05-25 16:44:17,567:INFO:Creating metrics dataframe
2023-05-25 16:44:17,579:INFO:Initializing Extra Trees Classifier
2023-05-25 16:44:17,579:INFO:Total runtime is 0.6149296243985494 minutes
2023-05-25 16:44:17,582:INFO:SubProcess create_model() called ==================================
2023-05-25 16:44:17,582:INFO:Initializing create_model()
2023-05-25 16:44:17,583:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:44:17,583:INFO:Checking exceptions
2023-05-25 16:44:17,583:INFO:Importing libraries
2023-05-25 16:44:17,583:INFO:Copying training dataset
2023-05-25 16:44:17,587:INFO:Defining folds
2023-05-25 16:44:17,588:INFO:Declaring metric variables
2023-05-25 16:44:17,591:INFO:Importing untrained model
2023-05-25 16:44:17,595:INFO:Extra Trees Classifier Imported successfully
2023-05-25 16:44:17,601:INFO:Starting cross validation
2023-05-25 16:44:17,603:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:44:18,580:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:18,584:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,597:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,599:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,600:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:18,600:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,600:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,603:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,603:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:18,604:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,618:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,620:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,621:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:18,622:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,652:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,654:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,655:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:18,656:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,670:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,670:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,672:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,672:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,672:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:18,673:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,677:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,679:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,681:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:18,682:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,706:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,706:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,708:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,708:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,709:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:18,709:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:18,710:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:18,710:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:20,181:INFO:Calculating mean and std
2023-05-25 16:44:20,182:INFO:Creating metrics dataframe
2023-05-25 16:44:20,425:INFO:Uploading results into container
2023-05-25 16:44:20,426:INFO:Uploading model into container now
2023-05-25 16:44:20,426:INFO:_master_model_container: 12
2023-05-25 16:44:20,426:INFO:_display_container: 2
2023-05-25 16:44:20,427:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7615, verbose=0, warm_start=False)
2023-05-25 16:44:20,427:INFO:create_model() successfully completed......................................
2023-05-25 16:44:20,586:INFO:SubProcess create_model() end ==================================
2023-05-25 16:44:20,586:INFO:Creating metrics dataframe
2023-05-25 16:44:20,597:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 16:44:20,597:INFO:Total runtime is 0.665235968430837 minutes
2023-05-25 16:44:20,600:INFO:SubProcess create_model() called ==================================
2023-05-25 16:44:20,600:INFO:Initializing create_model()
2023-05-25 16:44:20,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:44:20,600:INFO:Checking exceptions
2023-05-25 16:44:20,600:INFO:Importing libraries
2023-05-25 16:44:20,600:INFO:Copying training dataset
2023-05-25 16:44:20,605:INFO:Defining folds
2023-05-25 16:44:20,605:INFO:Declaring metric variables
2023-05-25 16:44:20,609:INFO:Importing untrained model
2023-05-25 16:44:20,612:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 16:44:20,617:INFO:Starting cross validation
2023-05-25 16:44:20,618:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:44:23,114:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,116:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:23,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,127:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,129:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,131:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,159:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,161:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,163:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,188:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,191:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,192:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,192:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:23,193:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,193:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,194:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,195:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,196:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,229:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,231:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,232:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,233:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,235:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,237:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,260:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,262:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:23,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,299:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,301:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:23,303:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:24,708:INFO:Calculating mean and std
2023-05-25 16:44:24,709:INFO:Creating metrics dataframe
2023-05-25 16:44:24,979:INFO:Uploading results into container
2023-05-25 16:44:24,979:INFO:Uploading model into container now
2023-05-25 16:44:24,979:INFO:_master_model_container: 13
2023-05-25 16:44:24,979:INFO:_display_container: 2
2023-05-25 16:44:24,981:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7615, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 16:44:24,981:INFO:create_model() successfully completed......................................
2023-05-25 16:44:25,142:INFO:SubProcess create_model() end ==================================
2023-05-25 16:44:25,142:INFO:Creating metrics dataframe
2023-05-25 16:44:25,154:INFO:Initializing Dummy Classifier
2023-05-25 16:44:25,154:INFO:Total runtime is 0.741185212135315 minutes
2023-05-25 16:44:25,159:INFO:SubProcess create_model() called ==================================
2023-05-25 16:44:25,159:INFO:Initializing create_model()
2023-05-25 16:44:25,159:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6DBECD90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:44:25,159:INFO:Checking exceptions
2023-05-25 16:44:25,159:INFO:Importing libraries
2023-05-25 16:44:25,159:INFO:Copying training dataset
2023-05-25 16:44:25,165:INFO:Defining folds
2023-05-25 16:44:25,165:INFO:Declaring metric variables
2023-05-25 16:44:25,168:INFO:Importing untrained model
2023-05-25 16:44:25,171:INFO:Dummy Classifier Imported successfully
2023-05-25 16:44:25,177:INFO:Starting cross validation
2023-05-25 16:44:25,178:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:44:25,410:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,412:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,412:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:25,413:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,413:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,414:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,415:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:25,416:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,427:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,428:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:25,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,432:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:25,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,439:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,440:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,441:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:25,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,443:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,445:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,445:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,446:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,446:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:25,447:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:25,447:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,447:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,451:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,452:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,453:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:25,454:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,466:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,468:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,468:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,469:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:25,470:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,470:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:25,471:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:44:25,472:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:44:26,921:INFO:Calculating mean and std
2023-05-25 16:44:26,922:INFO:Creating metrics dataframe
2023-05-25 16:44:27,155:INFO:Uploading results into container
2023-05-25 16:44:27,155:INFO:Uploading model into container now
2023-05-25 16:44:27,156:INFO:_master_model_container: 14
2023-05-25 16:44:27,156:INFO:_display_container: 2
2023-05-25 16:44:27,156:INFO:DummyClassifier(constant=None, random_state=7615, strategy='prior')
2023-05-25 16:44:27,156:INFO:create_model() successfully completed......................................
2023-05-25 16:44:27,306:INFO:SubProcess create_model() end ==================================
2023-05-25 16:44:27,306:INFO:Creating metrics dataframe
2023-05-25 16:44:27,326:INFO:Initializing create_model()
2023-05-25 16:44:27,326:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:44:27,326:INFO:Checking exceptions
2023-05-25 16:44:27,328:INFO:Importing libraries
2023-05-25 16:44:27,328:INFO:Copying training dataset
2023-05-25 16:44:27,331:INFO:Defining folds
2023-05-25 16:44:27,332:INFO:Declaring metric variables
2023-05-25 16:44:27,332:INFO:Importing untrained model
2023-05-25 16:44:27,332:INFO:Declaring custom model
2023-05-25 16:44:27,332:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 16:44:27,333:INFO:Cross validation set to False
2023-05-25 16:44:27,333:INFO:Fitting Model
2023-05-25 16:44:27,576:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 16:44:27,576:INFO:create_model() successfully completed......................................
2023-05-25 16:44:27,760:INFO:_master_model_container: 14
2023-05-25 16:44:27,760:INFO:_display_container: 2
2023-05-25 16:44:27,760:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 16:44:27,760:INFO:compare_models() successfully completed......................................
2023-05-25 16:47:30,122:INFO:Initializing tune_model()
2023-05-25 16:47:30,122:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>)
2023-05-25 16:47:30,122:INFO:Checking exceptions
2023-05-25 16:47:30,140:INFO:Copying training dataset
2023-05-25 16:47:30,143:INFO:Checking base model
2023-05-25 16:47:30,143:INFO:Base model : Linear Discriminant Analysis
2023-05-25 16:47:30,146:INFO:Declaring metric variables
2023-05-25 16:47:30,149:INFO:Defining Hyperparameters
2023-05-25 16:47:30,317:INFO:Tuning with n_jobs=-1
2023-05-25 16:47:30,317:INFO:Initializing RandomizedSearchCV
2023-05-25 16:47:47,622:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
10 fits failed out of a total of 100.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py", line 571, in fit
    self._validate_params()
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\base.py", line 581, in _validate_params
    validate_parameter_constraints(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_param_validation.py", line 97, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'shrinkage' parameter of LinearDiscriminantAnalysis must be a str among {'auto'}, a float in the range [0, 1] or None. Got 'empirical' instead.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-05-25 16:47:47,626:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\model_selection\_search.py:952: UserWarning: One or more of the test scores are non-finite: [0.33006126        nan 0.4105407  0.32107039 0.38356443 0.36389164
 0.36389164 0.36218591 0.35532996 0.35532996]
  warnings.warn(

2023-05-25 16:47:47,858:INFO:best_params: {'actual_estimator__solver': 'lsqr', 'actual_estimator__shrinkage': 'auto'}
2023-05-25 16:47:47,858:INFO:Hyperparameter search completed
2023-05-25 16:47:47,858:INFO:SubProcess create_model() called ==================================
2023-05-25 16:47:47,859:INFO:Initializing create_model()
2023-05-25 16:47:47,859:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68B48370>, model_only=True, return_train_score=False, kwargs={'solver': 'lsqr', 'shrinkage': 'auto'})
2023-05-25 16:47:47,859:INFO:Checking exceptions
2023-05-25 16:47:47,859:INFO:Importing libraries
2023-05-25 16:47:47,859:INFO:Copying training dataset
2023-05-25 16:47:47,863:INFO:Defining folds
2023-05-25 16:47:47,863:INFO:Declaring metric variables
2023-05-25 16:47:47,866:INFO:Importing untrained model
2023-05-25 16:47:47,866:INFO:Declaring custom model
2023-05-25 16:47:47,869:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 16:47:47,874:INFO:Starting cross validation
2023-05-25 16:47:47,875:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:47:48,128:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,130:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,130:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,132:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,132:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,132:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,133:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,134:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,135:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,136:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,137:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,139:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,146:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,147:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:47:48,148:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,154:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,156:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,158:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,163:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,166:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,168:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,180:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,181:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,182:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,183:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,184:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,185:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,186:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,186:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:48,188:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:49,662:INFO:Calculating mean and std
2023-05-25 16:47:49,662:INFO:Creating metrics dataframe
2023-05-25 16:47:49,669:INFO:Finalizing model
2023-05-25 16:47:50,014:INFO:Uploading results into container
2023-05-25 16:47:50,015:INFO:Uploading model into container now
2023-05-25 16:47:50,015:INFO:_master_model_container: 15
2023-05-25 16:47:50,015:INFO:_display_container: 3
2023-05-25 16:47:50,015:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='auto', solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-05-25 16:47:50,015:INFO:create_model() successfully completed......................................
2023-05-25 16:47:50,185:INFO:SubProcess create_model() end ==================================
2023-05-25 16:47:50,185:INFO:choose_better activated
2023-05-25 16:47:50,188:INFO:SubProcess create_model() called ==================================
2023-05-25 16:47:50,188:INFO:Initializing create_model()
2023-05-25 16:47:50,189:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 16:47:50,189:INFO:Checking exceptions
2023-05-25 16:47:50,190:INFO:Importing libraries
2023-05-25 16:47:50,190:INFO:Copying training dataset
2023-05-25 16:47:50,194:INFO:Defining folds
2023-05-25 16:47:50,194:INFO:Declaring metric variables
2023-05-25 16:47:50,194:INFO:Importing untrained model
2023-05-25 16:47:50,194:INFO:Declaring custom model
2023-05-25 16:47:50,194:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 16:47:50,195:INFO:Starting cross validation
2023-05-25 16:47:50,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 16:47:50,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,432:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,434:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,441:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,443:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,443:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,444:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,444:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,449:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,450:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,452:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,452:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,453:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,455:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,456:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,459:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,461:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,475:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,477:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,478:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,479:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,481:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,481:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 16:47:50,482:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,487:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,488:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,489:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,513:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,515:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:50,517:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 16:47:51,937:INFO:Calculating mean and std
2023-05-25 16:47:51,938:INFO:Creating metrics dataframe
2023-05-25 16:47:51,939:INFO:Finalizing model
2023-05-25 16:47:52,273:INFO:Uploading results into container
2023-05-25 16:47:52,273:INFO:Uploading model into container now
2023-05-25 16:47:52,274:INFO:_master_model_container: 16
2023-05-25 16:47:52,274:INFO:_display_container: 4
2023-05-25 16:47:52,274:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 16:47:52,274:INFO:create_model() successfully completed......................................
2023-05-25 16:47:52,423:INFO:SubProcess create_model() end ==================================
2023-05-25 16:47:52,423:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for Accuracy is 0.4033
2023-05-25 16:47:52,424:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='auto', solver='lsqr',
                           store_covariance=False, tol=0.0001) result for Accuracy is 0.4105
2023-05-25 16:47:52,424:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='auto', solver='lsqr',
                           store_covariance=False, tol=0.0001) is best model
2023-05-25 16:47:52,424:INFO:choose_better completed
2023-05-25 16:47:52,431:INFO:_master_model_container: 16
2023-05-25 16:47:52,431:INFO:_display_container: 3
2023-05-25 16:47:52,431:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='auto', solver='lsqr',
                           store_covariance=False, tol=0.0001)
2023-05-25 16:47:52,432:INFO:tune_model() successfully completed......................................
2023-05-25 16:48:17,038:INFO:Initializing evaluate_model()
2023-05-25 16:48:17,038:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='auto', solver='lsqr',
                           store_covariance=False, tol=0.0001), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-25 16:48:17,050:INFO:Initializing plot_model()
2023-05-25 16:48:17,050:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='auto', solver='lsqr',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, system=True)
2023-05-25 16:48:17,050:INFO:Checking exceptions
2023-05-25 16:48:17,052:INFO:Preloading libraries
2023-05-25 16:48:17,052:INFO:Copying training dataset
2023-05-25 16:48:17,052:INFO:Plot type: pipeline
2023-05-25 16:48:17,167:INFO:Visual Rendered Successfully
2023-05-25 16:48:17,319:INFO:plot_model() successfully completed......................................
2023-05-25 16:48:22,809:INFO:Initializing plot_model()
2023-05-25 16:48:22,809:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='auto', solver='lsqr',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, system=True)
2023-05-25 16:48:22,809:INFO:Checking exceptions
2023-05-25 16:48:22,811:INFO:Preloading libraries
2023-05-25 16:48:22,811:INFO:Copying training dataset
2023-05-25 16:48:22,811:INFO:Plot type: auc
2023-05-25 16:48:22,992:INFO:Fitting Model
2023-05-25 16:48:22,992:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-05-25 16:48:22,993:INFO:Scoring test/hold-out set
2023-05-25 16:48:23,239:INFO:Visual Rendered Successfully
2023-05-25 16:48:23,392:INFO:plot_model() successfully completed......................................
2023-05-25 16:48:23,788:INFO:Initializing plot_model()
2023-05-25 16:48:23,788:INFO:plot_model(plot=parameter, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='auto', solver='lsqr',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, system=True)
2023-05-25 16:48:23,788:INFO:Checking exceptions
2023-05-25 16:48:23,790:INFO:Preloading libraries
2023-05-25 16:48:23,790:INFO:Copying training dataset
2023-05-25 16:48:23,790:INFO:Plot type: parameter
2023-05-25 16:48:23,794:INFO:Visual Rendered Successfully
2023-05-25 16:48:23,959:INFO:plot_model() successfully completed......................................
2023-05-25 16:48:26,772:INFO:Initializing plot_model()
2023-05-25 16:48:26,772:INFO:plot_model(plot=auc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='auto', solver='lsqr',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, system=True)
2023-05-25 16:48:26,772:INFO:Checking exceptions
2023-05-25 16:48:26,774:INFO:Preloading libraries
2023-05-25 16:48:26,774:INFO:Copying training dataset
2023-05-25 16:48:26,774:INFO:Plot type: auc
2023-05-25 16:48:26,957:INFO:Fitting Model
2023-05-25 16:48:26,957:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-05-25 16:48:26,957:INFO:Scoring test/hold-out set
2023-05-25 16:48:27,194:INFO:Visual Rendered Successfully
2023-05-25 16:48:27,374:INFO:plot_model() successfully completed......................................
2023-05-25 16:48:27,917:INFO:Initializing plot_model()
2023-05-25 16:48:27,917:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='auto', solver='lsqr',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, system=True)
2023-05-25 16:48:27,917:INFO:Checking exceptions
2023-05-25 16:48:27,918:INFO:Preloading libraries
2023-05-25 16:48:27,919:INFO:Copying training dataset
2023-05-25 16:48:27,919:INFO:Plot type: vc
2023-05-25 16:48:27,919:INFO:Determining param_name
2023-05-25 16:48:29,634:INFO:Initializing plot_model()
2023-05-25 16:48:29,634:INFO:plot_model(plot=class_report, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='auto', solver='lsqr',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, system=True)
2023-05-25 16:48:29,634:INFO:Checking exceptions
2023-05-25 16:48:29,636:INFO:Preloading libraries
2023-05-25 16:48:29,636:INFO:Copying training dataset
2023-05-25 16:48:29,636:INFO:Plot type: class_report
2023-05-25 16:48:29,830:INFO:Fitting Model
2023-05-25 16:48:29,830:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-05-25 16:48:29,830:INFO:Scoring test/hold-out set
2023-05-25 16:48:30,084:INFO:Visual Rendered Successfully
2023-05-25 16:48:30,254:INFO:plot_model() successfully completed......................................
2023-05-25 16:48:35,547:INFO:Initializing plot_model()
2023-05-25 16:48:35,547:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage='auto', solver='lsqr',
                           store_covariance=False, tol=0.0001), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71F3D120>, system=True)
2023-05-25 16:48:35,547:INFO:Checking exceptions
2023-05-25 16:48:35,549:INFO:Preloading libraries
2023-05-25 16:48:35,549:INFO:Copying training dataset
2023-05-25 16:48:35,549:INFO:Plot type: confusion_matrix
2023-05-25 16:48:35,733:INFO:Fitting Model
2023-05-25 16:48:35,733:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but LinearDiscriminantAnalysis was fitted with feature names
  warnings.warn(

2023-05-25 16:48:35,733:INFO:Scoring test/hold-out set
2023-05-25 16:48:35,956:INFO:Visual Rendered Successfully
2023-05-25 16:48:36,120:INFO:plot_model() successfully completed......................................
2023-05-25 16:49:12,172:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 18:39:22,347:INFO:PyCaret ClassificationExperiment
2023-05-25 18:39:22,347:INFO:Logging name: clf-default-name
2023-05-25 18:39:22,348:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 18:39:22,348:INFO:version 3.0.2
2023-05-25 18:39:22,348:INFO:Initializing setup()
2023-05-25 18:39:22,348:INFO:self.USI: bfc8
2023-05-25 18:39:22,348:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 18:39:22,348:INFO:Checking environment
2023-05-25 18:39:22,348:INFO:python_version: 3.10.9
2023-05-25 18:39:22,348:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 18:39:22,348:INFO:machine: AMD64
2023-05-25 18:39:22,348:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 18:39:22,348:INFO:Memory: svmem(total=17112055808, available=7658553344, percent=55.2, used=9453502464, free=7658553344)
2023-05-25 18:39:22,348:INFO:Physical Core: 8
2023-05-25 18:39:22,348:INFO:Logical Core: 16
2023-05-25 18:39:22,348:INFO:Checking libraries
2023-05-25 18:39:22,348:INFO:System:
2023-05-25 18:39:22,349:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 18:39:22,349:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 18:39:22,349:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 18:39:22,349:INFO:PyCaret required dependencies:
2023-05-25 18:39:22,349:INFO:                 pip: 22.3.1
2023-05-25 18:39:22,349:INFO:          setuptools: 65.6.3
2023-05-25 18:39:22,349:INFO:             pycaret: 3.0.2
2023-05-25 18:39:22,349:INFO:             IPython: 8.10.0
2023-05-25 18:39:22,349:INFO:          ipywidgets: 7.6.5
2023-05-25 18:39:22,349:INFO:                tqdm: 4.64.1
2023-05-25 18:39:22,349:INFO:               numpy: 1.23.5
2023-05-25 18:39:22,349:INFO:              pandas: 1.5.3
2023-05-25 18:39:22,349:INFO:              jinja2: 3.1.2
2023-05-25 18:39:22,349:INFO:               scipy: 1.10.0
2023-05-25 18:39:22,349:INFO:              joblib: 1.1.1
2023-05-25 18:39:22,349:INFO:             sklearn: 1.2.1
2023-05-25 18:39:22,349:INFO:                pyod: 1.0.9
2023-05-25 18:39:22,349:INFO:            imblearn: 0.10.1
2023-05-25 18:39:22,349:INFO:   category_encoders: 2.6.1
2023-05-25 18:39:22,350:INFO:            lightgbm: 3.3.5
2023-05-25 18:39:22,350:INFO:               numba: 0.56.4
2023-05-25 18:39:22,350:INFO:            requests: 2.28.1
2023-05-25 18:39:22,350:INFO:          matplotlib: 3.7.0
2023-05-25 18:39:22,350:INFO:          scikitplot: 0.3.7
2023-05-25 18:39:22,350:INFO:         yellowbrick: 1.5
2023-05-25 18:39:22,350:INFO:              plotly: 5.9.0
2023-05-25 18:39:22,350:INFO:             kaleido: 0.2.1
2023-05-25 18:39:22,350:INFO:         statsmodels: 0.13.5
2023-05-25 18:39:22,350:INFO:              sktime: 0.17.0
2023-05-25 18:39:22,350:INFO:               tbats: 1.1.3
2023-05-25 18:39:22,351:INFO:            pmdarima: 2.0.3
2023-05-25 18:39:22,351:INFO:              psutil: 5.9.0
2023-05-25 18:39:22,351:INFO:PyCaret optional dependencies:
2023-05-25 18:39:22,351:INFO:                shap: Not installed
2023-05-25 18:39:22,351:INFO:           interpret: Not installed
2023-05-25 18:39:22,351:INFO:                umap: Not installed
2023-05-25 18:39:22,351:INFO:    pandas_profiling: Not installed
2023-05-25 18:39:22,351:INFO:  explainerdashboard: Not installed
2023-05-25 18:39:22,351:INFO:             autoviz: Not installed
2023-05-25 18:39:22,351:INFO:           fairlearn: Not installed
2023-05-25 18:39:22,351:INFO:             xgboost: Not installed
2023-05-25 18:39:22,351:INFO:            catboost: Not installed
2023-05-25 18:39:22,351:INFO:              kmodes: Not installed
2023-05-25 18:39:22,351:INFO:             mlxtend: Not installed
2023-05-25 18:39:22,351:INFO:       statsforecast: Not installed
2023-05-25 18:39:22,351:INFO:        tune_sklearn: Not installed
2023-05-25 18:39:22,351:INFO:                 ray: Not installed
2023-05-25 18:39:22,351:INFO:            hyperopt: Not installed
2023-05-25 18:39:22,351:INFO:              optuna: Not installed
2023-05-25 18:39:22,351:INFO:               skopt: Not installed
2023-05-25 18:39:22,351:INFO:              mlflow: Not installed
2023-05-25 18:39:22,351:INFO:              gradio: Not installed
2023-05-25 18:39:22,352:INFO:             fastapi: Not installed
2023-05-25 18:39:22,352:INFO:             uvicorn: Not installed
2023-05-25 18:39:22,352:INFO:              m2cgen: Not installed
2023-05-25 18:39:22,352:INFO:           evidently: Not installed
2023-05-25 18:39:22,352:INFO:               fugue: Not installed
2023-05-25 18:39:22,352:INFO:           streamlit: Not installed
2023-05-25 18:39:22,352:INFO:             prophet: Not installed
2023-05-25 18:39:22,352:INFO:None
2023-05-25 18:39:22,352:INFO:Set up data.
2023-05-25 18:39:22,360:INFO:Set up train/test split.
2023-05-25 18:39:22,366:INFO:Set up index.
2023-05-25 18:39:22,366:INFO:Set up folding strategy.
2023-05-25 18:39:22,366:INFO:Assigning column types.
2023-05-25 18:39:22,368:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 18:39:22,410:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 18:39:22,410:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 18:39:22,436:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:22,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:22,477:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 18:39:22,477:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 18:39:22,503:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:22,504:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:22,504:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 18:39:22,545:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 18:39:22,570:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:22,570:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:22,612:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 18:39:22,636:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:22,636:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:22,637:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 18:39:22,703:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:22,703:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:22,770:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:22,770:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:22,771:INFO:Preparing preprocessing pipeline...
2023-05-25 18:39:22,772:INFO:Set up label encoding.
2023-05-25 18:39:22,772:INFO:Set up simple imputation.
2023-05-25 18:39:22,774:INFO:Set up encoding of categorical features.
2023-05-25 18:39:22,831:INFO:Finished creating preprocessing pipeline.
2023-05-25 18:39:22,837:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['APM', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'NumberOfPACs', 'GapBetweenPACs',
                                             'TotalMa...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['HoursPerWeek', 'TotalHours'],
                                    transformer=TargetEncoder(cols=['HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 18:39:22,837:INFO:Creating final display dataframe.
2023-05-25 18:39:23,027:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      5146
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                (3338, 11)
5        Transformed data shape                                (3338, 11)
6   Transformed train set shape                                (2670, 11)
7    Transformed test set shape                                 (668, 11)
8              Numeric features                                         8
9          Categorical features                                         2
10                   Preprocess                                      True
11              Imputation type                                    simple
12           Numeric imputation                                      mean
13       Categorical imputation                                      mode
14     Maximum one-hot encoding                                        25
15              Encoding method                                      None
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                         5
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      bfc8
2023-05-25 18:39:23,100:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:23,100:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:23,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:23,167:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 18:39:23,167:INFO:setup() successfully completed in 1.06s...............
2023-05-25 18:39:30,597:INFO:Initializing compare_models()
2023-05-25 18:39:30,597:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 18:39:30,597:INFO:Checking exceptions
2023-05-25 18:39:30,601:INFO:Preparing display monitor
2023-05-25 18:39:30,624:INFO:Initializing Logistic Regression
2023-05-25 18:39:30,624:INFO:Total runtime is 0.0 minutes
2023-05-25 18:39:30,627:INFO:SubProcess create_model() called ==================================
2023-05-25 18:39:30,627:INFO:Initializing create_model()
2023-05-25 18:39:30,627:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:39:30,627:INFO:Checking exceptions
2023-05-25 18:39:30,627:INFO:Importing libraries
2023-05-25 18:39:30,627:INFO:Copying training dataset
2023-05-25 18:39:30,631:INFO:Defining folds
2023-05-25 18:39:30,631:INFO:Declaring metric variables
2023-05-25 18:39:30,634:INFO:Importing untrained model
2023-05-25 18:39:30,637:INFO:Logistic Regression Imported successfully
2023-05-25 18:39:30,642:INFO:Starting cross validation
2023-05-25 18:39:30,644:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:39:37,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 18:39:37,596:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 18:39:37,607:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 18:39:37,618:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 18:39:37,625:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 18:39:37,722:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,722:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,723:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,723:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,724:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,725:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,727:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,729:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,730:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,738:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,741:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,742:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,744:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,746:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:37,747:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:37,747:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:38,395:INFO:Calculating mean and std
2023-05-25 18:39:38,396:INFO:Creating metrics dataframe
2023-05-25 18:39:38,632:INFO:Uploading results into container
2023-05-25 18:39:38,633:INFO:Uploading model into container now
2023-05-25 18:39:38,633:INFO:_master_model_container: 1
2023-05-25 18:39:38,633:INFO:_display_container: 2
2023-05-25 18:39:38,633:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5146, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 18:39:38,633:INFO:create_model() successfully completed......................................
2023-05-25 18:39:38,861:INFO:SubProcess create_model() end ==================================
2023-05-25 18:39:38,861:INFO:Creating metrics dataframe
2023-05-25 18:39:38,870:INFO:Initializing K Neighbors Classifier
2023-05-25 18:39:38,871:INFO:Total runtime is 0.1374561349550883 minutes
2023-05-25 18:39:38,873:INFO:SubProcess create_model() called ==================================
2023-05-25 18:39:38,874:INFO:Initializing create_model()
2023-05-25 18:39:38,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:39:38,874:INFO:Checking exceptions
2023-05-25 18:39:38,874:INFO:Importing libraries
2023-05-25 18:39:38,874:INFO:Copying training dataset
2023-05-25 18:39:38,878:INFO:Defining folds
2023-05-25 18:39:38,878:INFO:Declaring metric variables
2023-05-25 18:39:38,882:INFO:Importing untrained model
2023-05-25 18:39:38,885:INFO:K Neighbors Classifier Imported successfully
2023-05-25 18:39:38,891:INFO:Starting cross validation
2023-05-25 18:39:38,892:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:39:41,730:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,730:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,732:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,732:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,732:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:41,733:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,733:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,737:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,738:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,739:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,745:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,746:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,748:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:41,748:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,751:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,753:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:41,754:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:42,376:INFO:Calculating mean and std
2023-05-25 18:39:42,377:INFO:Creating metrics dataframe
2023-05-25 18:39:42,610:INFO:Uploading results into container
2023-05-25 18:39:42,610:INFO:Uploading model into container now
2023-05-25 18:39:42,611:INFO:_master_model_container: 2
2023-05-25 18:39:42,611:INFO:_display_container: 2
2023-05-25 18:39:42,611:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 18:39:42,611:INFO:create_model() successfully completed......................................
2023-05-25 18:39:42,770:INFO:SubProcess create_model() end ==================================
2023-05-25 18:39:42,770:INFO:Creating metrics dataframe
2023-05-25 18:39:42,780:INFO:Initializing Naive Bayes
2023-05-25 18:39:42,780:INFO:Total runtime is 0.2025988737742106 minutes
2023-05-25 18:39:42,783:INFO:SubProcess create_model() called ==================================
2023-05-25 18:39:42,783:INFO:Initializing create_model()
2023-05-25 18:39:42,783:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:39:42,783:INFO:Checking exceptions
2023-05-25 18:39:42,783:INFO:Importing libraries
2023-05-25 18:39:42,783:INFO:Copying training dataset
2023-05-25 18:39:42,788:INFO:Defining folds
2023-05-25 18:39:42,788:INFO:Declaring metric variables
2023-05-25 18:39:42,791:INFO:Importing untrained model
2023-05-25 18:39:42,794:INFO:Naive Bayes Imported successfully
2023-05-25 18:39:42,800:INFO:Starting cross validation
2023-05-25 18:39:42,801:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:39:45,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,648:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,648:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,650:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,650:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,653:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,654:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,655:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,656:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,657:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,658:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,658:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:45,659:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,659:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:45,660:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:46,320:INFO:Calculating mean and std
2023-05-25 18:39:46,321:INFO:Creating metrics dataframe
2023-05-25 18:39:46,554:INFO:Uploading results into container
2023-05-25 18:39:46,555:INFO:Uploading model into container now
2023-05-25 18:39:46,555:INFO:_master_model_container: 3
2023-05-25 18:39:46,555:INFO:_display_container: 2
2023-05-25 18:39:46,555:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 18:39:46,555:INFO:create_model() successfully completed......................................
2023-05-25 18:39:46,713:INFO:SubProcess create_model() end ==================================
2023-05-25 18:39:46,713:INFO:Creating metrics dataframe
2023-05-25 18:39:46,722:INFO:Initializing Decision Tree Classifier
2023-05-25 18:39:46,722:INFO:Total runtime is 0.2683113098144531 minutes
2023-05-25 18:39:46,725:INFO:SubProcess create_model() called ==================================
2023-05-25 18:39:46,725:INFO:Initializing create_model()
2023-05-25 18:39:46,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:39:46,725:INFO:Checking exceptions
2023-05-25 18:39:46,725:INFO:Importing libraries
2023-05-25 18:39:46,725:INFO:Copying training dataset
2023-05-25 18:39:46,730:INFO:Defining folds
2023-05-25 18:39:46,731:INFO:Declaring metric variables
2023-05-25 18:39:46,734:INFO:Importing untrained model
2023-05-25 18:39:46,737:INFO:Decision Tree Classifier Imported successfully
2023-05-25 18:39:46,742:INFO:Starting cross validation
2023-05-25 18:39:46,743:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:39:46,941:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:46,942:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:46,943:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:46,947:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:46,948:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:46,948:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:46,949:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:46,950:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:46,951:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:46,959:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:46,960:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:46,961:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:48,988:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:48,990:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:48,991:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:48,994:INFO:Calculating mean and std
2023-05-25 18:39:48,995:INFO:Creating metrics dataframe
2023-05-25 18:39:49,233:INFO:Uploading results into container
2023-05-25 18:39:49,234:INFO:Uploading model into container now
2023-05-25 18:39:49,234:INFO:_master_model_container: 4
2023-05-25 18:39:49,234:INFO:_display_container: 2
2023-05-25 18:39:49,235:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5146, splitter='best')
2023-05-25 18:39:49,235:INFO:create_model() successfully completed......................................
2023-05-25 18:39:49,400:INFO:SubProcess create_model() end ==================================
2023-05-25 18:39:49,400:INFO:Creating metrics dataframe
2023-05-25 18:39:49,411:INFO:Initializing SVM - Linear Kernel
2023-05-25 18:39:49,411:INFO:Total runtime is 0.3131158868471781 minutes
2023-05-25 18:39:49,415:INFO:SubProcess create_model() called ==================================
2023-05-25 18:39:49,415:INFO:Initializing create_model()
2023-05-25 18:39:49,415:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:39:49,415:INFO:Checking exceptions
2023-05-25 18:39:49,415:INFO:Importing libraries
2023-05-25 18:39:49,415:INFO:Copying training dataset
2023-05-25 18:39:49,421:INFO:Defining folds
2023-05-25 18:39:49,421:INFO:Declaring metric variables
2023-05-25 18:39:49,425:INFO:Importing untrained model
2023-05-25 18:39:49,428:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 18:39:49,434:INFO:Starting cross validation
2023-05-25 18:39:49,435:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:39:49,633:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 18:39:49,633:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 18:39:49,634:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,634:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,635:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 18:39:49,635:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,635:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,635:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,636:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:49,636:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:49,636:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,636:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,637:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,638:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:49,638:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,644:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 18:39:49,645:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,646:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,646:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 18:39:49,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,648:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:49,649:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:49,649:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,298:INFO:Calculating mean and std
2023-05-25 18:39:50,300:INFO:Creating metrics dataframe
2023-05-25 18:39:50,528:INFO:Uploading results into container
2023-05-25 18:39:50,528:INFO:Uploading model into container now
2023-05-25 18:39:50,530:INFO:_master_model_container: 5
2023-05-25 18:39:50,530:INFO:_display_container: 2
2023-05-25 18:39:50,530:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5146, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 18:39:50,530:INFO:create_model() successfully completed......................................
2023-05-25 18:39:50,687:INFO:SubProcess create_model() end ==================================
2023-05-25 18:39:50,687:INFO:Creating metrics dataframe
2023-05-25 18:39:50,697:INFO:Initializing Ridge Classifier
2023-05-25 18:39:50,697:INFO:Total runtime is 0.33455708026885983 minutes
2023-05-25 18:39:50,701:INFO:SubProcess create_model() called ==================================
2023-05-25 18:39:50,701:INFO:Initializing create_model()
2023-05-25 18:39:50,701:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:39:50,701:INFO:Checking exceptions
2023-05-25 18:39:50,701:INFO:Importing libraries
2023-05-25 18:39:50,701:INFO:Copying training dataset
2023-05-25 18:39:50,705:INFO:Defining folds
2023-05-25 18:39:50,705:INFO:Declaring metric variables
2023-05-25 18:39:50,708:INFO:Importing untrained model
2023-05-25 18:39:50,711:INFO:Ridge Classifier Imported successfully
2023-05-25 18:39:50,717:INFO:Starting cross validation
2023-05-25 18:39:50,718:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:39:50,887:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 18:39:50,888:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 18:39:50,888:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,888:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 18:39:50,888:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,889:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,889:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,890:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,890:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:50,890:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,890:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,891:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:50,892:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:50,892:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,893:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,893:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 18:39:50,894:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 18:39:50,894:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,894:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,895:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,895:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,896:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:50,896:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:50,896:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:50,897:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:51,522:INFO:Calculating mean and std
2023-05-25 18:39:51,523:INFO:Creating metrics dataframe
2023-05-25 18:39:51,755:INFO:Uploading results into container
2023-05-25 18:39:51,756:INFO:Uploading model into container now
2023-05-25 18:39:51,756:INFO:_master_model_container: 6
2023-05-25 18:39:51,756:INFO:_display_container: 2
2023-05-25 18:39:51,757:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5146, solver='auto',
                tol=0.0001)
2023-05-25 18:39:51,757:INFO:create_model() successfully completed......................................
2023-05-25 18:39:51,915:INFO:SubProcess create_model() end ==================================
2023-05-25 18:39:51,915:INFO:Creating metrics dataframe
2023-05-25 18:39:51,926:INFO:Initializing Random Forest Classifier
2023-05-25 18:39:51,926:INFO:Total runtime is 0.35503585338592525 minutes
2023-05-25 18:39:51,929:INFO:SubProcess create_model() called ==================================
2023-05-25 18:39:51,929:INFO:Initializing create_model()
2023-05-25 18:39:51,929:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:39:51,929:INFO:Checking exceptions
2023-05-25 18:39:51,930:INFO:Importing libraries
2023-05-25 18:39:51,930:INFO:Copying training dataset
2023-05-25 18:39:51,934:INFO:Defining folds
2023-05-25 18:39:51,935:INFO:Declaring metric variables
2023-05-25 18:39:51,938:INFO:Importing untrained model
2023-05-25 18:39:51,940:INFO:Random Forest Classifier Imported successfully
2023-05-25 18:39:51,945:INFO:Starting cross validation
2023-05-25 18:39:51,947:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:39:52,725:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,725:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,727:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,727:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,728:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,728:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,743:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,744:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,745:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:52,746:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,758:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,758:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,759:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,759:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,761:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:52,761:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:52,761:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:52,761:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:53,382:INFO:Calculating mean and std
2023-05-25 18:39:53,383:INFO:Creating metrics dataframe
2023-05-25 18:39:53,620:INFO:Uploading results into container
2023-05-25 18:39:53,621:INFO:Uploading model into container now
2023-05-25 18:39:53,621:INFO:_master_model_container: 7
2023-05-25 18:39:53,621:INFO:_display_container: 2
2023-05-25 18:39:53,622:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5146, verbose=0, warm_start=False)
2023-05-25 18:39:53,622:INFO:create_model() successfully completed......................................
2023-05-25 18:39:53,788:INFO:SubProcess create_model() end ==================================
2023-05-25 18:39:53,788:INFO:Creating metrics dataframe
2023-05-25 18:39:53,798:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 18:39:53,798:INFO:Total runtime is 0.38624557256698605 minutes
2023-05-25 18:39:53,801:INFO:SubProcess create_model() called ==================================
2023-05-25 18:39:53,802:INFO:Initializing create_model()
2023-05-25 18:39:53,802:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:39:53,802:INFO:Checking exceptions
2023-05-25 18:39:53,802:INFO:Importing libraries
2023-05-25 18:39:53,802:INFO:Copying training dataset
2023-05-25 18:39:53,806:INFO:Defining folds
2023-05-25 18:39:53,807:INFO:Declaring metric variables
2023-05-25 18:39:53,809:INFO:Importing untrained model
2023-05-25 18:39:53,813:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 18:39:53,818:INFO:Starting cross validation
2023-05-25 18:39:53,820:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:39:54,015:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,017:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,017:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,018:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,018:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,020:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,025:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,025:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,026:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,026:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,027:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:54,027:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,027:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,032:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,033:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,035:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:54,679:INFO:Calculating mean and std
2023-05-25 18:39:54,680:INFO:Creating metrics dataframe
2023-05-25 18:39:54,927:INFO:Uploading results into container
2023-05-25 18:39:54,928:INFO:Uploading model into container now
2023-05-25 18:39:54,928:INFO:_master_model_container: 8
2023-05-25 18:39:54,928:INFO:_display_container: 2
2023-05-25 18:39:54,928:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 18:39:54,928:INFO:create_model() successfully completed......................................
2023-05-25 18:39:55,094:INFO:SubProcess create_model() end ==================================
2023-05-25 18:39:55,094:INFO:Creating metrics dataframe
2023-05-25 18:39:55,105:INFO:Initializing Ada Boost Classifier
2023-05-25 18:39:55,105:INFO:Total runtime is 0.4080252329508463 minutes
2023-05-25 18:39:55,108:INFO:SubProcess create_model() called ==================================
2023-05-25 18:39:55,108:INFO:Initializing create_model()
2023-05-25 18:39:55,108:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:39:55,108:INFO:Checking exceptions
2023-05-25 18:39:55,108:INFO:Importing libraries
2023-05-25 18:39:55,108:INFO:Copying training dataset
2023-05-25 18:39:55,113:INFO:Defining folds
2023-05-25 18:39:55,114:INFO:Declaring metric variables
2023-05-25 18:39:55,116:INFO:Importing untrained model
2023-05-25 18:39:55,119:INFO:Ada Boost Classifier Imported successfully
2023-05-25 18:39:55,125:INFO:Starting cross validation
2023-05-25 18:39:55,126:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:39:55,618:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,620:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,621:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,630:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,631:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,632:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,633:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,633:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:55,633:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,633:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:39:55,634:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,640:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,642:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,643:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,644:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,645:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:55,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:39:56,277:INFO:Calculating mean and std
2023-05-25 18:39:56,278:INFO:Creating metrics dataframe
2023-05-25 18:39:56,523:INFO:Uploading results into container
2023-05-25 18:39:56,524:INFO:Uploading model into container now
2023-05-25 18:39:56,524:INFO:_master_model_container: 9
2023-05-25 18:39:56,524:INFO:_display_container: 2
2023-05-25 18:39:56,525:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5146)
2023-05-25 18:39:56,525:INFO:create_model() successfully completed......................................
2023-05-25 18:39:56,682:INFO:SubProcess create_model() end ==================================
2023-05-25 18:39:56,682:INFO:Creating metrics dataframe
2023-05-25 18:39:56,693:INFO:Initializing Gradient Boosting Classifier
2023-05-25 18:39:56,693:INFO:Total runtime is 0.4344817241032918 minutes
2023-05-25 18:39:56,696:INFO:SubProcess create_model() called ==================================
2023-05-25 18:39:56,696:INFO:Initializing create_model()
2023-05-25 18:39:56,696:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:39:56,696:INFO:Checking exceptions
2023-05-25 18:39:56,696:INFO:Importing libraries
2023-05-25 18:39:56,696:INFO:Copying training dataset
2023-05-25 18:39:56,701:INFO:Defining folds
2023-05-25 18:39:56,701:INFO:Declaring metric variables
2023-05-25 18:39:56,704:INFO:Importing untrained model
2023-05-25 18:39:56,707:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 18:39:56,714:INFO:Starting cross validation
2023-05-25 18:39:56,715:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:40:01,761:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,762:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,763:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,765:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,767:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,769:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,780:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,781:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,782:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,818:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,821:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:01,822:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:02,438:INFO:Calculating mean and std
2023-05-25 18:40:02,440:INFO:Creating metrics dataframe
2023-05-25 18:40:02,685:INFO:Uploading results into container
2023-05-25 18:40:02,686:INFO:Uploading model into container now
2023-05-25 18:40:02,686:INFO:_master_model_container: 10
2023-05-25 18:40:02,686:INFO:_display_container: 2
2023-05-25 18:40:02,687:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5146, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 18:40:02,687:INFO:create_model() successfully completed......................................
2023-05-25 18:40:02,848:INFO:SubProcess create_model() end ==================================
2023-05-25 18:40:02,850:INFO:Creating metrics dataframe
2023-05-25 18:40:02,860:INFO:Initializing Linear Discriminant Analysis
2023-05-25 18:40:02,861:INFO:Total runtime is 0.5372926870981851 minutes
2023-05-25 18:40:02,864:INFO:SubProcess create_model() called ==================================
2023-05-25 18:40:02,864:INFO:Initializing create_model()
2023-05-25 18:40:02,864:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:40:02,864:INFO:Checking exceptions
2023-05-25 18:40:02,865:INFO:Importing libraries
2023-05-25 18:40:02,865:INFO:Copying training dataset
2023-05-25 18:40:02,870:INFO:Defining folds
2023-05-25 18:40:02,870:INFO:Declaring metric variables
2023-05-25 18:40:02,873:INFO:Importing untrained model
2023-05-25 18:40:02,877:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 18:40:02,882:INFO:Starting cross validation
2023-05-25 18:40:02,883:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:40:03,065:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,065:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,066:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,067:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,067:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,068:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,076:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,077:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,078:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,092:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,093:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,094:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,094:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,095:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,096:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:03,743:INFO:Calculating mean and std
2023-05-25 18:40:03,744:INFO:Creating metrics dataframe
2023-05-25 18:40:03,985:INFO:Uploading results into container
2023-05-25 18:40:03,985:INFO:Uploading model into container now
2023-05-25 18:40:03,986:INFO:_master_model_container: 11
2023-05-25 18:40:03,986:INFO:_display_container: 2
2023-05-25 18:40:03,986:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 18:40:03,986:INFO:create_model() successfully completed......................................
2023-05-25 18:40:04,155:INFO:SubProcess create_model() end ==================================
2023-05-25 18:40:04,155:INFO:Creating metrics dataframe
2023-05-25 18:40:04,165:INFO:Initializing Extra Trees Classifier
2023-05-25 18:40:04,166:INFO:Total runtime is 0.5590459386507669 minutes
2023-05-25 18:40:04,168:INFO:SubProcess create_model() called ==================================
2023-05-25 18:40:04,169:INFO:Initializing create_model()
2023-05-25 18:40:04,169:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:40:04,169:INFO:Checking exceptions
2023-05-25 18:40:04,169:INFO:Importing libraries
2023-05-25 18:40:04,169:INFO:Copying training dataset
2023-05-25 18:40:04,174:INFO:Defining folds
2023-05-25 18:40:04,174:INFO:Declaring metric variables
2023-05-25 18:40:04,177:INFO:Importing untrained model
2023-05-25 18:40:04,180:INFO:Extra Trees Classifier Imported successfully
2023-05-25 18:40:04,186:INFO:Starting cross validation
2023-05-25 18:40:04,187:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:40:04,849:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,851:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,851:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:40:04,852:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,856:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,857:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:40:04,858:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,859:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,860:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,861:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,861:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,862:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,863:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:40:04,863:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,865:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,866:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:04,867:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:40:04,868:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:05,536:INFO:Calculating mean and std
2023-05-25 18:40:05,537:INFO:Creating metrics dataframe
2023-05-25 18:40:05,780:INFO:Uploading results into container
2023-05-25 18:40:05,780:INFO:Uploading model into container now
2023-05-25 18:40:05,781:INFO:_master_model_container: 12
2023-05-25 18:40:05,781:INFO:_display_container: 2
2023-05-25 18:40:05,781:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5146, verbose=0, warm_start=False)
2023-05-25 18:40:05,781:INFO:create_model() successfully completed......................................
2023-05-25 18:40:05,937:INFO:SubProcess create_model() end ==================================
2023-05-25 18:40:05,938:INFO:Creating metrics dataframe
2023-05-25 18:40:05,949:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 18:40:05,949:INFO:Total runtime is 0.5887502233187356 minutes
2023-05-25 18:40:05,952:INFO:SubProcess create_model() called ==================================
2023-05-25 18:40:05,952:INFO:Initializing create_model()
2023-05-25 18:40:05,952:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:40:05,952:INFO:Checking exceptions
2023-05-25 18:40:05,953:INFO:Importing libraries
2023-05-25 18:40:05,953:INFO:Copying training dataset
2023-05-25 18:40:05,957:INFO:Defining folds
2023-05-25 18:40:05,957:INFO:Declaring metric variables
2023-05-25 18:40:05,960:INFO:Importing untrained model
2023-05-25 18:40:05,963:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 18:40:05,969:INFO:Starting cross validation
2023-05-25 18:40:05,970:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:40:08,110:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,111:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,113:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:40:08,121:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,128:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,130:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,131:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,160:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,161:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,163:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,170:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,171:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,172:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:40:08,172:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:08,820:INFO:Calculating mean and std
2023-05-25 18:40:08,821:INFO:Creating metrics dataframe
2023-05-25 18:40:09,062:INFO:Uploading results into container
2023-05-25 18:40:09,063:INFO:Uploading model into container now
2023-05-25 18:40:09,063:INFO:_master_model_container: 13
2023-05-25 18:40:09,063:INFO:_display_container: 2
2023-05-25 18:40:09,064:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5146, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 18:40:09,064:INFO:create_model() successfully completed......................................
2023-05-25 18:40:09,236:INFO:SubProcess create_model() end ==================================
2023-05-25 18:40:09,236:INFO:Creating metrics dataframe
2023-05-25 18:40:09,247:INFO:Initializing Dummy Classifier
2023-05-25 18:40:09,247:INFO:Total runtime is 0.6437312761942544 minutes
2023-05-25 18:40:09,251:INFO:SubProcess create_model() called ==================================
2023-05-25 18:40:09,252:INFO:Initializing create_model()
2023-05-25 18:40:09,252:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6EF060B0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:40:09,252:INFO:Checking exceptions
2023-05-25 18:40:09,252:INFO:Importing libraries
2023-05-25 18:40:09,252:INFO:Copying training dataset
2023-05-25 18:40:09,256:INFO:Defining folds
2023-05-25 18:40:09,256:INFO:Declaring metric variables
2023-05-25 18:40:09,259:INFO:Importing untrained model
2023-05-25 18:40:09,261:INFO:Dummy Classifier Imported successfully
2023-05-25 18:40:09,268:INFO:Starting cross validation
2023-05-25 18:40:09,270:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:40:09,447:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,448:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,448:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:40:09,450:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,450:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,451:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,451:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,452:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:40:09,452:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,452:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,453:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:40:09,453:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,455:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,457:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,457:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:40:09,458:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,461:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,463:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:09,464:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:40:09,465:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:10,143:INFO:Calculating mean and std
2023-05-25 18:40:10,144:INFO:Creating metrics dataframe
2023-05-25 18:40:10,388:INFO:Uploading results into container
2023-05-25 18:40:10,389:INFO:Uploading model into container now
2023-05-25 18:40:10,389:INFO:_master_model_container: 14
2023-05-25 18:40:10,389:INFO:_display_container: 2
2023-05-25 18:40:10,389:INFO:DummyClassifier(constant=None, random_state=5146, strategy='prior')
2023-05-25 18:40:10,389:INFO:create_model() successfully completed......................................
2023-05-25 18:40:10,556:INFO:SubProcess create_model() end ==================================
2023-05-25 18:40:10,556:INFO:Creating metrics dataframe
2023-05-25 18:40:10,576:INFO:Initializing create_model()
2023-05-25 18:40:10,576:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:40:10,576:INFO:Checking exceptions
2023-05-25 18:40:10,577:INFO:Importing libraries
2023-05-25 18:40:10,578:INFO:Copying training dataset
2023-05-25 18:40:10,581:INFO:Defining folds
2023-05-25 18:40:10,581:INFO:Declaring metric variables
2023-05-25 18:40:10,581:INFO:Importing untrained model
2023-05-25 18:40:10,581:INFO:Declaring custom model
2023-05-25 18:40:10,581:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 18:40:10,582:INFO:Cross validation set to False
2023-05-25 18:40:10,582:INFO:Fitting Model
2023-05-25 18:40:10,832:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 18:40:10,832:INFO:create_model() successfully completed......................................
2023-05-25 18:40:11,014:INFO:_master_model_container: 14
2023-05-25 18:40:11,014:INFO:_display_container: 2
2023-05-25 18:40:11,015:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 18:40:11,015:INFO:compare_models() successfully completed......................................
2023-05-25 18:40:37,092:INFO:Initializing tune_model()
2023-05-25 18:40:37,092:INFO:tune_model(estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>)
2023-05-25 18:40:37,092:INFO:Checking exceptions
2023-05-25 18:40:37,108:INFO:Copying training dataset
2023-05-25 18:40:37,113:INFO:Checking base model
2023-05-25 18:40:37,113:INFO:Base model : Linear Discriminant Analysis
2023-05-25 18:40:37,116:INFO:Declaring metric variables
2023-05-25 18:40:37,118:INFO:Defining Hyperparameters
2023-05-25 18:40:37,286:INFO:Tuning with n_jobs=-1
2023-05-25 18:40:37,286:INFO:Initializing RandomizedSearchCV
2023-05-25 18:40:46,272:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\model_selection\_validation.py:378: FitFailedWarning: 
5 fits failed out of a total of 50.
The score on these train-test partitions for these parameters will be set to nan.
If these failures are not expected, you can try to debug them by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
5 fits failed with the following error:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py", line 571, in fit
    self._validate_params()
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\base.py", line 581, in _validate_params
    validate_parameter_constraints(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_param_validation.py", line 97, in validate_parameter_constraints
    raise InvalidParameterError(
sklearn.utils._param_validation.InvalidParameterError: The 'shrinkage' parameter of LinearDiscriminantAnalysis must be a str among {'auto'}, a float in the range [0, 1] or None. Got 'empirical' instead.

  warnings.warn(some_fits_failed_message, FitFailedWarning)

2023-05-25 18:40:46,272:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\model_selection\_search.py:952: UserWarning: One or more of the test scores are non-finite: [       nan 0.36891386 0.36891386 0.36928839 0.36891386 0.36779026
 0.36479401 0.3588015  0.35318352 0.3494382 ]
  warnings.warn(

2023-05-25 18:40:46,509:INFO:best_params: {'actual_estimator__solver': 'eigen', 'actual_estimator__shrinkage': 0.1}
2023-05-25 18:40:46,509:INFO:Hyperparameter search completed
2023-05-25 18:40:46,509:INFO:SubProcess create_model() called ==================================
2023-05-25 18:40:46,509:INFO:Initializing create_model()
2023-05-25 18:40:46,510:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE57FC7B50>, model_only=True, return_train_score=False, kwargs={'solver': 'eigen', 'shrinkage': 0.1})
2023-05-25 18:40:46,510:INFO:Checking exceptions
2023-05-25 18:40:46,510:INFO:Importing libraries
2023-05-25 18:40:46,510:INFO:Copying training dataset
2023-05-25 18:40:46,514:INFO:Defining folds
2023-05-25 18:40:46,514:INFO:Declaring metric variables
2023-05-25 18:40:46,517:INFO:Importing untrained model
2023-05-25 18:40:46,517:INFO:Declaring custom model
2023-05-25 18:40:46,520:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 18:40:46,526:INFO:Starting cross validation
2023-05-25 18:40:46,527:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:40:46,710:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,711:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,712:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:40:46,712:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,718:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,718:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,719:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,719:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,721:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,721:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,721:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,722:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,722:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,732:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,734:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:46,735:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 18:40:46,735:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:47,388:INFO:Calculating mean and std
2023-05-25 18:40:47,389:INFO:Creating metrics dataframe
2023-05-25 18:40:47,394:INFO:Finalizing model
2023-05-25 18:40:47,742:INFO:Uploading results into container
2023-05-25 18:40:47,743:INFO:Uploading model into container now
2023-05-25 18:40:47,743:INFO:_master_model_container: 15
2023-05-25 18:40:47,743:INFO:_display_container: 3
2023-05-25 18:40:47,743:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.1, solver='eigen',
                           store_covariance=False, tol=0.0001)
2023-05-25 18:40:47,744:INFO:create_model() successfully completed......................................
2023-05-25 18:40:47,899:INFO:SubProcess create_model() end ==================================
2023-05-25 18:40:47,899:INFO:choose_better activated
2023-05-25 18:40:47,902:INFO:SubProcess create_model() called ==================================
2023-05-25 18:40:47,903:INFO:Initializing create_model()
2023-05-25 18:40:47,903:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6E74BAF0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 18:40:47,903:INFO:Checking exceptions
2023-05-25 18:40:47,904:INFO:Importing libraries
2023-05-25 18:40:47,904:INFO:Copying training dataset
2023-05-25 18:40:47,908:INFO:Defining folds
2023-05-25 18:40:47,908:INFO:Declaring metric variables
2023-05-25 18:40:47,908:INFO:Importing untrained model
2023-05-25 18:40:47,908:INFO:Declaring custom model
2023-05-25 18:40:47,908:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 18:40:47,909:INFO:Starting cross validation
2023-05-25 18:40:47,910:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 18:40:48,088:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,090:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,091:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,095:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,096:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,097:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,100:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,106:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,114:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,116:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,117:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 18:40:48,778:INFO:Calculating mean and std
2023-05-25 18:40:48,779:INFO:Creating metrics dataframe
2023-05-25 18:40:48,781:INFO:Finalizing model
2023-05-25 18:40:49,125:INFO:Uploading results into container
2023-05-25 18:40:49,126:INFO:Uploading model into container now
2023-05-25 18:40:49,126:INFO:_master_model_container: 16
2023-05-25 18:40:49,126:INFO:_display_container: 4
2023-05-25 18:40:49,127:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 18:40:49,127:INFO:create_model() successfully completed......................................
2023-05-25 18:40:49,295:INFO:SubProcess create_model() end ==================================
2023-05-25 18:40:49,296:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) result for Accuracy is 0.3978
2023-05-25 18:40:49,296:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=0.1, solver='eigen',
                           store_covariance=False, tol=0.0001) result for Accuracy is 0.3693
2023-05-25 18:40:49,296:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001) is best model
2023-05-25 18:40:49,296:INFO:choose_better completed
2023-05-25 18:40:49,296:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-05-25 18:40:49,304:INFO:_master_model_container: 16
2023-05-25 18:40:49,304:INFO:_display_container: 3
2023-05-25 18:40:49,304:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 18:40:49,304:INFO:tune_model() successfully completed......................................
2023-05-25 19:30:32,339:INFO:PyCaret ClassificationExperiment
2023-05-25 19:30:32,339:INFO:Logging name: clf-default-name
2023-05-25 19:30:32,339:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 19:30:32,339:INFO:version 3.0.2
2023-05-25 19:30:32,339:INFO:Initializing setup()
2023-05-25 19:30:32,339:INFO:self.USI: 933a
2023-05-25 19:30:32,339:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 19:30:32,339:INFO:Checking environment
2023-05-25 19:30:32,339:INFO:python_version: 3.10.9
2023-05-25 19:30:32,339:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 19:30:32,339:INFO:machine: AMD64
2023-05-25 19:30:32,339:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 19:30:32,339:INFO:Memory: svmem(total=17112055808, available=7833706496, percent=54.2, used=9278349312, free=7833706496)
2023-05-25 19:30:32,340:INFO:Physical Core: 8
2023-05-25 19:30:32,340:INFO:Logical Core: 16
2023-05-25 19:30:32,340:INFO:Checking libraries
2023-05-25 19:30:32,340:INFO:System:
2023-05-25 19:30:32,340:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 19:30:32,340:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 19:30:32,340:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 19:30:32,340:INFO:PyCaret required dependencies:
2023-05-25 19:30:32,340:INFO:                 pip: 22.3.1
2023-05-25 19:30:32,340:INFO:          setuptools: 65.6.3
2023-05-25 19:30:32,340:INFO:             pycaret: 3.0.2
2023-05-25 19:30:32,340:INFO:             IPython: 8.10.0
2023-05-25 19:30:32,340:INFO:          ipywidgets: 7.6.5
2023-05-25 19:30:32,340:INFO:                tqdm: 4.64.1
2023-05-25 19:30:32,340:INFO:               numpy: 1.23.5
2023-05-25 19:30:32,340:INFO:              pandas: 1.5.3
2023-05-25 19:30:32,340:INFO:              jinja2: 3.1.2
2023-05-25 19:30:32,340:INFO:               scipy: 1.10.0
2023-05-25 19:30:32,340:INFO:              joblib: 1.1.1
2023-05-25 19:30:32,340:INFO:             sklearn: 1.2.1
2023-05-25 19:30:32,340:INFO:                pyod: 1.0.9
2023-05-25 19:30:32,340:INFO:            imblearn: 0.10.1
2023-05-25 19:30:32,340:INFO:   category_encoders: 2.6.1
2023-05-25 19:30:32,341:INFO:            lightgbm: 3.3.5
2023-05-25 19:30:32,341:INFO:               numba: 0.56.4
2023-05-25 19:30:32,341:INFO:            requests: 2.28.1
2023-05-25 19:30:32,341:INFO:          matplotlib: 3.7.0
2023-05-25 19:30:32,341:INFO:          scikitplot: 0.3.7
2023-05-25 19:30:32,341:INFO:         yellowbrick: 1.5
2023-05-25 19:30:32,341:INFO:              plotly: 5.9.0
2023-05-25 19:30:32,341:INFO:             kaleido: 0.2.1
2023-05-25 19:30:32,341:INFO:         statsmodels: 0.13.5
2023-05-25 19:30:32,341:INFO:              sktime: 0.17.0
2023-05-25 19:30:32,341:INFO:               tbats: 1.1.3
2023-05-25 19:30:32,341:INFO:            pmdarima: 2.0.3
2023-05-25 19:30:32,341:INFO:              psutil: 5.9.0
2023-05-25 19:30:32,341:INFO:PyCaret optional dependencies:
2023-05-25 19:30:32,341:INFO:                shap: Not installed
2023-05-25 19:30:32,341:INFO:           interpret: Not installed
2023-05-25 19:30:32,341:INFO:                umap: Not installed
2023-05-25 19:30:32,341:INFO:    pandas_profiling: Not installed
2023-05-25 19:30:32,341:INFO:  explainerdashboard: Not installed
2023-05-25 19:30:32,341:INFO:             autoviz: Not installed
2023-05-25 19:30:32,341:INFO:           fairlearn: Not installed
2023-05-25 19:30:32,341:INFO:             xgboost: Not installed
2023-05-25 19:30:32,341:INFO:            catboost: Not installed
2023-05-25 19:30:32,341:INFO:              kmodes: Not installed
2023-05-25 19:30:32,342:INFO:             mlxtend: Not installed
2023-05-25 19:30:32,342:INFO:       statsforecast: Not installed
2023-05-25 19:30:32,342:INFO:        tune_sklearn: Not installed
2023-05-25 19:30:32,342:INFO:                 ray: Not installed
2023-05-25 19:30:32,342:INFO:            hyperopt: Not installed
2023-05-25 19:30:32,342:INFO:              optuna: Not installed
2023-05-25 19:30:32,342:INFO:               skopt: Not installed
2023-05-25 19:30:32,342:INFO:              mlflow: Not installed
2023-05-25 19:30:32,342:INFO:              gradio: Not installed
2023-05-25 19:30:32,342:INFO:             fastapi: Not installed
2023-05-25 19:30:32,342:INFO:             uvicorn: Not installed
2023-05-25 19:30:32,342:INFO:              m2cgen: Not installed
2023-05-25 19:30:32,342:INFO:           evidently: Not installed
2023-05-25 19:30:32,342:INFO:               fugue: Not installed
2023-05-25 19:30:32,342:INFO:           streamlit: Not installed
2023-05-25 19:30:32,342:INFO:             prophet: Not installed
2023-05-25 19:30:32,342:INFO:None
2023-05-25 19:30:32,342:INFO:Set up data.
2023-05-25 19:30:32,348:INFO:Set up train/test split.
2023-05-25 19:30:32,352:INFO:Set up index.
2023-05-25 19:30:32,353:INFO:Set up folding strategy.
2023-05-25 19:30:32,353:INFO:Assigning column types.
2023-05-25 19:30:32,355:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 19:30:32,396:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:30:32,396:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:30:32,421:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:32,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:32,461:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:30:32,462:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:30:32,487:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:32,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:32,488:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 19:30:32,528:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:30:32,553:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:32,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:32,593:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:30:32,619:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:32,619:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:32,619:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 19:30:32,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:32,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:32,751:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:32,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:32,752:INFO:Preparing preprocessing pipeline...
2023-05-25 19:30:32,753:INFO:Set up label encoding.
2023-05-25 19:30:32,753:INFO:Set up simple imputation.
2023-05-25 19:30:32,755:INFO:Set up encoding of categorical features.
2023-05-25 19:30:32,811:INFO:Finished creating preprocessing pipeline.
2023-05-25 19:30:32,817:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['UniqueHotkeys', 'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'GapBetweenPACs',
                                             'TotalMapExplored',
                                             'ComplexAb...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['HoursPerWeek', 'TotalHours'],
                                    transformer=TargetEncoder(cols=['HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 19:30:32,817:INFO:Creating final display dataframe.
2023-05-25 19:30:33,003:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      7899
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                 (3338, 9)
5        Transformed data shape                                 (3338, 9)
6   Transformed train set shape                                 (2670, 9)
7    Transformed test set shape                                  (668, 9)
8              Numeric features                                         6
9          Categorical features                                         2
10                   Preprocess                                      True
11              Imputation type                                    simple
12           Numeric imputation                                      mean
13       Categorical imputation                                      mode
14     Maximum one-hot encoding                                        25
15              Encoding method                                      None
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                         5
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      933a
2023-05-25 19:30:33,074:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:33,074:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:33,139:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:33,139:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:30:33,140:INFO:setup() successfully completed in 0.97s...............
2023-05-25 19:30:37,653:INFO:Initializing compare_models()
2023-05-25 19:30:37,653:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 19:30:37,653:INFO:Checking exceptions
2023-05-25 19:30:37,656:INFO:Preparing display monitor
2023-05-25 19:30:37,679:INFO:Initializing Logistic Regression
2023-05-25 19:30:37,679:INFO:Total runtime is 0.0 minutes
2023-05-25 19:30:37,681:INFO:SubProcess create_model() called ==================================
2023-05-25 19:30:37,681:INFO:Initializing create_model()
2023-05-25 19:30:37,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:30:37,682:INFO:Checking exceptions
2023-05-25 19:30:37,682:INFO:Importing libraries
2023-05-25 19:30:37,682:INFO:Copying training dataset
2023-05-25 19:30:37,685:INFO:Defining folds
2023-05-25 19:30:37,685:INFO:Declaring metric variables
2023-05-25 19:30:37,689:INFO:Importing untrained model
2023-05-25 19:30:37,692:INFO:Logistic Regression Imported successfully
2023-05-25 19:30:37,697:INFO:Starting cross validation
2023-05-25 19:30:37,698:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:30:42,416:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:30:42,429:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:30:42,436:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:30:42,437:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:30:42,454:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:30:42,527:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,529:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,530:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,539:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,540:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,542:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,553:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,554:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,555:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,556:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,556:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,557:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,564:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,566:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:42,566:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:42,567:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:43,242:INFO:Calculating mean and std
2023-05-25 19:30:43,243:INFO:Creating metrics dataframe
2023-05-25 19:30:43,489:INFO:Uploading results into container
2023-05-25 19:30:43,490:INFO:Uploading model into container now
2023-05-25 19:30:43,490:INFO:_master_model_container: 1
2023-05-25 19:30:43,490:INFO:_display_container: 2
2023-05-25 19:30:43,490:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7899, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:30:43,490:INFO:create_model() successfully completed......................................
2023-05-25 19:30:43,675:INFO:SubProcess create_model() end ==================================
2023-05-25 19:30:43,675:INFO:Creating metrics dataframe
2023-05-25 19:30:43,684:INFO:Initializing K Neighbors Classifier
2023-05-25 19:30:43,685:INFO:Total runtime is 0.10010019938151042 minutes
2023-05-25 19:30:43,687:INFO:SubProcess create_model() called ==================================
2023-05-25 19:30:43,688:INFO:Initializing create_model()
2023-05-25 19:30:43,688:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:30:43,688:INFO:Checking exceptions
2023-05-25 19:30:43,688:INFO:Importing libraries
2023-05-25 19:30:43,688:INFO:Copying training dataset
2023-05-25 19:30:43,691:INFO:Defining folds
2023-05-25 19:30:43,692:INFO:Declaring metric variables
2023-05-25 19:30:43,695:INFO:Importing untrained model
2023-05-25 19:30:43,697:INFO:K Neighbors Classifier Imported successfully
2023-05-25 19:30:43,704:INFO:Starting cross validation
2023-05-25 19:30:43,705:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:30:46,045:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,046:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,047:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:46,047:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,062:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,063:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,064:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:46,065:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,067:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,068:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,069:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:46,069:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,079:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,080:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,081:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:46,732:INFO:Calculating mean and std
2023-05-25 19:30:46,733:INFO:Creating metrics dataframe
2023-05-25 19:30:46,974:INFO:Uploading results into container
2023-05-25 19:30:46,975:INFO:Uploading model into container now
2023-05-25 19:30:46,975:INFO:_master_model_container: 2
2023-05-25 19:30:46,975:INFO:_display_container: 2
2023-05-25 19:30:46,976:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 19:30:46,976:INFO:create_model() successfully completed......................................
2023-05-25 19:30:47,133:INFO:SubProcess create_model() end ==================================
2023-05-25 19:30:47,133:INFO:Creating metrics dataframe
2023-05-25 19:30:47,142:INFO:Initializing Naive Bayes
2023-05-25 19:30:47,142:INFO:Total runtime is 0.157714581489563 minutes
2023-05-25 19:30:47,146:INFO:SubProcess create_model() called ==================================
2023-05-25 19:30:47,146:INFO:Initializing create_model()
2023-05-25 19:30:47,146:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:30:47,146:INFO:Checking exceptions
2023-05-25 19:30:47,146:INFO:Importing libraries
2023-05-25 19:30:47,146:INFO:Copying training dataset
2023-05-25 19:30:47,150:INFO:Defining folds
2023-05-25 19:30:47,150:INFO:Declaring metric variables
2023-05-25 19:30:47,153:INFO:Importing untrained model
2023-05-25 19:30:47,156:INFO:Naive Bayes Imported successfully
2023-05-25 19:30:47,162:INFO:Starting cross validation
2023-05-25 19:30:47,163:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:30:49,472:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,473:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,474:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,474:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,475:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,475:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,478:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,478:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,479:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,479:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,479:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:49,480:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,480:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,483:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,484:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:49,485:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:50,176:INFO:Calculating mean and std
2023-05-25 19:30:50,177:INFO:Creating metrics dataframe
2023-05-25 19:30:50,424:INFO:Uploading results into container
2023-05-25 19:30:50,424:INFO:Uploading model into container now
2023-05-25 19:30:50,424:INFO:_master_model_container: 3
2023-05-25 19:30:50,425:INFO:_display_container: 2
2023-05-25 19:30:50,425:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 19:30:50,425:INFO:create_model() successfully completed......................................
2023-05-25 19:30:50,588:INFO:SubProcess create_model() end ==================================
2023-05-25 19:30:50,589:INFO:Creating metrics dataframe
2023-05-25 19:30:50,597:INFO:Initializing Decision Tree Classifier
2023-05-25 19:30:50,597:INFO:Total runtime is 0.21530720392862956 minutes
2023-05-25 19:30:50,601:INFO:SubProcess create_model() called ==================================
2023-05-25 19:30:50,602:INFO:Initializing create_model()
2023-05-25 19:30:50,602:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:30:50,602:INFO:Checking exceptions
2023-05-25 19:30:50,602:INFO:Importing libraries
2023-05-25 19:30:50,602:INFO:Copying training dataset
2023-05-25 19:30:50,606:INFO:Defining folds
2023-05-25 19:30:50,606:INFO:Declaring metric variables
2023-05-25 19:30:50,609:INFO:Importing untrained model
2023-05-25 19:30:50,612:INFO:Decision Tree Classifier Imported successfully
2023-05-25 19:30:50,619:INFO:Starting cross validation
2023-05-25 19:30:50,619:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:30:50,816:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:50,817:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:50,818:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:50,818:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:50,819:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:50,819:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:50,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:50,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:50,822:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:50,825:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:50,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:50,827:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:52,800:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:52,802:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:52,803:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:52,806:INFO:Calculating mean and std
2023-05-25 19:30:52,807:INFO:Creating metrics dataframe
2023-05-25 19:30:53,059:INFO:Uploading results into container
2023-05-25 19:30:53,059:INFO:Uploading model into container now
2023-05-25 19:30:53,059:INFO:_master_model_container: 4
2023-05-25 19:30:53,059:INFO:_display_container: 2
2023-05-25 19:30:53,059:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7899, splitter='best')
2023-05-25 19:30:53,060:INFO:create_model() successfully completed......................................
2023-05-25 19:30:53,217:INFO:SubProcess create_model() end ==================================
2023-05-25 19:30:53,217:INFO:Creating metrics dataframe
2023-05-25 19:30:53,227:INFO:Initializing SVM - Linear Kernel
2023-05-25 19:30:53,227:INFO:Total runtime is 0.2591275890668233 minutes
2023-05-25 19:30:53,230:INFO:SubProcess create_model() called ==================================
2023-05-25 19:30:53,230:INFO:Initializing create_model()
2023-05-25 19:30:53,230:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:30:53,230:INFO:Checking exceptions
2023-05-25 19:30:53,231:INFO:Importing libraries
2023-05-25 19:30:53,231:INFO:Copying training dataset
2023-05-25 19:30:53,234:INFO:Defining folds
2023-05-25 19:30:53,235:INFO:Declaring metric variables
2023-05-25 19:30:53,237:INFO:Importing untrained model
2023-05-25 19:30:53,241:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 19:30:53,247:INFO:Starting cross validation
2023-05-25 19:30:53,248:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:30:53,429:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:30:53,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,430:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:30:53,430:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:30:53,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,432:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:53,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:53,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,434:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,434:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:53,434:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,436:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:30:53,437:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,437:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,439:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:53,440:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,448:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:30:53,449:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,450:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:53,451:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:53,452:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,134:INFO:Calculating mean and std
2023-05-25 19:30:54,135:INFO:Creating metrics dataframe
2023-05-25 19:30:54,382:INFO:Uploading results into container
2023-05-25 19:30:54,382:INFO:Uploading model into container now
2023-05-25 19:30:54,382:INFO:_master_model_container: 5
2023-05-25 19:30:54,383:INFO:_display_container: 2
2023-05-25 19:30:54,383:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7899, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 19:30:54,383:INFO:create_model() successfully completed......................................
2023-05-25 19:30:54,551:INFO:SubProcess create_model() end ==================================
2023-05-25 19:30:54,551:INFO:Creating metrics dataframe
2023-05-25 19:30:54,560:INFO:Initializing Ridge Classifier
2023-05-25 19:30:54,560:INFO:Total runtime is 0.2813533544540405 minutes
2023-05-25 19:30:54,563:INFO:SubProcess create_model() called ==================================
2023-05-25 19:30:54,563:INFO:Initializing create_model()
2023-05-25 19:30:54,563:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:30:54,564:INFO:Checking exceptions
2023-05-25 19:30:54,564:INFO:Importing libraries
2023-05-25 19:30:54,564:INFO:Copying training dataset
2023-05-25 19:30:54,567:INFO:Defining folds
2023-05-25 19:30:54,569:INFO:Declaring metric variables
2023-05-25 19:30:54,572:INFO:Importing untrained model
2023-05-25 19:30:54,575:INFO:Ridge Classifier Imported successfully
2023-05-25 19:30:54,580:INFO:Starting cross validation
2023-05-25 19:30:54,581:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:30:54,724:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:30:54,725:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,726:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,727:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:54,728:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,730:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:30:54,730:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,731:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,732:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:54,733:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,733:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:30:54,733:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:30:54,734:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,734:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,735:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,735:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,736:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:54,736:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:54,736:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,736:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,739:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:30:54,740:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,741:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:54,742:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:54,743:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:55,424:INFO:Calculating mean and std
2023-05-25 19:30:55,425:INFO:Creating metrics dataframe
2023-05-25 19:30:55,682:INFO:Uploading results into container
2023-05-25 19:30:55,683:INFO:Uploading model into container now
2023-05-25 19:30:55,683:INFO:_master_model_container: 6
2023-05-25 19:30:55,683:INFO:_display_container: 2
2023-05-25 19:30:55,684:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7899, solver='auto',
                tol=0.0001)
2023-05-25 19:30:55,684:INFO:create_model() successfully completed......................................
2023-05-25 19:30:55,841:INFO:SubProcess create_model() end ==================================
2023-05-25 19:30:55,841:INFO:Creating metrics dataframe
2023-05-25 19:30:55,851:INFO:Initializing Random Forest Classifier
2023-05-25 19:30:55,851:INFO:Total runtime is 0.3028682986895243 minutes
2023-05-25 19:30:55,854:INFO:SubProcess create_model() called ==================================
2023-05-25 19:30:55,854:INFO:Initializing create_model()
2023-05-25 19:30:55,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:30:55,854:INFO:Checking exceptions
2023-05-25 19:30:55,854:INFO:Importing libraries
2023-05-25 19:30:55,855:INFO:Copying training dataset
2023-05-25 19:30:55,859:INFO:Defining folds
2023-05-25 19:30:55,859:INFO:Declaring metric variables
2023-05-25 19:30:55,862:INFO:Importing untrained model
2023-05-25 19:30:55,865:INFO:Random Forest Classifier Imported successfully
2023-05-25 19:30:55,870:INFO:Starting cross validation
2023-05-25 19:30:55,871:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:30:56,595:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,596:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,596:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,598:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,598:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,598:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,599:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:56,599:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,599:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,600:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:56,601:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,601:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,602:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,603:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,603:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,604:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:56,604:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:30:56,605:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,297:INFO:Calculating mean and std
2023-05-25 19:30:57,298:INFO:Creating metrics dataframe
2023-05-25 19:30:57,549:INFO:Uploading results into container
2023-05-25 19:30:57,550:INFO:Uploading model into container now
2023-05-25 19:30:57,550:INFO:_master_model_container: 7
2023-05-25 19:30:57,550:INFO:_display_container: 2
2023-05-25 19:30:57,551:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7899, verbose=0, warm_start=False)
2023-05-25 19:30:57,551:INFO:create_model() successfully completed......................................
2023-05-25 19:30:57,704:INFO:SubProcess create_model() end ==================================
2023-05-25 19:30:57,704:INFO:Creating metrics dataframe
2023-05-25 19:30:57,714:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 19:30:57,714:INFO:Total runtime is 0.3339178840319315 minutes
2023-05-25 19:30:57,717:INFO:SubProcess create_model() called ==================================
2023-05-25 19:30:57,718:INFO:Initializing create_model()
2023-05-25 19:30:57,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:30:57,718:INFO:Checking exceptions
2023-05-25 19:30:57,718:INFO:Importing libraries
2023-05-25 19:30:57,718:INFO:Copying training dataset
2023-05-25 19:30:57,723:INFO:Defining folds
2023-05-25 19:30:57,723:INFO:Declaring metric variables
2023-05-25 19:30:57,726:INFO:Importing untrained model
2023-05-25 19:30:57,729:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 19:30:57,734:INFO:Starting cross validation
2023-05-25 19:30:57,736:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:30:57,921:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,922:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,923:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,923:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,924:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,924:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,925:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,926:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,927:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,927:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,928:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,929:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,931:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,932:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:57,934:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:58,617:INFO:Calculating mean and std
2023-05-25 19:30:58,619:INFO:Creating metrics dataframe
2023-05-25 19:30:58,874:INFO:Uploading results into container
2023-05-25 19:30:58,875:INFO:Uploading model into container now
2023-05-25 19:30:58,875:INFO:_master_model_container: 8
2023-05-25 19:30:58,875:INFO:_display_container: 2
2023-05-25 19:30:58,875:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 19:30:58,875:INFO:create_model() successfully completed......................................
2023-05-25 19:30:59,042:INFO:SubProcess create_model() end ==================================
2023-05-25 19:30:59,042:INFO:Creating metrics dataframe
2023-05-25 19:30:59,052:INFO:Initializing Ada Boost Classifier
2023-05-25 19:30:59,052:INFO:Total runtime is 0.3562196532885233 minutes
2023-05-25 19:30:59,055:INFO:SubProcess create_model() called ==================================
2023-05-25 19:30:59,055:INFO:Initializing create_model()
2023-05-25 19:30:59,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:30:59,055:INFO:Checking exceptions
2023-05-25 19:30:59,056:INFO:Importing libraries
2023-05-25 19:30:59,056:INFO:Copying training dataset
2023-05-25 19:30:59,061:INFO:Defining folds
2023-05-25 19:30:59,061:INFO:Declaring metric variables
2023-05-25 19:30:59,064:INFO:Importing untrained model
2023-05-25 19:30:59,067:INFO:Ada Boost Classifier Imported successfully
2023-05-25 19:30:59,073:INFO:Starting cross validation
2023-05-25 19:30:59,074:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:30:59,522:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,524:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,524:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,526:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,526:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,527:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,527:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,527:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,527:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,527:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:30:59,530:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:00,241:INFO:Calculating mean and std
2023-05-25 19:31:00,242:INFO:Creating metrics dataframe
2023-05-25 19:31:00,503:INFO:Uploading results into container
2023-05-25 19:31:00,504:INFO:Uploading model into container now
2023-05-25 19:31:00,504:INFO:_master_model_container: 9
2023-05-25 19:31:00,504:INFO:_display_container: 2
2023-05-25 19:31:00,504:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7899)
2023-05-25 19:31:00,504:INFO:create_model() successfully completed......................................
2023-05-25 19:31:00,666:INFO:SubProcess create_model() end ==================================
2023-05-25 19:31:00,666:INFO:Creating metrics dataframe
2023-05-25 19:31:00,677:INFO:Initializing Gradient Boosting Classifier
2023-05-25 19:31:00,677:INFO:Total runtime is 0.3832965016365051 minutes
2023-05-25 19:31:00,680:INFO:SubProcess create_model() called ==================================
2023-05-25 19:31:00,680:INFO:Initializing create_model()
2023-05-25 19:31:00,681:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:31:00,681:INFO:Checking exceptions
2023-05-25 19:31:00,681:INFO:Importing libraries
2023-05-25 19:31:00,681:INFO:Copying training dataset
2023-05-25 19:31:00,685:INFO:Defining folds
2023-05-25 19:31:00,685:INFO:Declaring metric variables
2023-05-25 19:31:00,688:INFO:Importing untrained model
2023-05-25 19:31:00,691:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 19:31:00,697:INFO:Starting cross validation
2023-05-25 19:31:00,697:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:31:04,577:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,579:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,580:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,585:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,587:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,589:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,606:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,607:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,607:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,609:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,610:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,611:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,630:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,631:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:04,632:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,309:INFO:Calculating mean and std
2023-05-25 19:31:05,309:INFO:Creating metrics dataframe
2023-05-25 19:31:05,565:INFO:Uploading results into container
2023-05-25 19:31:05,566:INFO:Uploading model into container now
2023-05-25 19:31:05,566:INFO:_master_model_container: 10
2023-05-25 19:31:05,566:INFO:_display_container: 2
2023-05-25 19:31:05,567:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7899, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 19:31:05,567:INFO:create_model() successfully completed......................................
2023-05-25 19:31:05,724:INFO:SubProcess create_model() end ==================================
2023-05-25 19:31:05,725:INFO:Creating metrics dataframe
2023-05-25 19:31:05,736:INFO:Initializing Linear Discriminant Analysis
2023-05-25 19:31:05,736:INFO:Total runtime is 0.4676120519638061 minutes
2023-05-25 19:31:05,738:INFO:SubProcess create_model() called ==================================
2023-05-25 19:31:05,739:INFO:Initializing create_model()
2023-05-25 19:31:05,739:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:31:05,739:INFO:Checking exceptions
2023-05-25 19:31:05,739:INFO:Importing libraries
2023-05-25 19:31:05,739:INFO:Copying training dataset
2023-05-25 19:31:05,743:INFO:Defining folds
2023-05-25 19:31:05,743:INFO:Declaring metric variables
2023-05-25 19:31:05,746:INFO:Importing untrained model
2023-05-25 19:31:05,749:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 19:31:05,755:INFO:Starting cross validation
2023-05-25 19:31:05,756:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:31:05,941:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,941:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,943:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,943:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,944:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,944:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,949:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,950:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,959:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,962:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,964:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,969:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:05,971:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:06,667:INFO:Calculating mean and std
2023-05-25 19:31:06,670:INFO:Creating metrics dataframe
2023-05-25 19:31:06,934:INFO:Uploading results into container
2023-05-25 19:31:06,935:INFO:Uploading model into container now
2023-05-25 19:31:06,935:INFO:_master_model_container: 11
2023-05-25 19:31:06,935:INFO:_display_container: 2
2023-05-25 19:31:06,935:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 19:31:06,936:INFO:create_model() successfully completed......................................
2023-05-25 19:31:07,093:INFO:SubProcess create_model() end ==================================
2023-05-25 19:31:07,093:INFO:Creating metrics dataframe
2023-05-25 19:31:07,104:INFO:Initializing Extra Trees Classifier
2023-05-25 19:31:07,104:INFO:Total runtime is 0.4904226740201314 minutes
2023-05-25 19:31:07,107:INFO:SubProcess create_model() called ==================================
2023-05-25 19:31:07,107:INFO:Initializing create_model()
2023-05-25 19:31:07,107:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:31:07,107:INFO:Checking exceptions
2023-05-25 19:31:07,107:INFO:Importing libraries
2023-05-25 19:31:07,107:INFO:Copying training dataset
2023-05-25 19:31:07,113:INFO:Defining folds
2023-05-25 19:31:07,113:INFO:Declaring metric variables
2023-05-25 19:31:07,116:INFO:Importing untrained model
2023-05-25 19:31:07,119:INFO:Extra Trees Classifier Imported successfully
2023-05-25 19:31:07,125:INFO:Starting cross validation
2023-05-25 19:31:07,126:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:31:07,794:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,796:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,796:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:31:07,797:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,809:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,811:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,811:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,812:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:31:07,812:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,812:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,814:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,815:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,816:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,817:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,834:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,836:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:07,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:31:07,838:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:08,514:INFO:Calculating mean and std
2023-05-25 19:31:08,515:INFO:Creating metrics dataframe
2023-05-25 19:31:08,775:INFO:Uploading results into container
2023-05-25 19:31:08,776:INFO:Uploading model into container now
2023-05-25 19:31:08,776:INFO:_master_model_container: 12
2023-05-25 19:31:08,776:INFO:_display_container: 2
2023-05-25 19:31:08,776:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7899, verbose=0, warm_start=False)
2023-05-25 19:31:08,776:INFO:create_model() successfully completed......................................
2023-05-25 19:31:08,942:INFO:SubProcess create_model() end ==================================
2023-05-25 19:31:08,943:INFO:Creating metrics dataframe
2023-05-25 19:31:08,956:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 19:31:08,956:INFO:Total runtime is 0.5212789098421732 minutes
2023-05-25 19:31:08,959:INFO:SubProcess create_model() called ==================================
2023-05-25 19:31:08,959:INFO:Initializing create_model()
2023-05-25 19:31:08,959:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:31:08,960:INFO:Checking exceptions
2023-05-25 19:31:08,960:INFO:Importing libraries
2023-05-25 19:31:08,960:INFO:Copying training dataset
2023-05-25 19:31:08,964:INFO:Defining folds
2023-05-25 19:31:08,964:INFO:Declaring metric variables
2023-05-25 19:31:08,968:INFO:Importing untrained model
2023-05-25 19:31:08,970:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 19:31:08,976:INFO:Starting cross validation
2023-05-25 19:31:08,977:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:31:10,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,767:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,769:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,793:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,794:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,795:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,810:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,811:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,812:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,819:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,821:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:31:10,821:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,843:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,845:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:10,846:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:11,487:INFO:Calculating mean and std
2023-05-25 19:31:11,488:INFO:Creating metrics dataframe
2023-05-25 19:31:11,754:INFO:Uploading results into container
2023-05-25 19:31:11,754:INFO:Uploading model into container now
2023-05-25 19:31:11,755:INFO:_master_model_container: 13
2023-05-25 19:31:11,755:INFO:_display_container: 2
2023-05-25 19:31:11,755:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7899, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 19:31:11,755:INFO:create_model() successfully completed......................................
2023-05-25 19:31:11,914:INFO:SubProcess create_model() end ==================================
2023-05-25 19:31:11,914:INFO:Creating metrics dataframe
2023-05-25 19:31:11,926:INFO:Initializing Dummy Classifier
2023-05-25 19:31:11,926:INFO:Total runtime is 0.5707884391148884 minutes
2023-05-25 19:31:11,930:INFO:SubProcess create_model() called ==================================
2023-05-25 19:31:11,930:INFO:Initializing create_model()
2023-05-25 19:31:11,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6E69E1D0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:31:11,930:INFO:Checking exceptions
2023-05-25 19:31:11,930:INFO:Importing libraries
2023-05-25 19:31:11,930:INFO:Copying training dataset
2023-05-25 19:31:11,935:INFO:Defining folds
2023-05-25 19:31:11,935:INFO:Declaring metric variables
2023-05-25 19:31:11,938:INFO:Importing untrained model
2023-05-25 19:31:11,941:INFO:Dummy Classifier Imported successfully
2023-05-25 19:31:11,947:INFO:Starting cross validation
2023-05-25 19:31:11,949:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:31:12,124:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,125:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,126:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:31:12,127:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,132:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,133:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,134:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:31:12,134:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,140:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,141:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,142:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:31:12,142:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,143:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:31:12,145:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,145:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,146:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:31:12,146:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:31:12,846:INFO:Calculating mean and std
2023-05-25 19:31:12,847:INFO:Creating metrics dataframe
2023-05-25 19:31:13,099:INFO:Uploading results into container
2023-05-25 19:31:13,100:INFO:Uploading model into container now
2023-05-25 19:31:13,100:INFO:_master_model_container: 14
2023-05-25 19:31:13,100:INFO:_display_container: 2
2023-05-25 19:31:13,100:INFO:DummyClassifier(constant=None, random_state=7899, strategy='prior')
2023-05-25 19:31:13,100:INFO:create_model() successfully completed......................................
2023-05-25 19:31:13,259:INFO:SubProcess create_model() end ==================================
2023-05-25 19:31:13,259:INFO:Creating metrics dataframe
2023-05-25 19:31:13,280:INFO:Initializing create_model()
2023-05-25 19:31:13,280:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE728D37F0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7899, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:31:13,280:INFO:Checking exceptions
2023-05-25 19:31:13,282:INFO:Importing libraries
2023-05-25 19:31:13,282:INFO:Copying training dataset
2023-05-25 19:31:13,286:INFO:Defining folds
2023-05-25 19:31:13,286:INFO:Declaring metric variables
2023-05-25 19:31:13,286:INFO:Importing untrained model
2023-05-25 19:31:13,286:INFO:Declaring custom model
2023-05-25 19:31:13,287:INFO:Logistic Regression Imported successfully
2023-05-25 19:31:13,288:INFO:Cross validation set to False
2023-05-25 19:31:13,288:INFO:Fitting Model
2023-05-25 19:31:13,900:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:31:14,089:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7899, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:31:14,089:INFO:create_model() successfully completed......................................
2023-05-25 19:31:14,282:INFO:_master_model_container: 14
2023-05-25 19:31:14,282:INFO:_display_container: 2
2023-05-25 19:31:14,282:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7899, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:31:14,282:INFO:compare_models() successfully completed......................................
2023-05-25 19:32:14,627:INFO:PyCaret ClassificationExperiment
2023-05-25 19:32:14,627:INFO:Logging name: clf-default-name
2023-05-25 19:32:14,627:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 19:32:14,627:INFO:version 3.0.2
2023-05-25 19:32:14,627:INFO:Initializing setup()
2023-05-25 19:32:14,627:INFO:self.USI: 5d8d
2023-05-25 19:32:14,627:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 19:32:14,627:INFO:Checking environment
2023-05-25 19:32:14,627:INFO:python_version: 3.10.9
2023-05-25 19:32:14,627:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 19:32:14,627:INFO:machine: AMD64
2023-05-25 19:32:14,627:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 19:32:14,627:INFO:Memory: svmem(total=17112055808, available=5598388224, percent=67.3, used=11513667584, free=5598388224)
2023-05-25 19:32:14,627:INFO:Physical Core: 8
2023-05-25 19:32:14,627:INFO:Logical Core: 16
2023-05-25 19:32:14,627:INFO:Checking libraries
2023-05-25 19:32:14,627:INFO:System:
2023-05-25 19:32:14,627:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 19:32:14,627:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 19:32:14,627:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 19:32:14,627:INFO:PyCaret required dependencies:
2023-05-25 19:32:14,627:INFO:                 pip: 22.3.1
2023-05-25 19:32:14,629:INFO:          setuptools: 65.6.3
2023-05-25 19:32:14,629:INFO:             pycaret: 3.0.2
2023-05-25 19:32:14,629:INFO:             IPython: 8.10.0
2023-05-25 19:32:14,629:INFO:          ipywidgets: 7.6.5
2023-05-25 19:32:14,629:INFO:                tqdm: 4.64.1
2023-05-25 19:32:14,629:INFO:               numpy: 1.23.5
2023-05-25 19:32:14,629:INFO:              pandas: 1.5.3
2023-05-25 19:32:14,629:INFO:              jinja2: 3.1.2
2023-05-25 19:32:14,629:INFO:               scipy: 1.10.0
2023-05-25 19:32:14,629:INFO:              joblib: 1.1.1
2023-05-25 19:32:14,629:INFO:             sklearn: 1.2.1
2023-05-25 19:32:14,629:INFO:                pyod: 1.0.9
2023-05-25 19:32:14,629:INFO:            imblearn: 0.10.1
2023-05-25 19:32:14,629:INFO:   category_encoders: 2.6.1
2023-05-25 19:32:14,629:INFO:            lightgbm: 3.3.5
2023-05-25 19:32:14,629:INFO:               numba: 0.56.4
2023-05-25 19:32:14,629:INFO:            requests: 2.28.1
2023-05-25 19:32:14,629:INFO:          matplotlib: 3.7.0
2023-05-25 19:32:14,629:INFO:          scikitplot: 0.3.7
2023-05-25 19:32:14,629:INFO:         yellowbrick: 1.5
2023-05-25 19:32:14,629:INFO:              plotly: 5.9.0
2023-05-25 19:32:14,629:INFO:             kaleido: 0.2.1
2023-05-25 19:32:14,629:INFO:         statsmodels: 0.13.5
2023-05-25 19:32:14,630:INFO:              sktime: 0.17.0
2023-05-25 19:32:14,630:INFO:               tbats: 1.1.3
2023-05-25 19:32:14,630:INFO:            pmdarima: 2.0.3
2023-05-25 19:32:14,630:INFO:              psutil: 5.9.0
2023-05-25 19:32:14,630:INFO:PyCaret optional dependencies:
2023-05-25 19:32:14,630:INFO:                shap: Not installed
2023-05-25 19:32:14,630:INFO:           interpret: Not installed
2023-05-25 19:32:14,630:INFO:                umap: Not installed
2023-05-25 19:32:14,630:INFO:    pandas_profiling: Not installed
2023-05-25 19:32:14,630:INFO:  explainerdashboard: Not installed
2023-05-25 19:32:14,630:INFO:             autoviz: Not installed
2023-05-25 19:32:14,630:INFO:           fairlearn: Not installed
2023-05-25 19:32:14,630:INFO:             xgboost: Not installed
2023-05-25 19:32:14,630:INFO:            catboost: Not installed
2023-05-25 19:32:14,630:INFO:              kmodes: Not installed
2023-05-25 19:32:14,630:INFO:             mlxtend: Not installed
2023-05-25 19:32:14,630:INFO:       statsforecast: Not installed
2023-05-25 19:32:14,630:INFO:        tune_sklearn: Not installed
2023-05-25 19:32:14,630:INFO:                 ray: Not installed
2023-05-25 19:32:14,630:INFO:            hyperopt: Not installed
2023-05-25 19:32:14,630:INFO:              optuna: Not installed
2023-05-25 19:32:14,630:INFO:               skopt: Not installed
2023-05-25 19:32:14,631:INFO:              mlflow: Not installed
2023-05-25 19:32:14,631:INFO:              gradio: Not installed
2023-05-25 19:32:14,631:INFO:             fastapi: Not installed
2023-05-25 19:32:14,631:INFO:             uvicorn: Not installed
2023-05-25 19:32:14,631:INFO:              m2cgen: Not installed
2023-05-25 19:32:14,631:INFO:           evidently: Not installed
2023-05-25 19:32:14,631:INFO:               fugue: Not installed
2023-05-25 19:32:14,631:INFO:           streamlit: Not installed
2023-05-25 19:32:14,631:INFO:             prophet: Not installed
2023-05-25 19:32:14,631:INFO:None
2023-05-25 19:32:14,631:INFO:Set up data.
2023-05-25 19:32:14,640:INFO:Set up train/test split.
2023-05-25 19:32:14,647:INFO:Set up index.
2023-05-25 19:32:14,647:INFO:Set up folding strategy.
2023-05-25 19:32:14,647:INFO:Assigning column types.
2023-05-25 19:32:14,650:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 19:32:14,692:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:32:14,693:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:32:14,720:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:14,720:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:14,763:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:32:14,763:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:32:14,789:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:14,789:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:14,790:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 19:32:14,833:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:32:14,858:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:14,858:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:14,901:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:32:14,927:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:14,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:14,927:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 19:32:14,992:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:14,993:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:15,057:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:15,057:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:15,058:INFO:Preparing preprocessing pipeline...
2023-05-25 19:32:15,059:INFO:Set up label encoding.
2023-05-25 19:32:15,059:INFO:Set up simple imputation.
2023-05-25 19:32:15,062:INFO:Set up encoding of categorical features.
2023-05-25 19:32:15,139:INFO:Finished creating preprocessing pipeline.
2023-05-25 19:32:15,145:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['GameID', 'APM', 'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightCli...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours'],
                                    transformer=TargetEncoder(cols=['Age',
                                                                    'HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 19:32:15,145:INFO:Creating final display dataframe.
2023-05-25 19:32:15,383:INFO:Setup _display_container:                     Description                                           Value
0                    Session id                                            3880
1                        Target                                     LeagueIndex
2                   Target type                                      Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6, 8: 7
4           Original data shape                                      (3395, 20)
5        Transformed data shape                                      (3395, 20)
6   Transformed train set shape                                      (2716, 20)
7    Transformed test set shape                                       (679, 20)
8              Numeric features                                              16
9          Categorical features                                               3
10                   Preprocess                                            True
11              Imputation type                                          simple
12           Numeric imputation                                            mean
13       Categorical imputation                                            mode
14     Maximum one-hot encoding                                              25
15              Encoding method                                            None
16               Fold Generator                                 StratifiedKFold
17                  Fold Number                                               5
18                     CPU Jobs                                              -1
19                      Use GPU                                           False
20               Log Experiment                                           False
21              Experiment Name                                clf-default-name
22                          USI                                            5d8d
2023-05-25 19:32:15,453:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:15,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:15,519:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:15,519:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:15,520:INFO:setup() successfully completed in 1.08s...............
2023-05-25 19:32:17,881:INFO:Initializing compare_models()
2023-05-25 19:32:17,881:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 19:32:17,881:INFO:Checking exceptions
2023-05-25 19:32:17,886:INFO:Preparing display monitor
2023-05-25 19:32:17,910:INFO:Initializing Logistic Regression
2023-05-25 19:32:17,910:INFO:Total runtime is 0.0 minutes
2023-05-25 19:32:17,913:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:17,913:INFO:Initializing create_model()
2023-05-25 19:32:17,913:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:17,913:INFO:Checking exceptions
2023-05-25 19:32:17,913:INFO:Importing libraries
2023-05-25 19:32:17,914:INFO:Copying training dataset
2023-05-25 19:32:17,918:INFO:Defining folds
2023-05-25 19:32:17,918:INFO:Declaring metric variables
2023-05-25 19:32:17,920:INFO:Importing untrained model
2023-05-25 19:32:17,923:INFO:Logistic Regression Imported successfully
2023-05-25 19:32:17,929:INFO:Starting cross validation
2023-05-25 19:32:17,931:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:18,526:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:32:18,526:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:32:18,540:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:32:18,543:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:32:18,570:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:32:18,666:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,667:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,669:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:18,669:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,673:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,675:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,675:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:18,676:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,681:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,683:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:18,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,686:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,687:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:18,688:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,707:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,709:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:18,709:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:18,710:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:19,421:INFO:Calculating mean and std
2023-05-25 19:32:19,422:INFO:Creating metrics dataframe
2023-05-25 19:32:19,684:INFO:Uploading results into container
2023-05-25 19:32:19,685:INFO:Uploading model into container now
2023-05-25 19:32:19,685:INFO:_master_model_container: 1
2023-05-25 19:32:19,685:INFO:_display_container: 2
2023-05-25 19:32:19,686:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3880, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:32:19,686:INFO:create_model() successfully completed......................................
2023-05-25 19:32:19,857:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:19,857:INFO:Creating metrics dataframe
2023-05-25 19:32:19,866:INFO:Initializing K Neighbors Classifier
2023-05-25 19:32:19,866:INFO:Total runtime is 0.03260185321172079 minutes
2023-05-25 19:32:19,869:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:19,869:INFO:Initializing create_model()
2023-05-25 19:32:19,869:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:19,869:INFO:Checking exceptions
2023-05-25 19:32:19,869:INFO:Importing libraries
2023-05-25 19:32:19,869:INFO:Copying training dataset
2023-05-25 19:32:19,874:INFO:Defining folds
2023-05-25 19:32:19,874:INFO:Declaring metric variables
2023-05-25 19:32:19,877:INFO:Importing untrained model
2023-05-25 19:32:19,882:INFO:K Neighbors Classifier Imported successfully
2023-05-25 19:32:19,887:INFO:Starting cross validation
2023-05-25 19:32:19,888:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:20,213:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,214:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,215:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,219:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,219:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,220:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,220:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,221:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,221:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,221:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:20,221:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,222:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:20,222:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,222:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,222:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,223:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,224:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:20,948:INFO:Calculating mean and std
2023-05-25 19:32:20,948:INFO:Creating metrics dataframe
2023-05-25 19:32:21,206:INFO:Uploading results into container
2023-05-25 19:32:21,206:INFO:Uploading model into container now
2023-05-25 19:32:21,207:INFO:_master_model_container: 2
2023-05-25 19:32:21,207:INFO:_display_container: 2
2023-05-25 19:32:21,207:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 19:32:21,207:INFO:create_model() successfully completed......................................
2023-05-25 19:32:21,366:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:21,366:INFO:Creating metrics dataframe
2023-05-25 19:32:21,375:INFO:Initializing Naive Bayes
2023-05-25 19:32:21,375:INFO:Total runtime is 0.05775438944498698 minutes
2023-05-25 19:32:21,378:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:21,378:INFO:Initializing create_model()
2023-05-25 19:32:21,378:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:21,378:INFO:Checking exceptions
2023-05-25 19:32:21,378:INFO:Importing libraries
2023-05-25 19:32:21,378:INFO:Copying training dataset
2023-05-25 19:32:21,383:INFO:Defining folds
2023-05-25 19:32:21,383:INFO:Declaring metric variables
2023-05-25 19:32:21,386:INFO:Importing untrained model
2023-05-25 19:32:21,389:INFO:Naive Bayes Imported successfully
2023-05-25 19:32:21,394:INFO:Starting cross validation
2023-05-25 19:32:21,396:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:21,615:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,617:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,618:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,620:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,621:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,622:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,626:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,628:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,629:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,633:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,635:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,636:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,652:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,653:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:21,654:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:22,337:INFO:Calculating mean and std
2023-05-25 19:32:22,337:INFO:Creating metrics dataframe
2023-05-25 19:32:22,594:INFO:Uploading results into container
2023-05-25 19:32:22,595:INFO:Uploading model into container now
2023-05-25 19:32:22,595:INFO:_master_model_container: 3
2023-05-25 19:32:22,595:INFO:_display_container: 2
2023-05-25 19:32:22,595:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 19:32:22,595:INFO:create_model() successfully completed......................................
2023-05-25 19:32:22,753:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:22,753:INFO:Creating metrics dataframe
2023-05-25 19:32:22,763:INFO:Initializing Decision Tree Classifier
2023-05-25 19:32:22,763:INFO:Total runtime is 0.08088412284851074 minutes
2023-05-25 19:32:22,766:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:22,767:INFO:Initializing create_model()
2023-05-25 19:32:22,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:22,767:INFO:Checking exceptions
2023-05-25 19:32:22,767:INFO:Importing libraries
2023-05-25 19:32:22,767:INFO:Copying training dataset
2023-05-25 19:32:22,773:INFO:Defining folds
2023-05-25 19:32:22,773:INFO:Declaring metric variables
2023-05-25 19:32:22,776:INFO:Importing untrained model
2023-05-25 19:32:22,779:INFO:Decision Tree Classifier Imported successfully
2023-05-25 19:32:22,785:INFO:Starting cross validation
2023-05-25 19:32:22,786:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:23,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,042:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,063:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,065:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,066:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,068:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,069:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,070:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,070:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,071:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,072:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,075:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,076:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,077:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:23,774:INFO:Calculating mean and std
2023-05-25 19:32:23,775:INFO:Creating metrics dataframe
2023-05-25 19:32:24,040:INFO:Uploading results into container
2023-05-25 19:32:24,041:INFO:Uploading model into container now
2023-05-25 19:32:24,041:INFO:_master_model_container: 4
2023-05-25 19:32:24,041:INFO:_display_container: 2
2023-05-25 19:32:24,041:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3880, splitter='best')
2023-05-25 19:32:24,041:INFO:create_model() successfully completed......................................
2023-05-25 19:32:24,212:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:24,212:INFO:Creating metrics dataframe
2023-05-25 19:32:24,220:INFO:Initializing SVM - Linear Kernel
2023-05-25 19:32:24,220:INFO:Total runtime is 0.1051755666732788 minutes
2023-05-25 19:32:24,224:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:24,224:INFO:Initializing create_model()
2023-05-25 19:32:24,224:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:24,224:INFO:Checking exceptions
2023-05-25 19:32:24,224:INFO:Importing libraries
2023-05-25 19:32:24,224:INFO:Copying training dataset
2023-05-25 19:32:24,230:INFO:Defining folds
2023-05-25 19:32:24,230:INFO:Declaring metric variables
2023-05-25 19:32:24,233:INFO:Importing untrained model
2023-05-25 19:32:24,236:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 19:32:24,242:INFO:Starting cross validation
2023-05-25 19:32:24,243:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:24,464:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:32:24,465:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,465:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:32:24,465:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,466:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,467:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,467:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:24,467:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,467:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:24,467:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,470:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:32:24,471:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,472:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,473:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:24,474:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,476:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:32:24,477:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,478:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,478:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:24,479:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,494:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:32:24,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,497:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:24,499:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:24,500:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,210:INFO:Calculating mean and std
2023-05-25 19:32:25,211:INFO:Creating metrics dataframe
2023-05-25 19:32:25,467:INFO:Uploading results into container
2023-05-25 19:32:25,468:INFO:Uploading model into container now
2023-05-25 19:32:25,468:INFO:_master_model_container: 5
2023-05-25 19:32:25,468:INFO:_display_container: 2
2023-05-25 19:32:25,469:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3880, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 19:32:25,469:INFO:create_model() successfully completed......................................
2023-05-25 19:32:25,631:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:25,632:INFO:Creating metrics dataframe
2023-05-25 19:32:25,640:INFO:Initializing Ridge Classifier
2023-05-25 19:32:25,641:INFO:Total runtime is 0.12885692119598388 minutes
2023-05-25 19:32:25,644:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:25,644:INFO:Initializing create_model()
2023-05-25 19:32:25,644:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:25,644:INFO:Checking exceptions
2023-05-25 19:32:25,644:INFO:Importing libraries
2023-05-25 19:32:25,644:INFO:Copying training dataset
2023-05-25 19:32:25,649:INFO:Defining folds
2023-05-25 19:32:25,650:INFO:Declaring metric variables
2023-05-25 19:32:25,653:INFO:Importing untrained model
2023-05-25 19:32:25,656:INFO:Ridge Classifier Imported successfully
2023-05-25 19:32:25,661:INFO:Starting cross validation
2023-05-25 19:32:25,662:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:25,830:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:32:25,830:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:32:25,830:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,831:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,832:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,832:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:32:25,832:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,832:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,833:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:25,833:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:25,833:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,834:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,834:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,834:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:32:25,834:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:25,835:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,835:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,836:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:32:25,836:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,836:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:25,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:25,839:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:25,839:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:26,591:INFO:Calculating mean and std
2023-05-25 19:32:26,592:INFO:Creating metrics dataframe
2023-05-25 19:32:26,850:INFO:Uploading results into container
2023-05-25 19:32:26,850:INFO:Uploading model into container now
2023-05-25 19:32:26,850:INFO:_master_model_container: 6
2023-05-25 19:32:26,851:INFO:_display_container: 2
2023-05-25 19:32:26,851:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3880, solver='auto',
                tol=0.0001)
2023-05-25 19:32:26,851:INFO:create_model() successfully completed......................................
2023-05-25 19:32:27,008:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:27,010:INFO:Creating metrics dataframe
2023-05-25 19:32:27,019:INFO:Initializing Random Forest Classifier
2023-05-25 19:32:27,019:INFO:Total runtime is 0.15181583960851033 minutes
2023-05-25 19:32:27,022:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:27,022:INFO:Initializing create_model()
2023-05-25 19:32:27,022:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:27,022:INFO:Checking exceptions
2023-05-25 19:32:27,022:INFO:Importing libraries
2023-05-25 19:32:27,022:INFO:Copying training dataset
2023-05-25 19:32:27,027:INFO:Defining folds
2023-05-25 19:32:27,027:INFO:Declaring metric variables
2023-05-25 19:32:27,030:INFO:Importing untrained model
2023-05-25 19:32:27,033:INFO:Random Forest Classifier Imported successfully
2023-05-25 19:32:27,038:INFO:Starting cross validation
2023-05-25 19:32:27,039:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:27,920:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:27,922:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:27,923:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:27,924:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:27,927:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:27,928:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:27,929:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:27,930:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:27,930:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:27,931:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:27,932:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:27,933:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:27,933:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:27,934:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:27,935:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:27,936:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:28,046:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:28,047:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:28,049:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:28,049:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:28,686:INFO:Calculating mean and std
2023-05-25 19:32:28,687:INFO:Creating metrics dataframe
2023-05-25 19:32:28,954:INFO:Uploading results into container
2023-05-25 19:32:28,954:INFO:Uploading model into container now
2023-05-25 19:32:28,954:INFO:_master_model_container: 7
2023-05-25 19:32:28,954:INFO:_display_container: 2
2023-05-25 19:32:28,955:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3880, verbose=0, warm_start=False)
2023-05-25 19:32:28,955:INFO:create_model() successfully completed......................................
2023-05-25 19:32:29,122:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:29,122:INFO:Creating metrics dataframe
2023-05-25 19:32:29,133:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 19:32:29,133:INFO:Total runtime is 0.1870493173599243 minutes
2023-05-25 19:32:29,136:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:29,136:INFO:Initializing create_model()
2023-05-25 19:32:29,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:29,137:INFO:Checking exceptions
2023-05-25 19:32:29,137:INFO:Importing libraries
2023-05-25 19:32:29,137:INFO:Copying training dataset
2023-05-25 19:32:29,141:INFO:Defining folds
2023-05-25 19:32:29,141:INFO:Declaring metric variables
2023-05-25 19:32:29,145:INFO:Importing untrained model
2023-05-25 19:32:29,147:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 19:32:29,154:INFO:Starting cross validation
2023-05-25 19:32:29,155:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:29,264:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:32:29,272:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:32:29,277:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:32:29,281:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:32:29,282:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:32:29,377:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,378:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,379:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,387:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,389:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,390:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:29,391:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,395:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,396:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,397:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,397:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,398:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,398:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,399:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,400:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:29,400:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:29,401:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:30,259:INFO:Calculating mean and std
2023-05-25 19:32:30,260:INFO:Creating metrics dataframe
2023-05-25 19:32:30,531:INFO:Uploading results into container
2023-05-25 19:32:30,531:INFO:Uploading model into container now
2023-05-25 19:32:30,532:INFO:_master_model_container: 8
2023-05-25 19:32:30,532:INFO:_display_container: 2
2023-05-25 19:32:30,532:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 19:32:30,532:INFO:create_model() successfully completed......................................
2023-05-25 19:32:30,720:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:30,721:INFO:Creating metrics dataframe
2023-05-25 19:32:30,734:INFO:Initializing Ada Boost Classifier
2023-05-25 19:32:30,734:INFO:Total runtime is 0.21373836199442545 minutes
2023-05-25 19:32:30,737:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:30,737:INFO:Initializing create_model()
2023-05-25 19:32:30,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:30,737:INFO:Checking exceptions
2023-05-25 19:32:30,737:INFO:Importing libraries
2023-05-25 19:32:30,737:INFO:Copying training dataset
2023-05-25 19:32:30,743:INFO:Defining folds
2023-05-25 19:32:30,743:INFO:Declaring metric variables
2023-05-25 19:32:30,747:INFO:Importing untrained model
2023-05-25 19:32:30,752:INFO:Ada Boost Classifier Imported successfully
2023-05-25 19:32:30,757:INFO:Starting cross validation
2023-05-25 19:32:30,759:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:31,515:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,516:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,517:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:31,517:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,519:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,520:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,521:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:31,522:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,528:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,529:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,529:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,530:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:31,531:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,531:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,531:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:31,532:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,535:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,536:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:31,537:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:31,537:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:32,279:INFO:Calculating mean and std
2023-05-25 19:32:32,280:INFO:Creating metrics dataframe
2023-05-25 19:32:32,539:INFO:Uploading results into container
2023-05-25 19:32:32,540:INFO:Uploading model into container now
2023-05-25 19:32:32,540:INFO:_master_model_container: 9
2023-05-25 19:32:32,540:INFO:_display_container: 2
2023-05-25 19:32:32,541:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3880)
2023-05-25 19:32:32,541:INFO:create_model() successfully completed......................................
2023-05-25 19:32:32,698:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:32,698:INFO:Creating metrics dataframe
2023-05-25 19:32:32,707:INFO:Initializing Gradient Boosting Classifier
2023-05-25 19:32:32,709:INFO:Total runtime is 0.2466472268104553 minutes
2023-05-25 19:32:32,712:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:32,712:INFO:Initializing create_model()
2023-05-25 19:32:32,713:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:32,713:INFO:Checking exceptions
2023-05-25 19:32:32,713:INFO:Importing libraries
2023-05-25 19:32:32,713:INFO:Copying training dataset
2023-05-25 19:32:32,718:INFO:Defining folds
2023-05-25 19:32:32,718:INFO:Declaring metric variables
2023-05-25 19:32:32,721:INFO:Importing untrained model
2023-05-25 19:32:32,724:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 19:32:32,730:INFO:Starting cross validation
2023-05-25 19:32:32,731:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:42,879:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,880:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,881:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,892:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,894:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,896:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,918:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,919:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,920:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,935:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,936:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,937:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,962:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,964:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:42,965:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:43,660:INFO:Calculating mean and std
2023-05-25 19:32:43,661:INFO:Creating metrics dataframe
2023-05-25 19:32:43,935:INFO:Uploading results into container
2023-05-25 19:32:43,936:INFO:Uploading model into container now
2023-05-25 19:32:43,936:INFO:_master_model_container: 10
2023-05-25 19:32:43,936:INFO:_display_container: 2
2023-05-25 19:32:43,937:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3880, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 19:32:43,937:INFO:create_model() successfully completed......................................
2023-05-25 19:32:44,110:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:44,110:INFO:Creating metrics dataframe
2023-05-25 19:32:44,121:INFO:Initializing Linear Discriminant Analysis
2023-05-25 19:32:44,122:INFO:Total runtime is 0.4368726174036662 minutes
2023-05-25 19:32:44,125:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:44,125:INFO:Initializing create_model()
2023-05-25 19:32:44,125:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:44,125:INFO:Checking exceptions
2023-05-25 19:32:44,125:INFO:Importing libraries
2023-05-25 19:32:44,125:INFO:Copying training dataset
2023-05-25 19:32:44,131:INFO:Defining folds
2023-05-25 19:32:44,131:INFO:Declaring metric variables
2023-05-25 19:32:44,134:INFO:Importing untrained model
2023-05-25 19:32:44,137:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 19:32:44,142:INFO:Starting cross validation
2023-05-25 19:32:44,143:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:44,367:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:44,368:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:44,368:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:44,370:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:44,370:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:44,371:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:44,373:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:44,375:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:44,375:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:44,376:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:44,377:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:44,379:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:44,380:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:44,381:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:45,155:INFO:Calculating mean and std
2023-05-25 19:32:45,156:INFO:Creating metrics dataframe
2023-05-25 19:32:45,429:INFO:Uploading results into container
2023-05-25 19:32:45,430:INFO:Uploading model into container now
2023-05-25 19:32:45,430:INFO:_master_model_container: 11
2023-05-25 19:32:45,430:INFO:_display_container: 2
2023-05-25 19:32:45,431:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 19:32:45,431:INFO:create_model() successfully completed......................................
2023-05-25 19:32:45,601:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:45,601:INFO:Creating metrics dataframe
2023-05-25 19:32:45,612:INFO:Initializing Extra Trees Classifier
2023-05-25 19:32:45,612:INFO:Total runtime is 0.46170909802118937 minutes
2023-05-25 19:32:45,615:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:45,615:INFO:Initializing create_model()
2023-05-25 19:32:45,615:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:45,616:INFO:Checking exceptions
2023-05-25 19:32:45,616:INFO:Importing libraries
2023-05-25 19:32:45,616:INFO:Copying training dataset
2023-05-25 19:32:45,621:INFO:Defining folds
2023-05-25 19:32:45,621:INFO:Declaring metric variables
2023-05-25 19:32:45,624:INFO:Importing untrained model
2023-05-25 19:32:45,627:INFO:Extra Trees Classifier Imported successfully
2023-05-25 19:32:45,632:INFO:Starting cross validation
2023-05-25 19:32:45,633:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:46,368:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,369:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,370:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:46,371:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,386:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,388:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,388:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,389:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:46,389:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,389:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,390:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:46,391:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,396:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,397:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,399:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:46,400:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,412:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:46,413:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:46,414:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:47,142:INFO:Calculating mean and std
2023-05-25 19:32:47,143:INFO:Creating metrics dataframe
2023-05-25 19:32:47,411:INFO:Uploading results into container
2023-05-25 19:32:47,412:INFO:Uploading model into container now
2023-05-25 19:32:47,412:INFO:_master_model_container: 12
2023-05-25 19:32:47,412:INFO:_display_container: 2
2023-05-25 19:32:47,413:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3880, verbose=0, warm_start=False)
2023-05-25 19:32:47,413:INFO:create_model() successfully completed......................................
2023-05-25 19:32:47,571:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:47,571:INFO:Creating metrics dataframe
2023-05-25 19:32:47,583:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 19:32:47,583:INFO:Total runtime is 0.4945525288581848 minutes
2023-05-25 19:32:47,586:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:47,586:INFO:Initializing create_model()
2023-05-25 19:32:47,586:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:47,586:INFO:Checking exceptions
2023-05-25 19:32:47,586:INFO:Importing libraries
2023-05-25 19:32:47,586:INFO:Copying training dataset
2023-05-25 19:32:47,591:INFO:Defining folds
2023-05-25 19:32:47,591:INFO:Declaring metric variables
2023-05-25 19:32:47,595:INFO:Importing untrained model
2023-05-25 19:32:47,598:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 19:32:47,603:INFO:Starting cross validation
2023-05-25 19:32:47,604:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:49,886:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:49,887:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:49,888:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:49,888:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:49,963:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:49,964:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:49,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:49,969:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:49,971:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:49,972:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:49,972:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:49,997:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:49,999:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:50,000:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:50,009:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:50,010:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:50,011:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:50,011:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:50,677:INFO:Calculating mean and std
2023-05-25 19:32:50,679:INFO:Creating metrics dataframe
2023-05-25 19:32:50,945:INFO:Uploading results into container
2023-05-25 19:32:50,945:INFO:Uploading model into container now
2023-05-25 19:32:50,946:INFO:_master_model_container: 13
2023-05-25 19:32:50,946:INFO:_display_container: 2
2023-05-25 19:32:50,946:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3880, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 19:32:50,946:INFO:create_model() successfully completed......................................
2023-05-25 19:32:51,111:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:51,111:INFO:Creating metrics dataframe
2023-05-25 19:32:51,123:INFO:Initializing Dummy Classifier
2023-05-25 19:32:51,123:INFO:Total runtime is 0.5535621047019958 minutes
2023-05-25 19:32:51,126:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:51,127:INFO:Initializing create_model()
2023-05-25 19:32:51,127:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D31AB60>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:51,127:INFO:Checking exceptions
2023-05-25 19:32:51,127:INFO:Importing libraries
2023-05-25 19:32:51,127:INFO:Copying training dataset
2023-05-25 19:32:51,132:INFO:Defining folds
2023-05-25 19:32:51,132:INFO:Declaring metric variables
2023-05-25 19:32:51,136:INFO:Importing untrained model
2023-05-25 19:32:51,140:INFO:Dummy Classifier Imported successfully
2023-05-25 19:32:51,147:INFO:Starting cross validation
2023-05-25 19:32:51,147:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:51,381:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,382:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,383:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,383:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,383:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:51,383:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,383:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:51,385:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,385:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,385:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,386:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:51,386:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,386:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:51,387:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,407:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,408:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:51,408:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:51,410:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:52,157:INFO:Calculating mean and std
2023-05-25 19:32:52,158:INFO:Creating metrics dataframe
2023-05-25 19:32:52,432:INFO:Uploading results into container
2023-05-25 19:32:52,432:INFO:Uploading model into container now
2023-05-25 19:32:52,433:INFO:_master_model_container: 14
2023-05-25 19:32:52,433:INFO:_display_container: 2
2023-05-25 19:32:52,433:INFO:DummyClassifier(constant=None, random_state=3880, strategy='prior')
2023-05-25 19:32:52,433:INFO:create_model() successfully completed......................................
2023-05-25 19:32:52,591:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:52,591:INFO:Creating metrics dataframe
2023-05-25 19:32:52,610:INFO:Initializing create_model()
2023-05-25 19:32:52,610:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6DC26410>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3880, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:52,610:INFO:Checking exceptions
2023-05-25 19:32:52,611:INFO:Importing libraries
2023-05-25 19:32:52,611:INFO:Copying training dataset
2023-05-25 19:32:52,616:INFO:Defining folds
2023-05-25 19:32:52,616:INFO:Declaring metric variables
2023-05-25 19:32:52,616:INFO:Importing untrained model
2023-05-25 19:32:52,616:INFO:Declaring custom model
2023-05-25 19:32:52,617:INFO:Random Forest Classifier Imported successfully
2023-05-25 19:32:52,618:INFO:Cross validation set to False
2023-05-25 19:32:52,618:INFO:Fitting Model
2023-05-25 19:32:53,227:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3880, verbose=0, warm_start=False)
2023-05-25 19:32:53,227:INFO:create_model() successfully completed......................................
2023-05-25 19:32:53,409:INFO:_master_model_container: 14
2023-05-25 19:32:53,409:INFO:_display_container: 2
2023-05-25 19:32:53,410:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3880, verbose=0, warm_start=False)
2023-05-25 19:32:53,410:INFO:compare_models() successfully completed......................................
2023-05-25 19:32:53,625:INFO:PyCaret ClassificationExperiment
2023-05-25 19:32:53,626:INFO:Logging name: clf-default-name
2023-05-25 19:32:53,626:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 19:32:53,626:INFO:version 3.0.2
2023-05-25 19:32:53,626:INFO:Initializing setup()
2023-05-25 19:32:53,626:INFO:self.USI: c788
2023-05-25 19:32:53,626:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 19:32:53,626:INFO:Checking environment
2023-05-25 19:32:53,626:INFO:python_version: 3.10.9
2023-05-25 19:32:53,626:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 19:32:53,626:INFO:machine: AMD64
2023-05-25 19:32:53,626:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 19:32:53,626:INFO:Memory: svmem(total=17112055808, available=5050052608, percent=70.5, used=12062003200, free=5050052608)
2023-05-25 19:32:53,626:INFO:Physical Core: 8
2023-05-25 19:32:53,626:INFO:Logical Core: 16
2023-05-25 19:32:53,626:INFO:Checking libraries
2023-05-25 19:32:53,626:INFO:System:
2023-05-25 19:32:53,626:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 19:32:53,626:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 19:32:53,626:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 19:32:53,626:INFO:PyCaret required dependencies:
2023-05-25 19:32:53,627:INFO:                 pip: 22.3.1
2023-05-25 19:32:53,627:INFO:          setuptools: 65.6.3
2023-05-25 19:32:53,627:INFO:             pycaret: 3.0.2
2023-05-25 19:32:53,627:INFO:             IPython: 8.10.0
2023-05-25 19:32:53,627:INFO:          ipywidgets: 7.6.5
2023-05-25 19:32:53,627:INFO:                tqdm: 4.64.1
2023-05-25 19:32:53,627:INFO:               numpy: 1.23.5
2023-05-25 19:32:53,627:INFO:              pandas: 1.5.3
2023-05-25 19:32:53,627:INFO:              jinja2: 3.1.2
2023-05-25 19:32:53,627:INFO:               scipy: 1.10.0
2023-05-25 19:32:53,627:INFO:              joblib: 1.1.1
2023-05-25 19:32:53,627:INFO:             sklearn: 1.2.1
2023-05-25 19:32:53,627:INFO:                pyod: 1.0.9
2023-05-25 19:32:53,627:INFO:            imblearn: 0.10.1
2023-05-25 19:32:53,627:INFO:   category_encoders: 2.6.1
2023-05-25 19:32:53,627:INFO:            lightgbm: 3.3.5
2023-05-25 19:32:53,627:INFO:               numba: 0.56.4
2023-05-25 19:32:53,627:INFO:            requests: 2.28.1
2023-05-25 19:32:53,627:INFO:          matplotlib: 3.7.0
2023-05-25 19:32:53,627:INFO:          scikitplot: 0.3.7
2023-05-25 19:32:53,628:INFO:         yellowbrick: 1.5
2023-05-25 19:32:53,628:INFO:              plotly: 5.9.0
2023-05-25 19:32:53,628:INFO:             kaleido: 0.2.1
2023-05-25 19:32:53,628:INFO:         statsmodels: 0.13.5
2023-05-25 19:32:53,628:INFO:              sktime: 0.17.0
2023-05-25 19:32:53,628:INFO:               tbats: 1.1.3
2023-05-25 19:32:53,628:INFO:            pmdarima: 2.0.3
2023-05-25 19:32:53,628:INFO:              psutil: 5.9.0
2023-05-25 19:32:53,628:INFO:PyCaret optional dependencies:
2023-05-25 19:32:53,628:INFO:                shap: Not installed
2023-05-25 19:32:53,628:INFO:           interpret: Not installed
2023-05-25 19:32:53,628:INFO:                umap: Not installed
2023-05-25 19:32:53,628:INFO:    pandas_profiling: Not installed
2023-05-25 19:32:53,628:INFO:  explainerdashboard: Not installed
2023-05-25 19:32:53,628:INFO:             autoviz: Not installed
2023-05-25 19:32:53,628:INFO:           fairlearn: Not installed
2023-05-25 19:32:53,628:INFO:             xgboost: Not installed
2023-05-25 19:32:53,628:INFO:            catboost: Not installed
2023-05-25 19:32:53,628:INFO:              kmodes: Not installed
2023-05-25 19:32:53,628:INFO:             mlxtend: Not installed
2023-05-25 19:32:53,628:INFO:       statsforecast: Not installed
2023-05-25 19:32:53,628:INFO:        tune_sklearn: Not installed
2023-05-25 19:32:53,628:INFO:                 ray: Not installed
2023-05-25 19:32:53,628:INFO:            hyperopt: Not installed
2023-05-25 19:32:53,628:INFO:              optuna: Not installed
2023-05-25 19:32:53,628:INFO:               skopt: Not installed
2023-05-25 19:32:53,628:INFO:              mlflow: Not installed
2023-05-25 19:32:53,628:INFO:              gradio: Not installed
2023-05-25 19:32:53,628:INFO:             fastapi: Not installed
2023-05-25 19:32:53,628:INFO:             uvicorn: Not installed
2023-05-25 19:32:53,628:INFO:              m2cgen: Not installed
2023-05-25 19:32:53,628:INFO:           evidently: Not installed
2023-05-25 19:32:53,628:INFO:               fugue: Not installed
2023-05-25 19:32:53,628:INFO:           streamlit: Not installed
2023-05-25 19:32:53,628:INFO:             prophet: Not installed
2023-05-25 19:32:53,628:INFO:None
2023-05-25 19:32:53,630:INFO:Set up data.
2023-05-25 19:32:53,636:INFO:Set up train/test split.
2023-05-25 19:32:53,641:INFO:Set up index.
2023-05-25 19:32:53,641:INFO:Set up folding strategy.
2023-05-25 19:32:53,641:INFO:Assigning column types.
2023-05-25 19:32:53,644:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 19:32:53,685:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:32:53,685:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:32:53,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:53,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:53,755:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:32:53,756:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:32:53,781:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:53,781:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:53,782:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 19:32:53,824:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:32:53,849:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:53,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:53,891:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:32:53,916:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:53,916:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:53,916:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 19:32:53,983:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:53,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:54,049:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:54,049:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:54,051:INFO:Preparing preprocessing pipeline...
2023-05-25 19:32:54,051:INFO:Set up label encoding.
2023-05-25 19:32:54,052:INFO:Set up simple imputation.
2023-05-25 19:32:54,054:INFO:Set up encoding of categorical features.
2023-05-25 19:32:54,114:INFO:Finished creating preprocessing pipeline.
2023-05-25 19:32:54,121:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['APM', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'NumberOfPACs', 'GapBetweenPACs',
                                             'TotalMa...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['HoursPerWeek', 'TotalHours'],
                                    transformer=TargetEncoder(cols=['HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 19:32:54,121:INFO:Creating final display dataframe.
2023-05-25 19:32:54,318:INFO:Setup _display_container:                     Description                                           Value
0                    Session id                                            8587
1                        Target                                     LeagueIndex
2                   Target type                                      Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6, 8: 7
4           Original data shape                                      (3395, 11)
5        Transformed data shape                                      (3395, 11)
6   Transformed train set shape                                      (2716, 11)
7    Transformed test set shape                                       (679, 11)
8              Numeric features                                               8
9          Categorical features                                               2
10                   Preprocess                                            True
11              Imputation type                                          simple
12           Numeric imputation                                            mean
13       Categorical imputation                                            mode
14     Maximum one-hot encoding                                              25
15              Encoding method                                            None
16               Fold Generator                                 StratifiedKFold
17                  Fold Number                                               5
18                     CPU Jobs                                              -1
19                      Use GPU                                           False
20               Log Experiment                                           False
21              Experiment Name                                clf-default-name
22                          USI                                            c788
2023-05-25 19:32:54,389:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:54,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:54,453:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:54,454:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:32:54,454:INFO:setup() successfully completed in 1.02s...............
2023-05-25 19:32:57,345:INFO:Initializing compare_models()
2023-05-25 19:32:57,345:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 19:32:57,345:INFO:Checking exceptions
2023-05-25 19:32:57,348:INFO:Preparing display monitor
2023-05-25 19:32:57,370:INFO:Initializing Logistic Regression
2023-05-25 19:32:57,371:INFO:Total runtime is 1.6733010609944662e-05 minutes
2023-05-25 19:32:57,373:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:57,374:INFO:Initializing create_model()
2023-05-25 19:32:57,374:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:57,374:INFO:Checking exceptions
2023-05-25 19:32:57,374:INFO:Importing libraries
2023-05-25 19:32:57,374:INFO:Copying training dataset
2023-05-25 19:32:57,377:INFO:Defining folds
2023-05-25 19:32:57,377:INFO:Declaring metric variables
2023-05-25 19:32:57,380:INFO:Importing untrained model
2023-05-25 19:32:57,383:INFO:Logistic Regression Imported successfully
2023-05-25 19:32:57,389:INFO:Starting cross validation
2023-05-25 19:32:57,391:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:57,924:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:32:57,947:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:32:57,953:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:32:57,969:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:32:57,970:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:32:58,036:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,038:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,038:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:58,039:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,073:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,074:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,075:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,076:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,077:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,077:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:58,078:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,084:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,085:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,086:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,087:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,087:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,088:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:58,829:INFO:Calculating mean and std
2023-05-25 19:32:58,830:INFO:Creating metrics dataframe
2023-05-25 19:32:59,103:INFO:Uploading results into container
2023-05-25 19:32:59,103:INFO:Uploading model into container now
2023-05-25 19:32:59,104:INFO:_master_model_container: 1
2023-05-25 19:32:59,104:INFO:_display_container: 2
2023-05-25 19:32:59,104:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8587, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:32:59,104:INFO:create_model() successfully completed......................................
2023-05-25 19:32:59,276:INFO:SubProcess create_model() end ==================================
2023-05-25 19:32:59,276:INFO:Creating metrics dataframe
2023-05-25 19:32:59,284:INFO:Initializing K Neighbors Classifier
2023-05-25 19:32:59,285:INFO:Total runtime is 0.031921593348185215 minutes
2023-05-25 19:32:59,288:INFO:SubProcess create_model() called ==================================
2023-05-25 19:32:59,288:INFO:Initializing create_model()
2023-05-25 19:32:59,288:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:32:59,288:INFO:Checking exceptions
2023-05-25 19:32:59,288:INFO:Importing libraries
2023-05-25 19:32:59,288:INFO:Copying training dataset
2023-05-25 19:32:59,292:INFO:Defining folds
2023-05-25 19:32:59,292:INFO:Declaring metric variables
2023-05-25 19:32:59,295:INFO:Importing untrained model
2023-05-25 19:32:59,299:INFO:K Neighbors Classifier Imported successfully
2023-05-25 19:32:59,304:INFO:Starting cross validation
2023-05-25 19:32:59,305:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:32:59,523:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,524:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:59,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,526:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,527:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,528:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:59,528:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,529:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,529:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,531:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,533:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,535:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,537:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:32:59,538:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,539:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,540:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:32:59,542:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:00,324:INFO:Calculating mean and std
2023-05-25 19:33:00,325:INFO:Creating metrics dataframe
2023-05-25 19:33:00,609:INFO:Uploading results into container
2023-05-25 19:33:00,609:INFO:Uploading model into container now
2023-05-25 19:33:00,610:INFO:_master_model_container: 2
2023-05-25 19:33:00,610:INFO:_display_container: 2
2023-05-25 19:33:00,610:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 19:33:00,610:INFO:create_model() successfully completed......................................
2023-05-25 19:33:00,777:INFO:SubProcess create_model() end ==================================
2023-05-25 19:33:00,777:INFO:Creating metrics dataframe
2023-05-25 19:33:00,786:INFO:Initializing Naive Bayes
2023-05-25 19:33:00,786:INFO:Total runtime is 0.05693870782852172 minutes
2023-05-25 19:33:00,789:INFO:SubProcess create_model() called ==================================
2023-05-25 19:33:00,789:INFO:Initializing create_model()
2023-05-25 19:33:00,789:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:33:00,789:INFO:Checking exceptions
2023-05-25 19:33:00,789:INFO:Importing libraries
2023-05-25 19:33:00,789:INFO:Copying training dataset
2023-05-25 19:33:00,794:INFO:Defining folds
2023-05-25 19:33:00,794:INFO:Declaring metric variables
2023-05-25 19:33:00,797:INFO:Importing untrained model
2023-05-25 19:33:00,800:INFO:Naive Bayes Imported successfully
2023-05-25 19:33:00,805:INFO:Starting cross validation
2023-05-25 19:33:00,806:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:33:00,989:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:00,990:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:00,991:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:00,991:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:00,992:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:00,993:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:00,996:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:00,997:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:00,998:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:00,999:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:00,999:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:01,000:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:01,000:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:01,001:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:01,002:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:01,768:INFO:Calculating mean and std
2023-05-25 19:33:01,769:INFO:Creating metrics dataframe
2023-05-25 19:33:02,045:INFO:Uploading results into container
2023-05-25 19:33:02,046:INFO:Uploading model into container now
2023-05-25 19:33:02,046:INFO:_master_model_container: 3
2023-05-25 19:33:02,046:INFO:_display_container: 2
2023-05-25 19:33:02,046:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 19:33:02,047:INFO:create_model() successfully completed......................................
2023-05-25 19:33:02,202:INFO:SubProcess create_model() end ==================================
2023-05-25 19:33:02,202:INFO:Creating metrics dataframe
2023-05-25 19:33:02,211:INFO:Initializing Decision Tree Classifier
2023-05-25 19:33:02,211:INFO:Total runtime is 0.080692986647288 minutes
2023-05-25 19:33:02,214:INFO:SubProcess create_model() called ==================================
2023-05-25 19:33:02,214:INFO:Initializing create_model()
2023-05-25 19:33:02,214:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:33:02,214:INFO:Checking exceptions
2023-05-25 19:33:02,214:INFO:Importing libraries
2023-05-25 19:33:02,214:INFO:Copying training dataset
2023-05-25 19:33:02,219:INFO:Defining folds
2023-05-25 19:33:02,219:INFO:Declaring metric variables
2023-05-25 19:33:02,222:INFO:Importing untrained model
2023-05-25 19:33:02,225:INFO:Decision Tree Classifier Imported successfully
2023-05-25 19:33:02,231:INFO:Starting cross validation
2023-05-25 19:33:02,232:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:33:02,421:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,422:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,423:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,439:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,440:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,445:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,446:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,448:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,454:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,457:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,458:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,464:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,465:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:02,467:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,186:INFO:Calculating mean and std
2023-05-25 19:33:03,188:INFO:Creating metrics dataframe
2023-05-25 19:33:03,461:INFO:Uploading results into container
2023-05-25 19:33:03,462:INFO:Uploading model into container now
2023-05-25 19:33:03,462:INFO:_master_model_container: 4
2023-05-25 19:33:03,462:INFO:_display_container: 2
2023-05-25 19:33:03,463:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8587, splitter='best')
2023-05-25 19:33:03,463:INFO:create_model() successfully completed......................................
2023-05-25 19:33:03,634:INFO:SubProcess create_model() end ==================================
2023-05-25 19:33:03,634:INFO:Creating metrics dataframe
2023-05-25 19:33:03,643:INFO:Initializing SVM - Linear Kernel
2023-05-25 19:33:03,643:INFO:Total runtime is 0.10455455382664998 minutes
2023-05-25 19:33:03,646:INFO:SubProcess create_model() called ==================================
2023-05-25 19:33:03,647:INFO:Initializing create_model()
2023-05-25 19:33:03,647:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:33:03,647:INFO:Checking exceptions
2023-05-25 19:33:03,647:INFO:Importing libraries
2023-05-25 19:33:03,647:INFO:Copying training dataset
2023-05-25 19:33:03,652:INFO:Defining folds
2023-05-25 19:33:03,652:INFO:Declaring metric variables
2023-05-25 19:33:03,655:INFO:Importing untrained model
2023-05-25 19:33:03,658:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 19:33:03,665:INFO:Starting cross validation
2023-05-25 19:33:03,666:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:33:03,843:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:33:03,843:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,844:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:33:03,844:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,845:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,845:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:03,845:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,846:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,846:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:03,847:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,848:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:33:03,849:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,850:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,851:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:03,851:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:33:03,852:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,852:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,853:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,854:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:03,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,863:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:33:03,863:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,864:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:03,865:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:03,866:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:04,637:INFO:Calculating mean and std
2023-05-25 19:33:04,637:INFO:Creating metrics dataframe
2023-05-25 19:33:04,914:INFO:Uploading results into container
2023-05-25 19:33:04,914:INFO:Uploading model into container now
2023-05-25 19:33:04,915:INFO:_master_model_container: 5
2023-05-25 19:33:04,915:INFO:_display_container: 2
2023-05-25 19:33:04,915:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8587, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 19:33:04,915:INFO:create_model() successfully completed......................................
2023-05-25 19:33:05,080:INFO:SubProcess create_model() end ==================================
2023-05-25 19:33:05,080:INFO:Creating metrics dataframe
2023-05-25 19:33:05,090:INFO:Initializing Ridge Classifier
2023-05-25 19:33:05,090:INFO:Total runtime is 0.12866703271865845 minutes
2023-05-25 19:33:05,093:INFO:SubProcess create_model() called ==================================
2023-05-25 19:33:05,093:INFO:Initializing create_model()
2023-05-25 19:33:05,093:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:33:05,094:INFO:Checking exceptions
2023-05-25 19:33:05,094:INFO:Importing libraries
2023-05-25 19:33:05,094:INFO:Copying training dataset
2023-05-25 19:33:05,098:INFO:Defining folds
2023-05-25 19:33:05,098:INFO:Declaring metric variables
2023-05-25 19:33:05,101:INFO:Importing untrained model
2023-05-25 19:33:05,104:INFO:Ridge Classifier Imported successfully
2023-05-25 19:33:05,110:INFO:Starting cross validation
2023-05-25 19:33:05,111:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:33:05,244:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:33:05,245:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,246:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,247:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:05,247:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,247:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:33:05,248:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,249:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,250:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:05,250:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,251:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:33:05,252:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,253:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,254:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:05,255:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,261:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:33:05,261:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:05,264:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,265:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:33:05,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:05,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:05,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:06,017:INFO:Calculating mean and std
2023-05-25 19:33:06,019:INFO:Creating metrics dataframe
2023-05-25 19:33:06,291:INFO:Uploading results into container
2023-05-25 19:33:06,291:INFO:Uploading model into container now
2023-05-25 19:33:06,292:INFO:_master_model_container: 6
2023-05-25 19:33:06,292:INFO:_display_container: 2
2023-05-25 19:33:06,292:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8587, solver='auto',
                tol=0.0001)
2023-05-25 19:33:06,292:INFO:create_model() successfully completed......................................
2023-05-25 19:33:06,448:INFO:SubProcess create_model() end ==================================
2023-05-25 19:33:06,448:INFO:Creating metrics dataframe
2023-05-25 19:33:06,458:INFO:Initializing Random Forest Classifier
2023-05-25 19:33:06,459:INFO:Total runtime is 0.1514917294184367 minutes
2023-05-25 19:33:06,462:INFO:SubProcess create_model() called ==================================
2023-05-25 19:33:06,462:INFO:Initializing create_model()
2023-05-25 19:33:06,462:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:33:06,462:INFO:Checking exceptions
2023-05-25 19:33:06,462:INFO:Importing libraries
2023-05-25 19:33:06,462:INFO:Copying training dataset
2023-05-25 19:33:06,467:INFO:Defining folds
2023-05-25 19:33:06,467:INFO:Declaring metric variables
2023-05-25 19:33:06,471:INFO:Importing untrained model
2023-05-25 19:33:06,475:INFO:Random Forest Classifier Imported successfully
2023-05-25 19:33:06,481:INFO:Starting cross validation
2023-05-25 19:33:06,482:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:33:07,269:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,270:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,271:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,304:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,306:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,307:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:07,307:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,308:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,309:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,310:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:07,310:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,311:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,313:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:07,315:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,324:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,325:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:07,326:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:07,326:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,056:INFO:Calculating mean and std
2023-05-25 19:33:08,057:INFO:Creating metrics dataframe
2023-05-25 19:33:08,345:INFO:Uploading results into container
2023-05-25 19:33:08,345:INFO:Uploading model into container now
2023-05-25 19:33:08,346:INFO:_master_model_container: 7
2023-05-25 19:33:08,346:INFO:_display_container: 2
2023-05-25 19:33:08,346:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8587, verbose=0, warm_start=False)
2023-05-25 19:33:08,346:INFO:create_model() successfully completed......................................
2023-05-25 19:33:08,503:INFO:SubProcess create_model() end ==================================
2023-05-25 19:33:08,503:INFO:Creating metrics dataframe
2023-05-25 19:33:08,512:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 19:33:08,512:INFO:Total runtime is 0.18570844729741415 minutes
2023-05-25 19:33:08,515:INFO:SubProcess create_model() called ==================================
2023-05-25 19:33:08,516:INFO:Initializing create_model()
2023-05-25 19:33:08,516:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:33:08,516:INFO:Checking exceptions
2023-05-25 19:33:08,516:INFO:Importing libraries
2023-05-25 19:33:08,516:INFO:Copying training dataset
2023-05-25 19:33:08,521:INFO:Defining folds
2023-05-25 19:33:08,521:INFO:Declaring metric variables
2023-05-25 19:33:08,524:INFO:Importing untrained model
2023-05-25 19:33:08,527:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 19:33:08,533:INFO:Starting cross validation
2023-05-25 19:33:08,534:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:33:08,629:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:33:08,633:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:33:08,636:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:33:08,637:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:33:08,649:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:33:08,676:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-25 19:33:08,676:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-25 19:33:08,676:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-25 19:33:08,696:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-25 19:33:08,696:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-25 19:33:08,696:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-25 19:33:08,722:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,724:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,725:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,727:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-25 19:33:08,727:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-25 19:33:08,728:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-25 19:33:08,728:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,730:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,730:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,731:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,732:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,732:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-05-25 19:33:08,733:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,733:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,734:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,735:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:08,735:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,742:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-25 19:33:08,742:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-05-25 19:33:08,742:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-05-25 19:33:08,744:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-05-25 19:33:08,745:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,746:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:08,747:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:08,747:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:09,516:INFO:Calculating mean and std
2023-05-25 19:33:09,517:INFO:Creating metrics dataframe
2023-05-25 19:33:09,790:INFO:Uploading results into container
2023-05-25 19:33:09,790:INFO:Uploading model into container now
2023-05-25 19:33:09,791:INFO:_master_model_container: 8
2023-05-25 19:33:09,791:INFO:_display_container: 2
2023-05-25 19:33:09,791:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 19:33:09,791:INFO:create_model() successfully completed......................................
2023-05-25 19:33:09,962:INFO:SubProcess create_model() end ==================================
2023-05-25 19:33:09,962:INFO:Creating metrics dataframe
2023-05-25 19:33:09,972:INFO:Initializing Ada Boost Classifier
2023-05-25 19:33:09,972:INFO:Total runtime is 0.21003862619400024 minutes
2023-05-25 19:33:09,975:INFO:SubProcess create_model() called ==================================
2023-05-25 19:33:09,976:INFO:Initializing create_model()
2023-05-25 19:33:09,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:33:09,976:INFO:Checking exceptions
2023-05-25 19:33:09,976:INFO:Importing libraries
2023-05-25 19:33:09,976:INFO:Copying training dataset
2023-05-25 19:33:09,981:INFO:Defining folds
2023-05-25 19:33:09,981:INFO:Declaring metric variables
2023-05-25 19:33:09,984:INFO:Importing untrained model
2023-05-25 19:33:09,987:INFO:Ada Boost Classifier Imported successfully
2023-05-25 19:33:09,992:INFO:Starting cross validation
2023-05-25 19:33:09,994:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:33:10,466:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,467:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,468:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,474:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,475:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,476:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,477:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,477:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,478:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,481:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,482:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,483:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:10,483:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,485:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,486:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:10,487:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:10,487:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:11,240:INFO:Calculating mean and std
2023-05-25 19:33:11,241:INFO:Creating metrics dataframe
2023-05-25 19:33:11,518:INFO:Uploading results into container
2023-05-25 19:33:11,519:INFO:Uploading model into container now
2023-05-25 19:33:11,519:INFO:_master_model_container: 9
2023-05-25 19:33:11,519:INFO:_display_container: 2
2023-05-25 19:33:11,520:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8587)
2023-05-25 19:33:11,520:INFO:create_model() successfully completed......................................
2023-05-25 19:33:11,678:INFO:SubProcess create_model() end ==================================
2023-05-25 19:33:11,678:INFO:Creating metrics dataframe
2023-05-25 19:33:11,689:INFO:Initializing Gradient Boosting Classifier
2023-05-25 19:33:11,689:INFO:Total runtime is 0.2386568744977315 minutes
2023-05-25 19:33:11,692:INFO:SubProcess create_model() called ==================================
2023-05-25 19:33:11,692:INFO:Initializing create_model()
2023-05-25 19:33:11,692:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:33:11,692:INFO:Checking exceptions
2023-05-25 19:33:11,692:INFO:Importing libraries
2023-05-25 19:33:11,692:INFO:Copying training dataset
2023-05-25 19:33:11,697:INFO:Defining folds
2023-05-25 19:33:11,697:INFO:Declaring metric variables
2023-05-25 19:33:11,700:INFO:Importing untrained model
2023-05-25 19:33:11,703:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 19:33:11,710:INFO:Starting cross validation
2023-05-25 19:33:11,711:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:33:17,446:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,447:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,449:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,456:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,457:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,458:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,505:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,506:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,507:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,509:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,510:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,511:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,553:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,554:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:17,555:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,248:INFO:Calculating mean and std
2023-05-25 19:33:18,249:INFO:Creating metrics dataframe
2023-05-25 19:33:18,525:INFO:Uploading results into container
2023-05-25 19:33:18,526:INFO:Uploading model into container now
2023-05-25 19:33:18,526:INFO:_master_model_container: 10
2023-05-25 19:33:18,526:INFO:_display_container: 2
2023-05-25 19:33:18,526:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8587, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 19:33:18,527:INFO:create_model() successfully completed......................................
2023-05-25 19:33:18,692:INFO:SubProcess create_model() end ==================================
2023-05-25 19:33:18,692:INFO:Creating metrics dataframe
2023-05-25 19:33:18,704:INFO:Initializing Linear Discriminant Analysis
2023-05-25 19:33:18,704:INFO:Total runtime is 0.3555776238441467 minutes
2023-05-25 19:33:18,708:INFO:SubProcess create_model() called ==================================
2023-05-25 19:33:18,708:INFO:Initializing create_model()
2023-05-25 19:33:18,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:33:18,708:INFO:Checking exceptions
2023-05-25 19:33:18,708:INFO:Importing libraries
2023-05-25 19:33:18,708:INFO:Copying training dataset
2023-05-25 19:33:18,714:INFO:Defining folds
2023-05-25 19:33:18,714:INFO:Declaring metric variables
2023-05-25 19:33:18,717:INFO:Importing untrained model
2023-05-25 19:33:18,721:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 19:33:18,727:INFO:Starting cross validation
2023-05-25 19:33:18,727:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:33:18,919:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,921:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,923:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,923:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,924:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,924:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,925:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,926:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,926:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,927:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,929:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,932:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,933:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:18,934:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:19,729:INFO:Calculating mean and std
2023-05-25 19:33:19,729:INFO:Creating metrics dataframe
2023-05-25 19:33:20,011:INFO:Uploading results into container
2023-05-25 19:33:20,012:INFO:Uploading model into container now
2023-05-25 19:33:20,012:INFO:_master_model_container: 11
2023-05-25 19:33:20,012:INFO:_display_container: 2
2023-05-25 19:33:20,012:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 19:33:20,013:INFO:create_model() successfully completed......................................
2023-05-25 19:33:20,180:INFO:SubProcess create_model() end ==================================
2023-05-25 19:33:20,180:INFO:Creating metrics dataframe
2023-05-25 19:33:20,191:INFO:Initializing Extra Trees Classifier
2023-05-25 19:33:20,191:INFO:Total runtime is 0.38035956223805745 minutes
2023-05-25 19:33:20,194:INFO:SubProcess create_model() called ==================================
2023-05-25 19:33:20,194:INFO:Initializing create_model()
2023-05-25 19:33:20,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:33:20,195:INFO:Checking exceptions
2023-05-25 19:33:20,195:INFO:Importing libraries
2023-05-25 19:33:20,195:INFO:Copying training dataset
2023-05-25 19:33:20,199:INFO:Defining folds
2023-05-25 19:33:20,199:INFO:Declaring metric variables
2023-05-25 19:33:20,203:INFO:Importing untrained model
2023-05-25 19:33:20,206:INFO:Extra Trees Classifier Imported successfully
2023-05-25 19:33:20,212:INFO:Starting cross validation
2023-05-25 19:33:20,213:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:33:20,888:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,889:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,891:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,896:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,897:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,898:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:20,899:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,909:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,911:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,912:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:20,913:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,914:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,915:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,916:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,916:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:20,917:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,919:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:20,919:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:20,920:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:21,728:INFO:Calculating mean and std
2023-05-25 19:33:21,729:INFO:Creating metrics dataframe
2023-05-25 19:33:22,019:INFO:Uploading results into container
2023-05-25 19:33:22,020:INFO:Uploading model into container now
2023-05-25 19:33:22,020:INFO:_master_model_container: 12
2023-05-25 19:33:22,020:INFO:_display_container: 2
2023-05-25 19:33:22,020:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8587, verbose=0, warm_start=False)
2023-05-25 19:33:22,021:INFO:create_model() successfully completed......................................
2023-05-25 19:33:22,180:INFO:SubProcess create_model() end ==================================
2023-05-25 19:33:22,180:INFO:Creating metrics dataframe
2023-05-25 19:33:22,191:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 19:33:22,191:INFO:Total runtime is 0.41369085709253944 minutes
2023-05-25 19:33:22,194:INFO:SubProcess create_model() called ==================================
2023-05-25 19:33:22,194:INFO:Initializing create_model()
2023-05-25 19:33:22,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:33:22,194:INFO:Checking exceptions
2023-05-25 19:33:22,194:INFO:Importing libraries
2023-05-25 19:33:22,194:INFO:Copying training dataset
2023-05-25 19:33:22,199:INFO:Defining folds
2023-05-25 19:33:22,199:INFO:Declaring metric variables
2023-05-25 19:33:22,202:INFO:Importing untrained model
2023-05-25 19:33:22,205:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 19:33:22,211:INFO:Starting cross validation
2023-05-25 19:33:22,213:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:33:23,506:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:23,508:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:23,509:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:23,532:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:23,533:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:23,535:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:23,556:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:23,558:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:23,559:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:24,287:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:24,288:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:24,289:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:24,289:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:24,290:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:24,290:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:24,291:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:24,506:INFO:Calculating mean and std
2023-05-25 19:33:24,507:INFO:Creating metrics dataframe
2023-05-25 19:33:24,799:INFO:Uploading results into container
2023-05-25 19:33:24,800:INFO:Uploading model into container now
2023-05-25 19:33:24,800:INFO:_master_model_container: 13
2023-05-25 19:33:24,800:INFO:_display_container: 2
2023-05-25 19:33:24,800:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8587, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 19:33:24,801:INFO:create_model() successfully completed......................................
2023-05-25 19:33:24,968:INFO:SubProcess create_model() end ==================================
2023-05-25 19:33:24,968:INFO:Creating metrics dataframe
2023-05-25 19:33:24,981:INFO:Initializing Dummy Classifier
2023-05-25 19:33:24,981:INFO:Total runtime is 0.4601915637652079 minutes
2023-05-25 19:33:24,984:INFO:SubProcess create_model() called ==================================
2023-05-25 19:33:24,984:INFO:Initializing create_model()
2023-05-25 19:33:24,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE68EBBCD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:33:24,985:INFO:Checking exceptions
2023-05-25 19:33:24,985:INFO:Importing libraries
2023-05-25 19:33:24,985:INFO:Copying training dataset
2023-05-25 19:33:24,990:INFO:Defining folds
2023-05-25 19:33:24,990:INFO:Declaring metric variables
2023-05-25 19:33:24,993:INFO:Importing untrained model
2023-05-25 19:33:24,996:INFO:Dummy Classifier Imported successfully
2023-05-25 19:33:25,003:INFO:Starting cross validation
2023-05-25 19:33:25,004:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:33:25,183:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,185:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,185:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,185:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:25,186:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,186:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,187:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:25,187:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,191:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,192:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,193:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:25,193:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,194:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,194:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,195:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,195:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,196:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:25,196:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:33:25,197:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:25,197:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:33:26,000:INFO:Calculating mean and std
2023-05-25 19:33:26,001:INFO:Creating metrics dataframe
2023-05-25 19:33:26,287:INFO:Uploading results into container
2023-05-25 19:33:26,288:INFO:Uploading model into container now
2023-05-25 19:33:26,288:INFO:_master_model_container: 14
2023-05-25 19:33:26,288:INFO:_display_container: 2
2023-05-25 19:33:26,288:INFO:DummyClassifier(constant=None, random_state=8587, strategy='prior')
2023-05-25 19:33:26,288:INFO:create_model() successfully completed......................................
2023-05-25 19:33:26,451:INFO:SubProcess create_model() end ==================================
2023-05-25 19:33:26,451:INFO:Creating metrics dataframe
2023-05-25 19:33:26,472:INFO:Initializing create_model()
2023-05-25 19:33:26,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7252AF80>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8587, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:33:26,472:INFO:Checking exceptions
2023-05-25 19:33:26,473:INFO:Importing libraries
2023-05-25 19:33:26,474:INFO:Copying training dataset
2023-05-25 19:33:26,477:INFO:Defining folds
2023-05-25 19:33:26,477:INFO:Declaring metric variables
2023-05-25 19:33:26,477:INFO:Importing untrained model
2023-05-25 19:33:26,477:INFO:Declaring custom model
2023-05-25 19:33:26,478:INFO:Random Forest Classifier Imported successfully
2023-05-25 19:33:26,479:INFO:Cross validation set to False
2023-05-25 19:33:26,479:INFO:Fitting Model
2023-05-25 19:33:27,060:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8587, verbose=0, warm_start=False)
2023-05-25 19:33:27,060:INFO:create_model() successfully completed......................................
2023-05-25 19:33:27,243:INFO:_master_model_container: 14
2023-05-25 19:33:27,243:INFO:_display_container: 2
2023-05-25 19:33:27,243:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8587, verbose=0, warm_start=False)
2023-05-25 19:33:27,243:INFO:compare_models() successfully completed......................................
2023-05-25 19:34:04,578:INFO:PyCaret ClassificationExperiment
2023-05-25 19:34:04,578:INFO:Logging name: clf-default-name
2023-05-25 19:34:04,578:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 19:34:04,578:INFO:version 3.0.2
2023-05-25 19:34:04,578:INFO:Initializing setup()
2023-05-25 19:34:04,578:INFO:self.USI: 0047
2023-05-25 19:34:04,578:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 19:34:04,578:INFO:Checking environment
2023-05-25 19:34:04,578:INFO:python_version: 3.10.9
2023-05-25 19:34:04,578:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 19:34:04,578:INFO:machine: AMD64
2023-05-25 19:34:04,578:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 19:34:04,578:INFO:Memory: svmem(total=17112055808, available=5293125632, percent=69.1, used=11818930176, free=5293125632)
2023-05-25 19:34:04,578:INFO:Physical Core: 8
2023-05-25 19:34:04,578:INFO:Logical Core: 16
2023-05-25 19:34:04,578:INFO:Checking libraries
2023-05-25 19:34:04,578:INFO:System:
2023-05-25 19:34:04,578:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 19:34:04,579:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 19:34:04,579:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 19:34:04,579:INFO:PyCaret required dependencies:
2023-05-25 19:34:04,579:INFO:                 pip: 22.3.1
2023-05-25 19:34:04,579:INFO:          setuptools: 65.6.3
2023-05-25 19:34:04,579:INFO:             pycaret: 3.0.2
2023-05-25 19:34:04,579:INFO:             IPython: 8.10.0
2023-05-25 19:34:04,579:INFO:          ipywidgets: 7.6.5
2023-05-25 19:34:04,579:INFO:                tqdm: 4.64.1
2023-05-25 19:34:04,579:INFO:               numpy: 1.23.5
2023-05-25 19:34:04,579:INFO:              pandas: 1.5.3
2023-05-25 19:34:04,579:INFO:              jinja2: 3.1.2
2023-05-25 19:34:04,579:INFO:               scipy: 1.10.0
2023-05-25 19:34:04,579:INFO:              joblib: 1.1.1
2023-05-25 19:34:04,579:INFO:             sklearn: 1.2.1
2023-05-25 19:34:04,579:INFO:                pyod: 1.0.9
2023-05-25 19:34:04,579:INFO:            imblearn: 0.10.1
2023-05-25 19:34:04,579:INFO:   category_encoders: 2.6.1
2023-05-25 19:34:04,579:INFO:            lightgbm: 3.3.5
2023-05-25 19:34:04,579:INFO:               numba: 0.56.4
2023-05-25 19:34:04,580:INFO:            requests: 2.28.1
2023-05-25 19:34:04,580:INFO:          matplotlib: 3.7.0
2023-05-25 19:34:04,580:INFO:          scikitplot: 0.3.7
2023-05-25 19:34:04,580:INFO:         yellowbrick: 1.5
2023-05-25 19:34:04,580:INFO:              plotly: 5.9.0
2023-05-25 19:34:04,580:INFO:             kaleido: 0.2.1
2023-05-25 19:34:04,580:INFO:         statsmodels: 0.13.5
2023-05-25 19:34:04,580:INFO:              sktime: 0.17.0
2023-05-25 19:34:04,580:INFO:               tbats: 1.1.3
2023-05-25 19:34:04,580:INFO:            pmdarima: 2.0.3
2023-05-25 19:34:04,580:INFO:              psutil: 5.9.0
2023-05-25 19:34:04,580:INFO:PyCaret optional dependencies:
2023-05-25 19:34:04,580:INFO:                shap: Not installed
2023-05-25 19:34:04,580:INFO:           interpret: Not installed
2023-05-25 19:34:04,580:INFO:                umap: Not installed
2023-05-25 19:34:04,580:INFO:    pandas_profiling: Not installed
2023-05-25 19:34:04,580:INFO:  explainerdashboard: Not installed
2023-05-25 19:34:04,580:INFO:             autoviz: Not installed
2023-05-25 19:34:04,580:INFO:           fairlearn: Not installed
2023-05-25 19:34:04,580:INFO:             xgboost: Not installed
2023-05-25 19:34:04,580:INFO:            catboost: Not installed
2023-05-25 19:34:04,580:INFO:              kmodes: Not installed
2023-05-25 19:34:04,580:INFO:             mlxtend: Not installed
2023-05-25 19:34:04,581:INFO:       statsforecast: Not installed
2023-05-25 19:34:04,581:INFO:        tune_sklearn: Not installed
2023-05-25 19:34:04,581:INFO:                 ray: Not installed
2023-05-25 19:34:04,581:INFO:            hyperopt: Not installed
2023-05-25 19:34:04,581:INFO:              optuna: Not installed
2023-05-25 19:34:04,581:INFO:               skopt: Not installed
2023-05-25 19:34:04,581:INFO:              mlflow: Not installed
2023-05-25 19:34:04,581:INFO:              gradio: Not installed
2023-05-25 19:34:04,581:INFO:             fastapi: Not installed
2023-05-25 19:34:04,581:INFO:             uvicorn: Not installed
2023-05-25 19:34:04,581:INFO:              m2cgen: Not installed
2023-05-25 19:34:04,581:INFO:           evidently: Not installed
2023-05-25 19:34:04,581:INFO:               fugue: Not installed
2023-05-25 19:34:04,581:INFO:           streamlit: Not installed
2023-05-25 19:34:04,581:INFO:             prophet: Not installed
2023-05-25 19:34:04,581:INFO:None
2023-05-25 19:34:04,581:INFO:Set up data.
2023-05-25 19:34:04,588:INFO:Set up train/test split.
2023-05-25 19:34:04,593:INFO:Set up index.
2023-05-25 19:34:04,593:INFO:Set up folding strategy.
2023-05-25 19:34:04,593:INFO:Assigning column types.
2023-05-25 19:34:04,597:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 19:34:04,637:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:34:04,638:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:34:04,663:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:04,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:04,704:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:34:04,705:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:34:04,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:04,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:04,731:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 19:34:04,773:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:34:04,797:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:04,798:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:04,839:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:34:04,863:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:04,864:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:04,864:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 19:34:04,929:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:04,930:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:04,995:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:04,996:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:04,997:INFO:Preparing preprocessing pipeline...
2023-05-25 19:34:04,998:INFO:Set up label encoding.
2023-05-25 19:34:04,998:INFO:Set up simple imputation.
2023-05-25 19:34:05,000:INFO:Set up encoding of categorical features.
2023-05-25 19:34:05,061:INFO:Finished creating preprocessing pipeline.
2023-05-25 19:34:05,066:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['APM', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'NumberOfPACs', 'GapBetweenPACs',
                                             'TotalMa...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['HoursPerWeek', 'TotalHours'],
                                    transformer=TargetEncoder(cols=['HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 19:34:05,066:INFO:Creating final display dataframe.
2023-05-25 19:34:05,283:INFO:Setup _display_container:                     Description                                           Value
0                    Session id                                            5364
1                        Target                                     LeagueIndex
2                   Target type                                      Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6, 8: 7
4           Original data shape                                      (3395, 11)
5        Transformed data shape                                      (3395, 11)
6   Transformed train set shape                                      (2716, 11)
7    Transformed test set shape                                       (679, 11)
8              Numeric features                                               8
9          Categorical features                                               2
10                   Preprocess                                            True
11              Imputation type                                          simple
12           Numeric imputation                                            mean
13       Categorical imputation                                            mode
14     Maximum one-hot encoding                                              25
15              Encoding method                                            None
16               Fold Generator                                 StratifiedKFold
17                  Fold Number                                               5
18                     CPU Jobs                                              -1
19                      Use GPU                                           False
20               Log Experiment                                           False
21              Experiment Name                                clf-default-name
22                          USI                                            0047
2023-05-25 19:34:05,357:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:05,357:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:05,425:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:05,425:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:34:05,425:INFO:setup() successfully completed in 1.06s...............
2023-05-25 19:34:15,703:INFO:Initializing compare_models()
2023-05-25 19:34:15,704:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 19:34:15,704:INFO:Checking exceptions
2023-05-25 19:34:15,707:INFO:Preparing display monitor
2023-05-25 19:34:15,728:INFO:Initializing Logistic Regression
2023-05-25 19:34:15,729:INFO:Total runtime is 1.87834103902181e-05 minutes
2023-05-25 19:34:15,732:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:15,732:INFO:Initializing create_model()
2023-05-25 19:34:15,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:15,732:INFO:Checking exceptions
2023-05-25 19:34:15,732:INFO:Importing libraries
2023-05-25 19:34:15,732:INFO:Copying training dataset
2023-05-25 19:34:15,736:INFO:Defining folds
2023-05-25 19:34:15,736:INFO:Declaring metric variables
2023-05-25 19:34:15,739:INFO:Importing untrained model
2023-05-25 19:34:15,742:INFO:Logistic Regression Imported successfully
2023-05-25 19:34:15,748:INFO:Starting cross validation
2023-05-25 19:34:15,750:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:16,271:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:34:16,283:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:34:16,312:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:34:16,320:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:34:16,320:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:34:16,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,386:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,388:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,395:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,396:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,397:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,432:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,432:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,434:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,435:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,438:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,440:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:16,440:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:16,441:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,220:INFO:Calculating mean and std
2023-05-25 19:34:17,221:INFO:Creating metrics dataframe
2023-05-25 19:34:17,503:INFO:Uploading results into container
2023-05-25 19:34:17,504:INFO:Uploading model into container now
2023-05-25 19:34:17,504:INFO:_master_model_container: 1
2023-05-25 19:34:17,504:INFO:_display_container: 2
2023-05-25 19:34:17,505:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5364, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:34:17,505:INFO:create_model() successfully completed......................................
2023-05-25 19:34:17,666:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:17,666:INFO:Creating metrics dataframe
2023-05-25 19:34:17,674:INFO:Initializing K Neighbors Classifier
2023-05-25 19:34:17,674:INFO:Total runtime is 0.032438286145528156 minutes
2023-05-25 19:34:17,677:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:17,678:INFO:Initializing create_model()
2023-05-25 19:34:17,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:17,678:INFO:Checking exceptions
2023-05-25 19:34:17,678:INFO:Importing libraries
2023-05-25 19:34:17,678:INFO:Copying training dataset
2023-05-25 19:34:17,682:INFO:Defining folds
2023-05-25 19:34:17,683:INFO:Declaring metric variables
2023-05-25 19:34:17,686:INFO:Importing untrained model
2023-05-25 19:34:17,690:INFO:K Neighbors Classifier Imported successfully
2023-05-25 19:34:17,695:INFO:Starting cross validation
2023-05-25 19:34:17,696:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:17,925:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,926:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,928:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,930:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,931:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,932:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:17,933:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,948:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,950:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,951:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:17,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,954:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,955:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:17,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,957:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,957:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:17,958:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:18,753:INFO:Calculating mean and std
2023-05-25 19:34:18,754:INFO:Creating metrics dataframe
2023-05-25 19:34:19,039:INFO:Uploading results into container
2023-05-25 19:34:19,040:INFO:Uploading model into container now
2023-05-25 19:34:19,040:INFO:_master_model_container: 2
2023-05-25 19:34:19,040:INFO:_display_container: 2
2023-05-25 19:34:19,041:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 19:34:19,041:INFO:create_model() successfully completed......................................
2023-05-25 19:34:19,206:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:19,206:INFO:Creating metrics dataframe
2023-05-25 19:34:19,217:INFO:Initializing Naive Bayes
2023-05-25 19:34:19,217:INFO:Total runtime is 0.05815069675445557 minutes
2023-05-25 19:34:19,220:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:19,220:INFO:Initializing create_model()
2023-05-25 19:34:19,220:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:19,220:INFO:Checking exceptions
2023-05-25 19:34:19,221:INFO:Importing libraries
2023-05-25 19:34:19,221:INFO:Copying training dataset
2023-05-25 19:34:19,226:INFO:Defining folds
2023-05-25 19:34:19,226:INFO:Declaring metric variables
2023-05-25 19:34:19,229:INFO:Importing untrained model
2023-05-25 19:34:19,232:INFO:Naive Bayes Imported successfully
2023-05-25 19:34:19,237:INFO:Starting cross validation
2023-05-25 19:34:19,238:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:19,421:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,422:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,424:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,429:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,429:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:19,432:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,432:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,432:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,441:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:19,443:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,255:INFO:Calculating mean and std
2023-05-25 19:34:20,256:INFO:Creating metrics dataframe
2023-05-25 19:34:20,545:INFO:Uploading results into container
2023-05-25 19:34:20,545:INFO:Uploading model into container now
2023-05-25 19:34:20,546:INFO:_master_model_container: 3
2023-05-25 19:34:20,546:INFO:_display_container: 2
2023-05-25 19:34:20,546:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 19:34:20,546:INFO:create_model() successfully completed......................................
2023-05-25 19:34:20,705:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:20,705:INFO:Creating metrics dataframe
2023-05-25 19:34:20,714:INFO:Initializing Decision Tree Classifier
2023-05-25 19:34:20,714:INFO:Total runtime is 0.08310048580169678 minutes
2023-05-25 19:34:20,717:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:20,718:INFO:Initializing create_model()
2023-05-25 19:34:20,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:20,718:INFO:Checking exceptions
2023-05-25 19:34:20,718:INFO:Importing libraries
2023-05-25 19:34:20,718:INFO:Copying training dataset
2023-05-25 19:34:20,722:INFO:Defining folds
2023-05-25 19:34:20,722:INFO:Declaring metric variables
2023-05-25 19:34:20,725:INFO:Importing untrained model
2023-05-25 19:34:20,728:INFO:Decision Tree Classifier Imported successfully
2023-05-25 19:34:20,734:INFO:Starting cross validation
2023-05-25 19:34:20,735:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:20,929:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,931:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,932:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,947:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,950:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,950:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,953:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,957:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,959:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,961:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,962:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,964:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:20,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:21,746:INFO:Calculating mean and std
2023-05-25 19:34:21,747:INFO:Creating metrics dataframe
2023-05-25 19:34:22,026:INFO:Uploading results into container
2023-05-25 19:34:22,027:INFO:Uploading model into container now
2023-05-25 19:34:22,027:INFO:_master_model_container: 4
2023-05-25 19:34:22,027:INFO:_display_container: 2
2023-05-25 19:34:22,028:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5364, splitter='best')
2023-05-25 19:34:22,028:INFO:create_model() successfully completed......................................
2023-05-25 19:34:22,185:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:22,185:INFO:Creating metrics dataframe
2023-05-25 19:34:22,195:INFO:Initializing SVM - Linear Kernel
2023-05-25 19:34:22,195:INFO:Total runtime is 0.10778390566507975 minutes
2023-05-25 19:34:22,198:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:22,198:INFO:Initializing create_model()
2023-05-25 19:34:22,198:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:22,198:INFO:Checking exceptions
2023-05-25 19:34:22,198:INFO:Importing libraries
2023-05-25 19:34:22,198:INFO:Copying training dataset
2023-05-25 19:34:22,203:INFO:Defining folds
2023-05-25 19:34:22,203:INFO:Declaring metric variables
2023-05-25 19:34:22,206:INFO:Importing untrained model
2023-05-25 19:34:22,210:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 19:34:22,216:INFO:Starting cross validation
2023-05-25 19:34:22,217:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:22,423:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:34:22,424:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,425:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,426:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:34:22,426:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:22,426:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,426:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,429:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,429:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:34:22,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:22,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,432:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:22,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,437:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:34:22,438:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,439:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,439:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:22,440:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,441:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:34:22,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,443:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:22,444:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:22,444:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,238:INFO:Calculating mean and std
2023-05-25 19:34:23,239:INFO:Creating metrics dataframe
2023-05-25 19:34:23,521:INFO:Uploading results into container
2023-05-25 19:34:23,522:INFO:Uploading model into container now
2023-05-25 19:34:23,522:INFO:_master_model_container: 5
2023-05-25 19:34:23,522:INFO:_display_container: 2
2023-05-25 19:34:23,522:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5364, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 19:34:23,523:INFO:create_model() successfully completed......................................
2023-05-25 19:34:23,690:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:23,690:INFO:Creating metrics dataframe
2023-05-25 19:34:23,700:INFO:Initializing Ridge Classifier
2023-05-25 19:34:23,700:INFO:Total runtime is 0.13286993900934854 minutes
2023-05-25 19:34:23,703:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:23,703:INFO:Initializing create_model()
2023-05-25 19:34:23,703:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:23,704:INFO:Checking exceptions
2023-05-25 19:34:23,704:INFO:Importing libraries
2023-05-25 19:34:23,704:INFO:Copying training dataset
2023-05-25 19:34:23,709:INFO:Defining folds
2023-05-25 19:34:23,709:INFO:Declaring metric variables
2023-05-25 19:34:23,713:INFO:Importing untrained model
2023-05-25 19:34:23,716:INFO:Ridge Classifier Imported successfully
2023-05-25 19:34:23,723:INFO:Starting cross validation
2023-05-25 19:34:23,725:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:23,875:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:34:23,875:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:34:23,875:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,876:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,876:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,876:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,878:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:23,878:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:23,878:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,879:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,882:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:34:23,882:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,883:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,884:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:23,885:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,885:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:34:23,885:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,887:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,887:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:23,888:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,888:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:34:23,889:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,890:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:23,891:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:23,891:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:24,733:INFO:Calculating mean and std
2023-05-25 19:34:24,734:INFO:Creating metrics dataframe
2023-05-25 19:34:25,024:INFO:Uploading results into container
2023-05-25 19:34:25,025:INFO:Uploading model into container now
2023-05-25 19:34:25,025:INFO:_master_model_container: 6
2023-05-25 19:34:25,025:INFO:_display_container: 2
2023-05-25 19:34:25,025:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5364, solver='auto',
                tol=0.0001)
2023-05-25 19:34:25,025:INFO:create_model() successfully completed......................................
2023-05-25 19:34:25,194:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:25,194:INFO:Creating metrics dataframe
2023-05-25 19:34:25,204:INFO:Initializing Random Forest Classifier
2023-05-25 19:34:25,204:INFO:Total runtime is 0.15792845884958903 minutes
2023-05-25 19:34:25,207:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:25,207:INFO:Initializing create_model()
2023-05-25 19:34:25,207:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:25,207:INFO:Checking exceptions
2023-05-25 19:34:25,207:INFO:Importing libraries
2023-05-25 19:34:25,207:INFO:Copying training dataset
2023-05-25 19:34:25,212:INFO:Defining folds
2023-05-25 19:34:25,212:INFO:Declaring metric variables
2023-05-25 19:34:25,215:INFO:Importing untrained model
2023-05-25 19:34:25,219:INFO:Random Forest Classifier Imported successfully
2023-05-25 19:34:25,225:INFO:Starting cross validation
2023-05-25 19:34:25,226:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:26,004:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,006:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,006:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:26,008:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,009:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,011:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,012:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:26,012:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,015:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,016:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,017:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:26,018:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,021:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,022:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,023:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,028:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,030:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,032:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:26,033:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:26,826:INFO:Calculating mean and std
2023-05-25 19:34:26,827:INFO:Creating metrics dataframe
2023-05-25 19:34:27,123:INFO:Uploading results into container
2023-05-25 19:34:27,123:INFO:Uploading model into container now
2023-05-25 19:34:27,124:INFO:_master_model_container: 7
2023-05-25 19:34:27,124:INFO:_display_container: 2
2023-05-25 19:34:27,124:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5364, verbose=0, warm_start=False)
2023-05-25 19:34:27,124:INFO:create_model() successfully completed......................................
2023-05-25 19:34:27,281:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:27,281:INFO:Creating metrics dataframe
2023-05-25 19:34:27,290:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 19:34:27,290:INFO:Total runtime is 0.19270602862040204 minutes
2023-05-25 19:34:27,293:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:27,293:INFO:Initializing create_model()
2023-05-25 19:34:27,293:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:27,293:INFO:Checking exceptions
2023-05-25 19:34:27,294:INFO:Importing libraries
2023-05-25 19:34:27,294:INFO:Copying training dataset
2023-05-25 19:34:27,298:INFO:Defining folds
2023-05-25 19:34:27,299:INFO:Declaring metric variables
2023-05-25 19:34:27,301:INFO:Importing untrained model
2023-05-25 19:34:27,305:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 19:34:27,310:INFO:Starting cross validation
2023-05-25 19:34:27,311:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:27,402:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:34:27,405:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:34:27,414:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:34:27,420:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:34:27,428:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:34:27,497:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,497:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,499:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,503:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,504:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,505:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,520:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,521:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,522:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,523:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,523:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,523:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,524:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,524:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:27,526:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:28,326:INFO:Calculating mean and std
2023-05-25 19:34:28,327:INFO:Creating metrics dataframe
2023-05-25 19:34:28,617:INFO:Uploading results into container
2023-05-25 19:34:28,618:INFO:Uploading model into container now
2023-05-25 19:34:28,618:INFO:_master_model_container: 8
2023-05-25 19:34:28,618:INFO:_display_container: 2
2023-05-25 19:34:28,618:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 19:34:28,618:INFO:create_model() successfully completed......................................
2023-05-25 19:34:28,784:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:28,784:INFO:Creating metrics dataframe
2023-05-25 19:34:28,795:INFO:Initializing Ada Boost Classifier
2023-05-25 19:34:28,795:INFO:Total runtime is 0.21777998606363935 minutes
2023-05-25 19:34:28,797:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:28,797:INFO:Initializing create_model()
2023-05-25 19:34:28,797:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:28,798:INFO:Checking exceptions
2023-05-25 19:34:28,798:INFO:Importing libraries
2023-05-25 19:34:28,798:INFO:Copying training dataset
2023-05-25 19:34:28,802:INFO:Defining folds
2023-05-25 19:34:28,803:INFO:Declaring metric variables
2023-05-25 19:34:28,806:INFO:Importing untrained model
2023-05-25 19:34:28,808:INFO:Ada Boost Classifier Imported successfully
2023-05-25 19:34:28,815:INFO:Starting cross validation
2023-05-25 19:34:28,816:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:29,296:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,297:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,298:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,298:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,300:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,300:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:29,301:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,303:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,304:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,305:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,305:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,306:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:29,306:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:29,306:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,308:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,311:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,312:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:29,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:29,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:30,149:INFO:Calculating mean and std
2023-05-25 19:34:30,150:INFO:Creating metrics dataframe
2023-05-25 19:34:30,448:INFO:Uploading results into container
2023-05-25 19:34:30,448:INFO:Uploading model into container now
2023-05-25 19:34:30,449:INFO:_master_model_container: 9
2023-05-25 19:34:30,449:INFO:_display_container: 2
2023-05-25 19:34:30,449:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5364)
2023-05-25 19:34:30,449:INFO:create_model() successfully completed......................................
2023-05-25 19:34:30,614:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:30,614:INFO:Creating metrics dataframe
2023-05-25 19:34:30,625:INFO:Initializing Gradient Boosting Classifier
2023-05-25 19:34:30,626:INFO:Total runtime is 0.24829952319463097 minutes
2023-05-25 19:34:30,628:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:30,628:INFO:Initializing create_model()
2023-05-25 19:34:30,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:30,629:INFO:Checking exceptions
2023-05-25 19:34:30,629:INFO:Importing libraries
2023-05-25 19:34:30,629:INFO:Copying training dataset
2023-05-25 19:34:30,633:INFO:Defining folds
2023-05-25 19:34:30,633:INFO:Declaring metric variables
2023-05-25 19:34:30,636:INFO:Importing untrained model
2023-05-25 19:34:30,640:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 19:34:30,646:INFO:Starting cross validation
2023-05-25 19:34:30,647:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:36,364:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,365:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,366:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:36,366:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,429:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,432:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,452:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,453:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,455:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,584:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:36,587:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,213:INFO:Calculating mean and std
2023-05-25 19:34:37,214:INFO:Creating metrics dataframe
2023-05-25 19:34:37,515:INFO:Uploading results into container
2023-05-25 19:34:37,515:INFO:Uploading model into container now
2023-05-25 19:34:37,515:INFO:_master_model_container: 10
2023-05-25 19:34:37,516:INFO:_display_container: 2
2023-05-25 19:34:37,516:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5364, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 19:34:37,516:INFO:create_model() successfully completed......................................
2023-05-25 19:34:37,678:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:37,678:INFO:Creating metrics dataframe
2023-05-25 19:34:37,690:INFO:Initializing Linear Discriminant Analysis
2023-05-25 19:34:37,690:INFO:Total runtime is 0.36603009700775146 minutes
2023-05-25 19:34:37,693:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:37,693:INFO:Initializing create_model()
2023-05-25 19:34:37,693:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:37,693:INFO:Checking exceptions
2023-05-25 19:34:37,693:INFO:Importing libraries
2023-05-25 19:34:37,693:INFO:Copying training dataset
2023-05-25 19:34:37,698:INFO:Defining folds
2023-05-25 19:34:37,698:INFO:Declaring metric variables
2023-05-25 19:34:37,701:INFO:Importing untrained model
2023-05-25 19:34:37,704:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 19:34:37,710:INFO:Starting cross validation
2023-05-25 19:34:37,711:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:37,898:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,899:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,900:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,902:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,903:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,905:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,909:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,910:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,912:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,914:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,915:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,916:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,917:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,918:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:37,919:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:38,730:INFO:Calculating mean and std
2023-05-25 19:34:38,731:INFO:Creating metrics dataframe
2023-05-25 19:34:39,030:INFO:Uploading results into container
2023-05-25 19:34:39,031:INFO:Uploading model into container now
2023-05-25 19:34:39,031:INFO:_master_model_container: 11
2023-05-25 19:34:39,031:INFO:_display_container: 2
2023-05-25 19:34:39,031:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 19:34:39,031:INFO:create_model() successfully completed......................................
2023-05-25 19:34:39,196:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:39,196:INFO:Creating metrics dataframe
2023-05-25 19:34:39,207:INFO:Initializing Extra Trees Classifier
2023-05-25 19:34:39,207:INFO:Total runtime is 0.3913206696510315 minutes
2023-05-25 19:34:39,211:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:39,211:INFO:Initializing create_model()
2023-05-25 19:34:39,211:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:39,211:INFO:Checking exceptions
2023-05-25 19:34:39,211:INFO:Importing libraries
2023-05-25 19:34:39,211:INFO:Copying training dataset
2023-05-25 19:34:39,216:INFO:Defining folds
2023-05-25 19:34:39,216:INFO:Declaring metric variables
2023-05-25 19:34:39,219:INFO:Importing untrained model
2023-05-25 19:34:39,222:INFO:Extra Trees Classifier Imported successfully
2023-05-25 19:34:39,228:INFO:Starting cross validation
2023-05-25 19:34:39,229:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:39,899:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,901:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,902:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:39,903:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,905:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,905:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,906:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,906:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,908:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:39,908:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:39,908:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,908:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,918:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,919:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,919:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,920:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:39,920:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,920:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:39,921:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:39,921:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:40,765:INFO:Calculating mean and std
2023-05-25 19:34:40,766:INFO:Creating metrics dataframe
2023-05-25 19:34:41,051:INFO:Uploading results into container
2023-05-25 19:34:41,052:INFO:Uploading model into container now
2023-05-25 19:34:41,052:INFO:_master_model_container: 12
2023-05-25 19:34:41,052:INFO:_display_container: 2
2023-05-25 19:34:41,053:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5364, verbose=0, warm_start=False)
2023-05-25 19:34:41,053:INFO:create_model() successfully completed......................................
2023-05-25 19:34:41,212:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:41,212:INFO:Creating metrics dataframe
2023-05-25 19:34:41,225:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 19:34:41,225:INFO:Total runtime is 0.42494749625523887 minutes
2023-05-25 19:34:41,228:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:41,228:INFO:Initializing create_model()
2023-05-25 19:34:41,228:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:41,228:INFO:Checking exceptions
2023-05-25 19:34:41,228:INFO:Importing libraries
2023-05-25 19:34:41,228:INFO:Copying training dataset
2023-05-25 19:34:41,233:INFO:Defining folds
2023-05-25 19:34:41,233:INFO:Declaring metric variables
2023-05-25 19:34:41,236:INFO:Importing untrained model
2023-05-25 19:34:41,240:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 19:34:41,246:INFO:Starting cross validation
2023-05-25 19:34:41,248:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:42,564:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:42,566:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:42,566:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:42,567:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:42,594:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:42,596:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:42,597:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:42,600:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:42,600:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:42,601:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:42,602:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:42,602:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:42,604:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:43,320:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:43,321:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:43,323:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:43,438:INFO:Calculating mean and std
2023-05-25 19:34:43,439:INFO:Creating metrics dataframe
2023-05-25 19:34:43,742:INFO:Uploading results into container
2023-05-25 19:34:43,743:INFO:Uploading model into container now
2023-05-25 19:34:43,743:INFO:_master_model_container: 13
2023-05-25 19:34:43,743:INFO:_display_container: 2
2023-05-25 19:34:43,744:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5364, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 19:34:43,744:INFO:create_model() successfully completed......................................
2023-05-25 19:34:43,912:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:43,912:INFO:Creating metrics dataframe
2023-05-25 19:34:43,924:INFO:Initializing Dummy Classifier
2023-05-25 19:34:43,924:INFO:Total runtime is 0.4699300050735474 minutes
2023-05-25 19:34:43,927:INFO:SubProcess create_model() called ==================================
2023-05-25 19:34:43,928:INFO:Initializing create_model()
2023-05-25 19:34:43,928:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE735A12A0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:43,928:INFO:Checking exceptions
2023-05-25 19:34:43,928:INFO:Importing libraries
2023-05-25 19:34:43,928:INFO:Copying training dataset
2023-05-25 19:34:43,932:INFO:Defining folds
2023-05-25 19:34:43,932:INFO:Declaring metric variables
2023-05-25 19:34:43,935:INFO:Importing untrained model
2023-05-25 19:34:43,938:INFO:Dummy Classifier Imported successfully
2023-05-25 19:34:43,943:INFO:Starting cross validation
2023-05-25 19:34:43,944:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:34:44,121:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,122:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,122:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,123:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:44,123:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,124:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,124:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:44,125:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,129:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,131:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,132:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:44,132:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,134:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,136:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,136:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:44,137:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,143:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,145:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,145:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:34:44,146:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:34:44,988:INFO:Calculating mean and std
2023-05-25 19:34:44,989:INFO:Creating metrics dataframe
2023-05-25 19:34:45,295:INFO:Uploading results into container
2023-05-25 19:34:45,296:INFO:Uploading model into container now
2023-05-25 19:34:45,296:INFO:_master_model_container: 14
2023-05-25 19:34:45,296:INFO:_display_container: 2
2023-05-25 19:34:45,296:INFO:DummyClassifier(constant=None, random_state=5364, strategy='prior')
2023-05-25 19:34:45,296:INFO:create_model() successfully completed......................................
2023-05-25 19:34:45,463:INFO:SubProcess create_model() end ==================================
2023-05-25 19:34:45,463:INFO:Creating metrics dataframe
2023-05-25 19:34:45,484:INFO:Initializing create_model()
2023-05-25 19:34:45,484:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE71EB0C40>, estimator=GaussianNB(priors=None, var_smoothing=1e-09), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:34:45,484:INFO:Checking exceptions
2023-05-25 19:34:45,486:INFO:Importing libraries
2023-05-25 19:34:45,486:INFO:Copying training dataset
2023-05-25 19:34:45,489:INFO:Defining folds
2023-05-25 19:34:45,489:INFO:Declaring metric variables
2023-05-25 19:34:45,489:INFO:Importing untrained model
2023-05-25 19:34:45,489:INFO:Declaring custom model
2023-05-25 19:34:45,490:INFO:Naive Bayes Imported successfully
2023-05-25 19:34:45,491:INFO:Cross validation set to False
2023-05-25 19:34:45,491:INFO:Fitting Model
2023-05-25 19:34:45,772:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 19:34:45,772:INFO:create_model() successfully completed......................................
2023-05-25 19:34:45,955:INFO:_master_model_container: 14
2023-05-25 19:34:45,955:INFO:_display_container: 2
2023-05-25 19:34:45,955:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 19:34:45,955:INFO:compare_models() successfully completed......................................
2023-05-25 19:35:09,079:INFO:PyCaret ClassificationExperiment
2023-05-25 19:35:09,079:INFO:Logging name: clf-default-name
2023-05-25 19:35:09,079:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 19:35:09,079:INFO:version 3.0.2
2023-05-25 19:35:09,079:INFO:Initializing setup()
2023-05-25 19:35:09,079:INFO:self.USI: e854
2023-05-25 19:35:09,079:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 19:35:09,079:INFO:Checking environment
2023-05-25 19:35:09,080:INFO:python_version: 3.10.9
2023-05-25 19:35:09,080:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 19:35:09,080:INFO:machine: AMD64
2023-05-25 19:35:09,080:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 19:35:09,080:INFO:Memory: svmem(total=17112055808, available=5323968512, percent=68.9, used=11788087296, free=5323968512)
2023-05-25 19:35:09,080:INFO:Physical Core: 8
2023-05-25 19:35:09,080:INFO:Logical Core: 16
2023-05-25 19:35:09,080:INFO:Checking libraries
2023-05-25 19:35:09,080:INFO:System:
2023-05-25 19:35:09,080:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 19:35:09,080:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 19:35:09,080:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 19:35:09,080:INFO:PyCaret required dependencies:
2023-05-25 19:35:09,080:INFO:                 pip: 22.3.1
2023-05-25 19:35:09,080:INFO:          setuptools: 65.6.3
2023-05-25 19:35:09,080:INFO:             pycaret: 3.0.2
2023-05-25 19:35:09,080:INFO:             IPython: 8.10.0
2023-05-25 19:35:09,080:INFO:          ipywidgets: 7.6.5
2023-05-25 19:35:09,080:INFO:                tqdm: 4.64.1
2023-05-25 19:35:09,080:INFO:               numpy: 1.23.5
2023-05-25 19:35:09,080:INFO:              pandas: 1.5.3
2023-05-25 19:35:09,080:INFO:              jinja2: 3.1.2
2023-05-25 19:35:09,081:INFO:               scipy: 1.10.0
2023-05-25 19:35:09,081:INFO:              joblib: 1.1.1
2023-05-25 19:35:09,081:INFO:             sklearn: 1.2.1
2023-05-25 19:35:09,081:INFO:                pyod: 1.0.9
2023-05-25 19:35:09,081:INFO:            imblearn: 0.10.1
2023-05-25 19:35:09,081:INFO:   category_encoders: 2.6.1
2023-05-25 19:35:09,081:INFO:            lightgbm: 3.3.5
2023-05-25 19:35:09,081:INFO:               numba: 0.56.4
2023-05-25 19:35:09,081:INFO:            requests: 2.28.1
2023-05-25 19:35:09,081:INFO:          matplotlib: 3.7.0
2023-05-25 19:35:09,081:INFO:          scikitplot: 0.3.7
2023-05-25 19:35:09,081:INFO:         yellowbrick: 1.5
2023-05-25 19:35:09,081:INFO:              plotly: 5.9.0
2023-05-25 19:35:09,081:INFO:             kaleido: 0.2.1
2023-05-25 19:35:09,081:INFO:         statsmodels: 0.13.5
2023-05-25 19:35:09,081:INFO:              sktime: 0.17.0
2023-05-25 19:35:09,081:INFO:               tbats: 1.1.3
2023-05-25 19:35:09,081:INFO:            pmdarima: 2.0.3
2023-05-25 19:35:09,081:INFO:              psutil: 5.9.0
2023-05-25 19:35:09,081:INFO:PyCaret optional dependencies:
2023-05-25 19:35:09,081:INFO:                shap: Not installed
2023-05-25 19:35:09,081:INFO:           interpret: Not installed
2023-05-25 19:35:09,081:INFO:                umap: Not installed
2023-05-25 19:35:09,081:INFO:    pandas_profiling: Not installed
2023-05-25 19:35:09,082:INFO:  explainerdashboard: Not installed
2023-05-25 19:35:09,082:INFO:             autoviz: Not installed
2023-05-25 19:35:09,082:INFO:           fairlearn: Not installed
2023-05-25 19:35:09,082:INFO:             xgboost: Not installed
2023-05-25 19:35:09,082:INFO:            catboost: Not installed
2023-05-25 19:35:09,082:INFO:              kmodes: Not installed
2023-05-25 19:35:09,082:INFO:             mlxtend: Not installed
2023-05-25 19:35:09,082:INFO:       statsforecast: Not installed
2023-05-25 19:35:09,082:INFO:        tune_sklearn: Not installed
2023-05-25 19:35:09,082:INFO:                 ray: Not installed
2023-05-25 19:35:09,082:INFO:            hyperopt: Not installed
2023-05-25 19:35:09,082:INFO:              optuna: Not installed
2023-05-25 19:35:09,082:INFO:               skopt: Not installed
2023-05-25 19:35:09,082:INFO:              mlflow: Not installed
2023-05-25 19:35:09,082:INFO:              gradio: Not installed
2023-05-25 19:35:09,082:INFO:             fastapi: Not installed
2023-05-25 19:35:09,082:INFO:             uvicorn: Not installed
2023-05-25 19:35:09,082:INFO:              m2cgen: Not installed
2023-05-25 19:35:09,082:INFO:           evidently: Not installed
2023-05-25 19:35:09,082:INFO:               fugue: Not installed
2023-05-25 19:35:09,082:INFO:           streamlit: Not installed
2023-05-25 19:35:09,082:INFO:             prophet: Not installed
2023-05-25 19:35:09,082:INFO:None
2023-05-25 19:35:09,083:INFO:Set up data.
2023-05-25 19:35:09,090:INFO:Set up train/test split.
2023-05-25 19:35:09,097:INFO:Set up index.
2023-05-25 19:35:09,097:INFO:Set up folding strategy.
2023-05-25 19:35:09,097:INFO:Assigning column types.
2023-05-25 19:35:09,100:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 19:35:09,141:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:35:09,141:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:35:09,166:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,166:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,208:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:35:09,208:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:35:09,234:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,234:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,235:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 19:35:09,276:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:35:09,301:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,302:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,343:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:35:09,368:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,369:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,369:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 19:35:09,435:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,435:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,501:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,501:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,502:INFO:Preparing preprocessing pipeline...
2023-05-25 19:35:09,503:INFO:Set up label encoding.
2023-05-25 19:35:09,503:INFO:Set up simple imputation.
2023-05-25 19:35:09,505:INFO:Set up encoding of categorical features.
2023-05-25 19:35:09,578:INFO:Finished creating preprocessing pipeline.
2023-05-25 19:35:09,585:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['GameID', 'APM', 'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightCli...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours'],
                                    transformer=TargetEncoder(cols=['Age',
                                                                    'HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 19:35:09,585:INFO:Creating final display dataframe.
2023-05-25 19:35:09,821:INFO:Setup _display_container:                     Description                                           Value
0                    Session id                                            2953
1                        Target                                     LeagueIndex
2                   Target type                                      Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6, 8: 7
4           Original data shape                                      (3395, 20)
5        Transformed data shape                                      (3395, 20)
6   Transformed train set shape                                      (2716, 20)
7    Transformed test set shape                                       (679, 20)
8              Numeric features                                              16
9          Categorical features                                               3
10                   Preprocess                                            True
11              Imputation type                                          simple
12           Numeric imputation                                            mean
13       Categorical imputation                                            mode
14     Maximum one-hot encoding                                              25
15              Encoding method                                            None
16               Fold Generator                                 StratifiedKFold
17                  Fold Number                                               5
18                     CPU Jobs                                              -1
19                      Use GPU                                           False
20               Log Experiment                                           False
21              Experiment Name                                clf-default-name
22                          USI                                            e854
2023-05-25 19:35:09,892:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,893:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:35:09,961:INFO:setup() successfully completed in 1.1s...............
2023-05-25 19:35:13,487:INFO:Initializing compare_models()
2023-05-25 19:35:13,487:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 19:35:13,487:INFO:Checking exceptions
2023-05-25 19:35:13,491:INFO:Preparing display monitor
2023-05-25 19:35:13,515:INFO:Initializing Logistic Regression
2023-05-25 19:35:13,515:INFO:Total runtime is 0.0 minutes
2023-05-25 19:35:13,518:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:13,518:INFO:Initializing create_model()
2023-05-25 19:35:13,518:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:13,518:INFO:Checking exceptions
2023-05-25 19:35:13,518:INFO:Importing libraries
2023-05-25 19:35:13,518:INFO:Copying training dataset
2023-05-25 19:35:13,522:INFO:Defining folds
2023-05-25 19:35:13,522:INFO:Declaring metric variables
2023-05-25 19:35:13,525:INFO:Importing untrained model
2023-05-25 19:35:13,529:INFO:Logistic Regression Imported successfully
2023-05-25 19:35:13,535:INFO:Starting cross validation
2023-05-25 19:35:13,536:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:14,097:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:35:14,115:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:35:14,116:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:35:14,121:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:35:14,123:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:35:14,229:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,230:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,231:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:14,232:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,249:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,249:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,250:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,250:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,251:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:14,251:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,251:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,254:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,254:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,255:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,255:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,256:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:14,256:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:14,256:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:14,256:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,118:INFO:Calculating mean and std
2023-05-25 19:35:15,120:INFO:Creating metrics dataframe
2023-05-25 19:35:15,425:INFO:Uploading results into container
2023-05-25 19:35:15,426:INFO:Uploading model into container now
2023-05-25 19:35:15,426:INFO:_master_model_container: 1
2023-05-25 19:35:15,426:INFO:_display_container: 2
2023-05-25 19:35:15,426:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2953, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:35:15,426:INFO:create_model() successfully completed......................................
2023-05-25 19:35:15,596:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:15,597:INFO:Creating metrics dataframe
2023-05-25 19:35:15,604:INFO:Initializing K Neighbors Classifier
2023-05-25 19:35:15,604:INFO:Total runtime is 0.03482602437337239 minutes
2023-05-25 19:35:15,606:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:15,608:INFO:Initializing create_model()
2023-05-25 19:35:15,608:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:15,608:INFO:Checking exceptions
2023-05-25 19:35:15,608:INFO:Importing libraries
2023-05-25 19:35:15,608:INFO:Copying training dataset
2023-05-25 19:35:15,613:INFO:Defining folds
2023-05-25 19:35:15,613:INFO:Declaring metric variables
2023-05-25 19:35:15,616:INFO:Importing untrained model
2023-05-25 19:35:15,620:INFO:K Neighbors Classifier Imported successfully
2023-05-25 19:35:15,625:INFO:Starting cross validation
2023-05-25 19:35:15,626:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:15,908:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,910:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,911:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,911:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,912:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,914:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:15,914:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,948:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,950:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,950:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,951:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,963:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,964:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:15,965:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:15,965:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:16,755:INFO:Calculating mean and std
2023-05-25 19:35:16,756:INFO:Creating metrics dataframe
2023-05-25 19:35:17,064:INFO:Uploading results into container
2023-05-25 19:35:17,064:INFO:Uploading model into container now
2023-05-25 19:35:17,065:INFO:_master_model_container: 2
2023-05-25 19:35:17,065:INFO:_display_container: 2
2023-05-25 19:35:17,065:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 19:35:17,065:INFO:create_model() successfully completed......................................
2023-05-25 19:35:17,225:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:17,225:INFO:Creating metrics dataframe
2023-05-25 19:35:17,233:INFO:Initializing Naive Bayes
2023-05-25 19:35:17,233:INFO:Total runtime is 0.06197133064270019 minutes
2023-05-25 19:35:17,236:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:17,236:INFO:Initializing create_model()
2023-05-25 19:35:17,236:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:17,236:INFO:Checking exceptions
2023-05-25 19:35:17,236:INFO:Importing libraries
2023-05-25 19:35:17,236:INFO:Copying training dataset
2023-05-25 19:35:17,242:INFO:Defining folds
2023-05-25 19:35:17,242:INFO:Declaring metric variables
2023-05-25 19:35:17,245:INFO:Importing untrained model
2023-05-25 19:35:17,248:INFO:Naive Bayes Imported successfully
2023-05-25 19:35:17,254:INFO:Starting cross validation
2023-05-25 19:35:17,255:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:17,479:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,481:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,482:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,483:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,485:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,486:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,490:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,491:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,493:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,497:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,498:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,498:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:17,498:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:18,342:INFO:Calculating mean and std
2023-05-25 19:35:18,343:INFO:Creating metrics dataframe
2023-05-25 19:35:18,648:INFO:Uploading results into container
2023-05-25 19:35:18,648:INFO:Uploading model into container now
2023-05-25 19:35:18,649:INFO:_master_model_container: 3
2023-05-25 19:35:18,649:INFO:_display_container: 2
2023-05-25 19:35:18,649:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 19:35:18,649:INFO:create_model() successfully completed......................................
2023-05-25 19:35:18,812:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:18,812:INFO:Creating metrics dataframe
2023-05-25 19:35:18,822:INFO:Initializing Decision Tree Classifier
2023-05-25 19:35:18,822:INFO:Total runtime is 0.08845059474309284 minutes
2023-05-25 19:35:18,825:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:18,825:INFO:Initializing create_model()
2023-05-25 19:35:18,825:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:18,825:INFO:Checking exceptions
2023-05-25 19:35:18,825:INFO:Importing libraries
2023-05-25 19:35:18,825:INFO:Copying training dataset
2023-05-25 19:35:18,831:INFO:Defining folds
2023-05-25 19:35:18,831:INFO:Declaring metric variables
2023-05-25 19:35:18,834:INFO:Importing untrained model
2023-05-25 19:35:18,836:INFO:Decision Tree Classifier Imported successfully
2023-05-25 19:35:18,841:INFO:Starting cross validation
2023-05-25 19:35:18,843:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:19,088:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,089:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,090:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,090:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,091:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,092:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,092:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,093:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,093:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,098:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,099:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,100:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,102:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:19,960:INFO:Calculating mean and std
2023-05-25 19:35:19,961:INFO:Creating metrics dataframe
2023-05-25 19:35:20,260:INFO:Uploading results into container
2023-05-25 19:35:20,261:INFO:Uploading model into container now
2023-05-25 19:35:20,261:INFO:_master_model_container: 4
2023-05-25 19:35:20,261:INFO:_display_container: 2
2023-05-25 19:35:20,261:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2953, splitter='best')
2023-05-25 19:35:20,261:INFO:create_model() successfully completed......................................
2023-05-25 19:35:20,426:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:20,426:INFO:Creating metrics dataframe
2023-05-25 19:35:20,435:INFO:Initializing SVM - Linear Kernel
2023-05-25 19:35:20,435:INFO:Total runtime is 0.11534250179926553 minutes
2023-05-25 19:35:20,439:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:20,439:INFO:Initializing create_model()
2023-05-25 19:35:20,440:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:20,440:INFO:Checking exceptions
2023-05-25 19:35:20,440:INFO:Importing libraries
2023-05-25 19:35:20,440:INFO:Copying training dataset
2023-05-25 19:35:20,445:INFO:Defining folds
2023-05-25 19:35:20,445:INFO:Declaring metric variables
2023-05-25 19:35:20,448:INFO:Importing untrained model
2023-05-25 19:35:20,452:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 19:35:20,458:INFO:Starting cross validation
2023-05-25 19:35:20,459:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:20,667:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:35:20,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:20,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:20,669:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:20,670:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:20,673:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:35:20,674:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:20,675:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:20,676:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:20,678:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:20,678:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:35:20,679:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:20,680:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:35:20,680:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:20,680:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:20,681:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:20,681:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:20,682:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:20,683:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:20,692:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:35:20,692:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:20,693:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:20,694:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:20,695:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:21,525:INFO:Calculating mean and std
2023-05-25 19:35:21,526:INFO:Creating metrics dataframe
2023-05-25 19:35:21,825:INFO:Uploading results into container
2023-05-25 19:35:21,825:INFO:Uploading model into container now
2023-05-25 19:35:21,826:INFO:_master_model_container: 5
2023-05-25 19:35:21,826:INFO:_display_container: 2
2023-05-25 19:35:21,826:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2953, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 19:35:21,826:INFO:create_model() successfully completed......................................
2023-05-25 19:35:21,984:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:21,984:INFO:Creating metrics dataframe
2023-05-25 19:35:21,993:INFO:Initializing Ridge Classifier
2023-05-25 19:35:21,993:INFO:Total runtime is 0.14130920569101968 minutes
2023-05-25 19:35:21,996:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:21,996:INFO:Initializing create_model()
2023-05-25 19:35:21,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:21,996:INFO:Checking exceptions
2023-05-25 19:35:21,996:INFO:Importing libraries
2023-05-25 19:35:21,996:INFO:Copying training dataset
2023-05-25 19:35:22,002:INFO:Defining folds
2023-05-25 19:35:22,002:INFO:Declaring metric variables
2023-05-25 19:35:22,005:INFO:Importing untrained model
2023-05-25 19:35:22,008:INFO:Ridge Classifier Imported successfully
2023-05-25 19:35:22,013:INFO:Starting cross validation
2023-05-25 19:35:22,014:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:22,170:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:35:22,171:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,172:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,173:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:22,173:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,181:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:35:22,182:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,184:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,185:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:22,186:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,186:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:35:22,188:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,189:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,190:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:22,191:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,199:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:35:22,200:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,201:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,202:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:22,202:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,205:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:35:22,205:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,206:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:22,207:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:22,208:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:23,028:INFO:Calculating mean and std
2023-05-25 19:35:23,029:INFO:Creating metrics dataframe
2023-05-25 19:35:23,328:INFO:Uploading results into container
2023-05-25 19:35:23,329:INFO:Uploading model into container now
2023-05-25 19:35:23,329:INFO:_master_model_container: 6
2023-05-25 19:35:23,329:INFO:_display_container: 2
2023-05-25 19:35:23,330:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2953, solver='auto',
                tol=0.0001)
2023-05-25 19:35:23,330:INFO:create_model() successfully completed......................................
2023-05-25 19:35:23,487:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:23,487:INFO:Creating metrics dataframe
2023-05-25 19:35:23,497:INFO:Initializing Random Forest Classifier
2023-05-25 19:35:23,497:INFO:Total runtime is 0.16636152267456053 minutes
2023-05-25 19:35:23,500:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:23,500:INFO:Initializing create_model()
2023-05-25 19:35:23,500:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:23,500:INFO:Checking exceptions
2023-05-25 19:35:23,500:INFO:Importing libraries
2023-05-25 19:35:23,500:INFO:Copying training dataset
2023-05-25 19:35:23,505:INFO:Defining folds
2023-05-25 19:35:23,505:INFO:Declaring metric variables
2023-05-25 19:35:23,508:INFO:Importing untrained model
2023-05-25 19:35:23,512:INFO:Random Forest Classifier Imported successfully
2023-05-25 19:35:23,518:INFO:Starting cross validation
2023-05-25 19:35:23,519:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:24,401:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,402:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,404:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,408:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,409:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,410:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,410:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,410:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:24,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:24,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,413:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,415:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,416:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:24,416:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,467:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,468:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:24,469:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:24,470:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:25,290:INFO:Calculating mean and std
2023-05-25 19:35:25,291:INFO:Creating metrics dataframe
2023-05-25 19:35:25,595:INFO:Uploading results into container
2023-05-25 19:35:25,596:INFO:Uploading model into container now
2023-05-25 19:35:25,596:INFO:_master_model_container: 7
2023-05-25 19:35:25,596:INFO:_display_container: 2
2023-05-25 19:35:25,597:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2953, verbose=0, warm_start=False)
2023-05-25 19:35:25,597:INFO:create_model() successfully completed......................................
2023-05-25 19:35:25,753:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:25,753:INFO:Creating metrics dataframe
2023-05-25 19:35:25,764:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 19:35:25,764:INFO:Total runtime is 0.2041516582171122 minutes
2023-05-25 19:35:25,767:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:25,767:INFO:Initializing create_model()
2023-05-25 19:35:25,767:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:25,767:INFO:Checking exceptions
2023-05-25 19:35:25,767:INFO:Importing libraries
2023-05-25 19:35:25,767:INFO:Copying training dataset
2023-05-25 19:35:25,772:INFO:Defining folds
2023-05-25 19:35:25,772:INFO:Declaring metric variables
2023-05-25 19:35:25,775:INFO:Importing untrained model
2023-05-25 19:35:25,778:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 19:35:25,784:INFO:Starting cross validation
2023-05-25 19:35:25,785:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:25,892:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:35:25,894:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:35:25,898:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:35:25,903:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:35:25,909:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:35:26,002:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,002:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,003:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,003:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,004:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:26,005:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,005:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,007:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,008:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,010:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,017:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,018:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,018:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,019:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,020:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,020:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:26,868:INFO:Calculating mean and std
2023-05-25 19:35:26,868:INFO:Creating metrics dataframe
2023-05-25 19:35:27,168:INFO:Uploading results into container
2023-05-25 19:35:27,169:INFO:Uploading model into container now
2023-05-25 19:35:27,169:INFO:_master_model_container: 8
2023-05-25 19:35:27,169:INFO:_display_container: 2
2023-05-25 19:35:27,169:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 19:35:27,169:INFO:create_model() successfully completed......................................
2023-05-25 19:35:27,329:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:27,330:INFO:Creating metrics dataframe
2023-05-25 19:35:27,340:INFO:Initializing Ada Boost Classifier
2023-05-25 19:35:27,340:INFO:Total runtime is 0.23041897217432655 minutes
2023-05-25 19:35:27,343:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:27,343:INFO:Initializing create_model()
2023-05-25 19:35:27,343:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:27,343:INFO:Checking exceptions
2023-05-25 19:35:27,343:INFO:Importing libraries
2023-05-25 19:35:27,343:INFO:Copying training dataset
2023-05-25 19:35:27,349:INFO:Defining folds
2023-05-25 19:35:27,349:INFO:Declaring metric variables
2023-05-25 19:35:27,352:INFO:Importing untrained model
2023-05-25 19:35:27,355:INFO:Ada Boost Classifier Imported successfully
2023-05-25 19:35:27,360:INFO:Starting cross validation
2023-05-25 19:35:27,362:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:28,013:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,014:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,015:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:28,015:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,027:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,028:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,029:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:28,029:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,033:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,034:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,035:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:28,036:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,048:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,048:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,049:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,049:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:28,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:28,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,051:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:28,910:INFO:Calculating mean and std
2023-05-25 19:35:28,911:INFO:Creating metrics dataframe
2023-05-25 19:35:29,228:INFO:Uploading results into container
2023-05-25 19:35:29,230:INFO:Uploading model into container now
2023-05-25 19:35:29,230:INFO:_master_model_container: 9
2023-05-25 19:35:29,230:INFO:_display_container: 2
2023-05-25 19:35:29,231:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2953)
2023-05-25 19:35:29,231:INFO:create_model() successfully completed......................................
2023-05-25 19:35:29,416:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:29,416:INFO:Creating metrics dataframe
2023-05-25 19:35:29,427:INFO:Initializing Gradient Boosting Classifier
2023-05-25 19:35:29,427:INFO:Total runtime is 0.26519858042399086 minutes
2023-05-25 19:35:29,430:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:29,430:INFO:Initializing create_model()
2023-05-25 19:35:29,430:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:29,430:INFO:Checking exceptions
2023-05-25 19:35:29,430:INFO:Importing libraries
2023-05-25 19:35:29,430:INFO:Copying training dataset
2023-05-25 19:35:29,435:INFO:Defining folds
2023-05-25 19:35:29,435:INFO:Declaring metric variables
2023-05-25 19:35:29,439:INFO:Importing untrained model
2023-05-25 19:35:29,443:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 19:35:29,448:INFO:Starting cross validation
2023-05-25 19:35:29,449:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:39,365:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,366:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,368:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,425:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,425:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,427:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,427:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,428:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,428:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,441:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,443:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,502:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,503:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:39,504:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:40,322:INFO:Calculating mean and std
2023-05-25 19:35:40,323:INFO:Creating metrics dataframe
2023-05-25 19:35:40,635:INFO:Uploading results into container
2023-05-25 19:35:40,636:INFO:Uploading model into container now
2023-05-25 19:35:40,636:INFO:_master_model_container: 10
2023-05-25 19:35:40,636:INFO:_display_container: 2
2023-05-25 19:35:40,636:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2953, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 19:35:40,636:INFO:create_model() successfully completed......................................
2023-05-25 19:35:40,796:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:40,797:INFO:Creating metrics dataframe
2023-05-25 19:35:40,806:INFO:Initializing Linear Discriminant Analysis
2023-05-25 19:35:40,806:INFO:Total runtime is 0.4548563043276469 minutes
2023-05-25 19:35:40,810:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:40,810:INFO:Initializing create_model()
2023-05-25 19:35:40,810:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:40,810:INFO:Checking exceptions
2023-05-25 19:35:40,810:INFO:Importing libraries
2023-05-25 19:35:40,810:INFO:Copying training dataset
2023-05-25 19:35:40,815:INFO:Defining folds
2023-05-25 19:35:40,816:INFO:Declaring metric variables
2023-05-25 19:35:40,818:INFO:Importing untrained model
2023-05-25 19:35:40,821:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 19:35:40,827:INFO:Starting cross validation
2023-05-25 19:35:40,828:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:41,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,051:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,066:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,067:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,068:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,069:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,070:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,071:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,071:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,073:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,074:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,078:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,080:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,082:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:41,963:INFO:Calculating mean and std
2023-05-25 19:35:41,964:INFO:Creating metrics dataframe
2023-05-25 19:35:42,272:INFO:Uploading results into container
2023-05-25 19:35:42,273:INFO:Uploading model into container now
2023-05-25 19:35:42,273:INFO:_master_model_container: 11
2023-05-25 19:35:42,273:INFO:_display_container: 2
2023-05-25 19:35:42,273:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 19:35:42,273:INFO:create_model() successfully completed......................................
2023-05-25 19:35:42,444:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:42,444:INFO:Creating metrics dataframe
2023-05-25 19:35:42,455:INFO:Initializing Extra Trees Classifier
2023-05-25 19:35:42,455:INFO:Total runtime is 0.4823322335879008 minutes
2023-05-25 19:35:42,458:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:42,458:INFO:Initializing create_model()
2023-05-25 19:35:42,458:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:42,458:INFO:Checking exceptions
2023-05-25 19:35:42,459:INFO:Importing libraries
2023-05-25 19:35:42,459:INFO:Copying training dataset
2023-05-25 19:35:42,463:INFO:Defining folds
2023-05-25 19:35:42,464:INFO:Declaring metric variables
2023-05-25 19:35:42,466:INFO:Importing untrained model
2023-05-25 19:35:42,471:INFO:Extra Trees Classifier Imported successfully
2023-05-25 19:35:42,476:INFO:Starting cross validation
2023-05-25 19:35:42,478:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:43,233:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,234:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,235:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:43,236:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,241:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,242:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,243:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:43,244:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,258:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,259:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,260:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:43,261:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,273:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,274:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,274:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,275:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:43,276:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,276:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:43,277:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:43,278:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:44,149:INFO:Calculating mean and std
2023-05-25 19:35:44,150:INFO:Creating metrics dataframe
2023-05-25 19:35:44,470:INFO:Uploading results into container
2023-05-25 19:35:44,470:INFO:Uploading model into container now
2023-05-25 19:35:44,470:INFO:_master_model_container: 12
2023-05-25 19:35:44,470:INFO:_display_container: 2
2023-05-25 19:35:44,471:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2953, verbose=0, warm_start=False)
2023-05-25 19:35:44,471:INFO:create_model() successfully completed......................................
2023-05-25 19:35:44,642:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:44,643:INFO:Creating metrics dataframe
2023-05-25 19:35:44,655:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 19:35:44,655:INFO:Total runtime is 0.5189958135286967 minutes
2023-05-25 19:35:44,658:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:44,659:INFO:Initializing create_model()
2023-05-25 19:35:44,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:44,659:INFO:Checking exceptions
2023-05-25 19:35:44,659:INFO:Importing libraries
2023-05-25 19:35:44,659:INFO:Copying training dataset
2023-05-25 19:35:44,664:INFO:Defining folds
2023-05-25 19:35:44,664:INFO:Declaring metric variables
2023-05-25 19:35:44,667:INFO:Importing untrained model
2023-05-25 19:35:44,670:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 19:35:44,676:INFO:Starting cross validation
2023-05-25 19:35:44,679:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:46,398:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:46,399:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:46,400:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:46,403:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:46,404:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:46,405:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:46,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:46,435:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:46,437:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:46,445:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:46,446:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:46,448:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:47,192:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:47,193:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:47,194:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:47,333:INFO:Calculating mean and std
2023-05-25 19:35:47,334:INFO:Creating metrics dataframe
2023-05-25 19:35:47,663:INFO:Uploading results into container
2023-05-25 19:35:47,664:INFO:Uploading model into container now
2023-05-25 19:35:47,664:INFO:_master_model_container: 13
2023-05-25 19:35:47,664:INFO:_display_container: 2
2023-05-25 19:35:47,664:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2953, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 19:35:47,664:INFO:create_model() successfully completed......................................
2023-05-25 19:35:47,825:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:47,825:INFO:Creating metrics dataframe
2023-05-25 19:35:47,836:INFO:Initializing Dummy Classifier
2023-05-25 19:35:47,836:INFO:Total runtime is 0.5720136245091757 minutes
2023-05-25 19:35:47,838:INFO:SubProcess create_model() called ==================================
2023-05-25 19:35:47,838:INFO:Initializing create_model()
2023-05-25 19:35:47,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE7283C820>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:47,839:INFO:Checking exceptions
2023-05-25 19:35:47,839:INFO:Importing libraries
2023-05-25 19:35:47,839:INFO:Copying training dataset
2023-05-25 19:35:47,844:INFO:Defining folds
2023-05-25 19:35:47,844:INFO:Declaring metric variables
2023-05-25 19:35:47,848:INFO:Importing untrained model
2023-05-25 19:35:47,850:INFO:Dummy Classifier Imported successfully
2023-05-25 19:35:47,856:INFO:Starting cross validation
2023-05-25 19:35:47,857:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:35:48,089:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,090:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,090:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,091:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,091:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:48,092:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,092:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:48,092:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,105:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:48,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,109:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:48,110:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,120:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,121:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:48,122:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:35:48,122:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:35:49,016:INFO:Calculating mean and std
2023-05-25 19:35:49,018:INFO:Creating metrics dataframe
2023-05-25 19:35:49,330:INFO:Uploading results into container
2023-05-25 19:35:49,330:INFO:Uploading model into container now
2023-05-25 19:35:49,331:INFO:_master_model_container: 14
2023-05-25 19:35:49,331:INFO:_display_container: 2
2023-05-25 19:35:49,331:INFO:DummyClassifier(constant=None, random_state=2953, strategy='prior')
2023-05-25 19:35:49,331:INFO:create_model() successfully completed......................................
2023-05-25 19:35:49,500:INFO:SubProcess create_model() end ==================================
2023-05-25 19:35:49,500:INFO:Creating metrics dataframe
2023-05-25 19:35:49,520:INFO:Initializing create_model()
2023-05-25 19:35:49,520:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE5ED2FAC0>, estimator=LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:35:49,520:INFO:Checking exceptions
2023-05-25 19:35:49,521:INFO:Importing libraries
2023-05-25 19:35:49,521:INFO:Copying training dataset
2023-05-25 19:35:49,526:INFO:Defining folds
2023-05-25 19:35:49,526:INFO:Declaring metric variables
2023-05-25 19:35:49,527:INFO:Importing untrained model
2023-05-25 19:35:49,527:INFO:Declaring custom model
2023-05-25 19:35:49,527:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 19:35:49,528:INFO:Cross validation set to False
2023-05-25 19:35:49,528:INFO:Fitting Model
2023-05-25 19:35:49,864:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 19:35:49,865:INFO:create_model() successfully completed......................................
2023-05-25 19:35:50,054:INFO:_master_model_container: 14
2023-05-25 19:35:50,055:INFO:_display_container: 2
2023-05-25 19:35:50,055:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 19:35:50,055:INFO:compare_models() successfully completed......................................
2023-05-25 19:36:37,327:INFO:PyCaret ClassificationExperiment
2023-05-25 19:36:37,327:INFO:Logging name: clf-default-name
2023-05-25 19:36:37,327:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 19:36:37,327:INFO:version 3.0.2
2023-05-25 19:36:37,327:INFO:Initializing setup()
2023-05-25 19:36:37,327:INFO:self.USI: 0d59
2023-05-25 19:36:37,328:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 19:36:37,328:INFO:Checking environment
2023-05-25 19:36:37,328:INFO:python_version: 3.10.9
2023-05-25 19:36:37,328:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 19:36:37,328:INFO:machine: AMD64
2023-05-25 19:36:37,328:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 19:36:37,328:INFO:Memory: svmem(total=17112055808, available=5259399168, percent=69.3, used=11852656640, free=5259399168)
2023-05-25 19:36:37,328:INFO:Physical Core: 8
2023-05-25 19:36:37,328:INFO:Logical Core: 16
2023-05-25 19:36:37,328:INFO:Checking libraries
2023-05-25 19:36:37,328:INFO:System:
2023-05-25 19:36:37,328:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 19:36:37,328:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 19:36:37,328:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 19:36:37,328:INFO:PyCaret required dependencies:
2023-05-25 19:36:37,328:INFO:                 pip: 22.3.1
2023-05-25 19:36:37,328:INFO:          setuptools: 65.6.3
2023-05-25 19:36:37,328:INFO:             pycaret: 3.0.2
2023-05-25 19:36:37,328:INFO:             IPython: 8.10.0
2023-05-25 19:36:37,328:INFO:          ipywidgets: 7.6.5
2023-05-25 19:36:37,328:INFO:                tqdm: 4.64.1
2023-05-25 19:36:37,328:INFO:               numpy: 1.23.5
2023-05-25 19:36:37,328:INFO:              pandas: 1.5.3
2023-05-25 19:36:37,328:INFO:              jinja2: 3.1.2
2023-05-25 19:36:37,328:INFO:               scipy: 1.10.0
2023-05-25 19:36:37,328:INFO:              joblib: 1.1.1
2023-05-25 19:36:37,328:INFO:             sklearn: 1.2.1
2023-05-25 19:36:37,328:INFO:                pyod: 1.0.9
2023-05-25 19:36:37,328:INFO:            imblearn: 0.10.1
2023-05-25 19:36:37,328:INFO:   category_encoders: 2.6.1
2023-05-25 19:36:37,328:INFO:            lightgbm: 3.3.5
2023-05-25 19:36:37,328:INFO:               numba: 0.56.4
2023-05-25 19:36:37,328:INFO:            requests: 2.28.1
2023-05-25 19:36:37,328:INFO:          matplotlib: 3.7.0
2023-05-25 19:36:37,328:INFO:          scikitplot: 0.3.7
2023-05-25 19:36:37,328:INFO:         yellowbrick: 1.5
2023-05-25 19:36:37,329:INFO:              plotly: 5.9.0
2023-05-25 19:36:37,329:INFO:             kaleido: 0.2.1
2023-05-25 19:36:37,329:INFO:         statsmodels: 0.13.5
2023-05-25 19:36:37,329:INFO:              sktime: 0.17.0
2023-05-25 19:36:37,329:INFO:               tbats: 1.1.3
2023-05-25 19:36:37,329:INFO:            pmdarima: 2.0.3
2023-05-25 19:36:37,329:INFO:              psutil: 5.9.0
2023-05-25 19:36:37,329:INFO:PyCaret optional dependencies:
2023-05-25 19:36:37,329:INFO:                shap: Not installed
2023-05-25 19:36:37,329:INFO:           interpret: Not installed
2023-05-25 19:36:37,329:INFO:                umap: Not installed
2023-05-25 19:36:37,329:INFO:    pandas_profiling: Not installed
2023-05-25 19:36:37,329:INFO:  explainerdashboard: Not installed
2023-05-25 19:36:37,329:INFO:             autoviz: Not installed
2023-05-25 19:36:37,329:INFO:           fairlearn: Not installed
2023-05-25 19:36:37,329:INFO:             xgboost: Not installed
2023-05-25 19:36:37,329:INFO:            catboost: Not installed
2023-05-25 19:36:37,329:INFO:              kmodes: Not installed
2023-05-25 19:36:37,329:INFO:             mlxtend: Not installed
2023-05-25 19:36:37,329:INFO:       statsforecast: Not installed
2023-05-25 19:36:37,329:INFO:        tune_sklearn: Not installed
2023-05-25 19:36:37,329:INFO:                 ray: Not installed
2023-05-25 19:36:37,329:INFO:            hyperopt: Not installed
2023-05-25 19:36:37,329:INFO:              optuna: Not installed
2023-05-25 19:36:37,330:INFO:               skopt: Not installed
2023-05-25 19:36:37,330:INFO:              mlflow: Not installed
2023-05-25 19:36:37,330:INFO:              gradio: Not installed
2023-05-25 19:36:37,330:INFO:             fastapi: Not installed
2023-05-25 19:36:37,330:INFO:             uvicorn: Not installed
2023-05-25 19:36:37,330:INFO:              m2cgen: Not installed
2023-05-25 19:36:37,330:INFO:           evidently: Not installed
2023-05-25 19:36:37,330:INFO:               fugue: Not installed
2023-05-25 19:36:37,330:INFO:           streamlit: Not installed
2023-05-25 19:36:37,330:INFO:             prophet: Not installed
2023-05-25 19:36:37,330:INFO:None
2023-05-25 19:36:37,330:INFO:Set up data.
2023-05-25 19:36:37,337:INFO:Set up train/test split.
2023-05-25 19:36:37,344:INFO:Set up index.
2023-05-25 19:36:37,344:INFO:Set up folding strategy.
2023-05-25 19:36:37,344:INFO:Assigning column types.
2023-05-25 19:36:37,348:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 19:36:37,386:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:36:37,387:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:36:37,410:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:37,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:37,450:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:36:37,450:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:36:37,475:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:37,475:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:37,475:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 19:36:37,514:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:36:37,537:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:37,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:37,576:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:36:37,600:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:37,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:37,601:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 19:36:37,664:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:37,664:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:37,731:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:37,731:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:37,732:INFO:Preparing preprocessing pipeline...
2023-05-25 19:36:37,733:INFO:Set up label encoding.
2023-05-25 19:36:37,733:INFO:Set up simple imputation.
2023-05-25 19:36:37,736:INFO:Set up encoding of categorical features.
2023-05-25 19:36:37,807:INFO:Finished creating preprocessing pipeline.
2023-05-25 19:36:37,814:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['APM', 'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'Num...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours'],
                                    transformer=TargetEncoder(cols=['Age',
                                                                    'HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 19:36:37,814:INFO:Creating final display dataframe.
2023-05-25 19:36:38,044:INFO:Setup _display_container:                     Description                                           Value
0                    Session id                                            6713
1                        Target                                     LeagueIndex
2                   Target type                                      Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6, 8: 7
4           Original data shape                                      (3395, 19)
5        Transformed data shape                                      (3395, 19)
6   Transformed train set shape                                      (2716, 19)
7    Transformed test set shape                                       (679, 19)
8              Numeric features                                              15
9          Categorical features                                               3
10                   Preprocess                                            True
11              Imputation type                                          simple
12           Numeric imputation                                            mean
13       Categorical imputation                                            mode
14     Maximum one-hot encoding                                              25
15              Encoding method                                            None
16               Fold Generator                                 StratifiedKFold
17                  Fold Number                                               5
18                     CPU Jobs                                              -1
19                      Use GPU                                           False
20               Log Experiment                                           False
21              Experiment Name                                clf-default-name
22                          USI                                            0d59
2023-05-25 19:36:38,112:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:38,113:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:38,176:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:38,176:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:36:38,176:INFO:setup() successfully completed in 1.06s...............
2023-05-25 19:36:41,262:INFO:Initializing compare_models()
2023-05-25 19:36:41,262:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 19:36:41,262:INFO:Checking exceptions
2023-05-25 19:36:41,265:INFO:Preparing display monitor
2023-05-25 19:36:41,288:INFO:Initializing Logistic Regression
2023-05-25 19:36:41,288:INFO:Total runtime is 0.0 minutes
2023-05-25 19:36:41,291:INFO:SubProcess create_model() called ==================================
2023-05-25 19:36:41,291:INFO:Initializing create_model()
2023-05-25 19:36:41,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:36:41,291:INFO:Checking exceptions
2023-05-25 19:36:41,291:INFO:Importing libraries
2023-05-25 19:36:41,291:INFO:Copying training dataset
2023-05-25 19:36:41,295:INFO:Defining folds
2023-05-25 19:36:41,295:INFO:Declaring metric variables
2023-05-25 19:36:41,298:INFO:Importing untrained model
2023-05-25 19:36:41,301:INFO:Logistic Regression Imported successfully
2023-05-25 19:36:41,306:INFO:Starting cross validation
2023-05-25 19:36:41,310:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:36:41,890:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:36:41,892:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:36:41,912:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:36:41,916:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:36:41,923:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:36:42,024:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,025:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,026:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,026:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,027:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,028:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,045:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,049:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,051:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:42,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,054:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:42,944:INFO:Calculating mean and std
2023-05-25 19:36:42,945:INFO:Creating metrics dataframe
2023-05-25 19:36:43,274:INFO:Uploading results into container
2023-05-25 19:36:43,274:INFO:Uploading model into container now
2023-05-25 19:36:43,275:INFO:_master_model_container: 1
2023-05-25 19:36:43,275:INFO:_display_container: 2
2023-05-25 19:36:43,275:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6713, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:36:43,275:INFO:create_model() successfully completed......................................
2023-05-25 19:36:43,436:INFO:SubProcess create_model() end ==================================
2023-05-25 19:36:43,436:INFO:Creating metrics dataframe
2023-05-25 19:36:43,445:INFO:Initializing K Neighbors Classifier
2023-05-25 19:36:43,446:INFO:Total runtime is 0.0359658678372701 minutes
2023-05-25 19:36:43,449:INFO:SubProcess create_model() called ==================================
2023-05-25 19:36:43,449:INFO:Initializing create_model()
2023-05-25 19:36:43,449:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:36:43,449:INFO:Checking exceptions
2023-05-25 19:36:43,449:INFO:Importing libraries
2023-05-25 19:36:43,449:INFO:Copying training dataset
2023-05-25 19:36:43,454:INFO:Defining folds
2023-05-25 19:36:43,454:INFO:Declaring metric variables
2023-05-25 19:36:43,457:INFO:Importing untrained model
2023-05-25 19:36:43,460:INFO:K Neighbors Classifier Imported successfully
2023-05-25 19:36:43,467:INFO:Starting cross validation
2023-05-25 19:36:43,468:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:36:43,742:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,744:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,745:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,798:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,800:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,801:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,801:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,803:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,804:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:43,806:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,814:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,816:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,818:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,823:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,825:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:43,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:43,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:44,703:INFO:Calculating mean and std
2023-05-25 19:36:44,704:INFO:Creating metrics dataframe
2023-05-25 19:36:45,018:INFO:Uploading results into container
2023-05-25 19:36:45,019:INFO:Uploading model into container now
2023-05-25 19:36:45,019:INFO:_master_model_container: 2
2023-05-25 19:36:45,019:INFO:_display_container: 2
2023-05-25 19:36:45,019:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 19:36:45,019:INFO:create_model() successfully completed......................................
2023-05-25 19:36:45,188:INFO:SubProcess create_model() end ==================================
2023-05-25 19:36:45,188:INFO:Creating metrics dataframe
2023-05-25 19:36:45,197:INFO:Initializing Naive Bayes
2023-05-25 19:36:45,197:INFO:Total runtime is 0.0651497999827067 minutes
2023-05-25 19:36:45,199:INFO:SubProcess create_model() called ==================================
2023-05-25 19:36:45,200:INFO:Initializing create_model()
2023-05-25 19:36:45,200:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:36:45,200:INFO:Checking exceptions
2023-05-25 19:36:45,200:INFO:Importing libraries
2023-05-25 19:36:45,200:INFO:Copying training dataset
2023-05-25 19:36:45,204:INFO:Defining folds
2023-05-25 19:36:45,205:INFO:Declaring metric variables
2023-05-25 19:36:45,208:INFO:Importing untrained model
2023-05-25 19:36:45,211:INFO:Naive Bayes Imported successfully
2023-05-25 19:36:45,217:INFO:Starting cross validation
2023-05-25 19:36:45,218:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:36:45,427:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,429:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,441:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,443:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,444:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,444:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,444:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,445:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,449:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,450:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:45,451:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:46,333:INFO:Calculating mean and std
2023-05-25 19:36:46,333:INFO:Creating metrics dataframe
2023-05-25 19:36:46,652:INFO:Uploading results into container
2023-05-25 19:36:46,652:INFO:Uploading model into container now
2023-05-25 19:36:46,653:INFO:_master_model_container: 3
2023-05-25 19:36:46,653:INFO:_display_container: 2
2023-05-25 19:36:46,653:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 19:36:46,653:INFO:create_model() successfully completed......................................
2023-05-25 19:36:46,811:INFO:SubProcess create_model() end ==================================
2023-05-25 19:36:46,811:INFO:Creating metrics dataframe
2023-05-25 19:36:46,820:INFO:Initializing Decision Tree Classifier
2023-05-25 19:36:46,820:INFO:Total runtime is 0.09221377372741699 minutes
2023-05-25 19:36:46,823:INFO:SubProcess create_model() called ==================================
2023-05-25 19:36:46,823:INFO:Initializing create_model()
2023-05-25 19:36:46,823:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:36:46,823:INFO:Checking exceptions
2023-05-25 19:36:46,823:INFO:Importing libraries
2023-05-25 19:36:46,823:INFO:Copying training dataset
2023-05-25 19:36:46,829:INFO:Defining folds
2023-05-25 19:36:46,829:INFO:Declaring metric variables
2023-05-25 19:36:46,833:INFO:Importing untrained model
2023-05-25 19:36:46,836:INFO:Decision Tree Classifier Imported successfully
2023-05-25 19:36:46,841:INFO:Starting cross validation
2023-05-25 19:36:46,842:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:36:47,087:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,087:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,088:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,088:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,088:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,089:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,089:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,091:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,092:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,102:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,102:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,104:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,104:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,105:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:47,993:INFO:Calculating mean and std
2023-05-25 19:36:47,994:INFO:Creating metrics dataframe
2023-05-25 19:36:48,315:INFO:Uploading results into container
2023-05-25 19:36:48,316:INFO:Uploading model into container now
2023-05-25 19:36:48,316:INFO:_master_model_container: 4
2023-05-25 19:36:48,316:INFO:_display_container: 2
2023-05-25 19:36:48,316:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=6713, splitter='best')
2023-05-25 19:36:48,316:INFO:create_model() successfully completed......................................
2023-05-25 19:36:48,472:INFO:SubProcess create_model() end ==================================
2023-05-25 19:36:48,473:INFO:Creating metrics dataframe
2023-05-25 19:36:48,482:INFO:Initializing SVM - Linear Kernel
2023-05-25 19:36:48,482:INFO:Total runtime is 0.1199116309483846 minutes
2023-05-25 19:36:48,485:INFO:SubProcess create_model() called ==================================
2023-05-25 19:36:48,485:INFO:Initializing create_model()
2023-05-25 19:36:48,485:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:36:48,485:INFO:Checking exceptions
2023-05-25 19:36:48,485:INFO:Importing libraries
2023-05-25 19:36:48,485:INFO:Copying training dataset
2023-05-25 19:36:48,490:INFO:Defining folds
2023-05-25 19:36:48,490:INFO:Declaring metric variables
2023-05-25 19:36:48,493:INFO:Importing untrained model
2023-05-25 19:36:48,496:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 19:36:48,502:INFO:Starting cross validation
2023-05-25 19:36:48,503:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:36:48,714:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:36:48,715:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,715:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:36:48,716:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,716:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,716:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:48,717:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,717:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,718:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:48,718:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,725:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:36:48,726:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,727:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,728:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:48,729:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,733:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:36:48,733:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,735:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,735:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:48,736:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,745:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:36:48,745:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,747:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:48,748:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:48,749:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:49,635:INFO:Calculating mean and std
2023-05-25 19:36:49,636:INFO:Creating metrics dataframe
2023-05-25 19:36:49,958:INFO:Uploading results into container
2023-05-25 19:36:49,958:INFO:Uploading model into container now
2023-05-25 19:36:49,958:INFO:_master_model_container: 5
2023-05-25 19:36:49,959:INFO:_display_container: 2
2023-05-25 19:36:49,959:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=6713, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 19:36:49,959:INFO:create_model() successfully completed......................................
2023-05-25 19:36:50,124:INFO:SubProcess create_model() end ==================================
2023-05-25 19:36:50,125:INFO:Creating metrics dataframe
2023-05-25 19:36:50,134:INFO:Initializing Ridge Classifier
2023-05-25 19:36:50,135:INFO:Total runtime is 0.14745450019836426 minutes
2023-05-25 19:36:50,137:INFO:SubProcess create_model() called ==================================
2023-05-25 19:36:50,137:INFO:Initializing create_model()
2023-05-25 19:36:50,137:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:36:50,137:INFO:Checking exceptions
2023-05-25 19:36:50,137:INFO:Importing libraries
2023-05-25 19:36:50,137:INFO:Copying training dataset
2023-05-25 19:36:50,142:INFO:Defining folds
2023-05-25 19:36:50,143:INFO:Declaring metric variables
2023-05-25 19:36:50,146:INFO:Importing untrained model
2023-05-25 19:36:50,149:INFO:Ridge Classifier Imported successfully
2023-05-25 19:36:50,156:INFO:Starting cross validation
2023-05-25 19:36:50,156:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:36:50,313:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:36:50,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,315:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:50,316:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:36:50,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,318:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,319:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:50,320:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,324:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:36:50,325:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,327:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,327:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:50,328:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,328:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:36:50,328:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,329:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,330:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:50,331:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,333:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:36:50,334:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,335:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:50,336:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:50,336:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:51,220:INFO:Calculating mean and std
2023-05-25 19:36:51,221:INFO:Creating metrics dataframe
2023-05-25 19:36:51,538:INFO:Uploading results into container
2023-05-25 19:36:51,538:INFO:Uploading model into container now
2023-05-25 19:36:51,539:INFO:_master_model_container: 6
2023-05-25 19:36:51,539:INFO:_display_container: 2
2023-05-25 19:36:51,539:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=6713, solver='auto',
                tol=0.0001)
2023-05-25 19:36:51,539:INFO:create_model() successfully completed......................................
2023-05-25 19:36:51,695:INFO:SubProcess create_model() end ==================================
2023-05-25 19:36:51,695:INFO:Creating metrics dataframe
2023-05-25 19:36:51,705:INFO:Initializing Random Forest Classifier
2023-05-25 19:36:51,705:INFO:Total runtime is 0.1736310919125875 minutes
2023-05-25 19:36:51,709:INFO:SubProcess create_model() called ==================================
2023-05-25 19:36:51,709:INFO:Initializing create_model()
2023-05-25 19:36:51,709:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:36:51,709:INFO:Checking exceptions
2023-05-25 19:36:51,709:INFO:Importing libraries
2023-05-25 19:36:51,709:INFO:Copying training dataset
2023-05-25 19:36:51,715:INFO:Defining folds
2023-05-25 19:36:51,715:INFO:Declaring metric variables
2023-05-25 19:36:51,718:INFO:Importing untrained model
2023-05-25 19:36:51,721:INFO:Random Forest Classifier Imported successfully
2023-05-25 19:36:51,728:INFO:Starting cross validation
2023-05-25 19:36:51,729:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:36:52,612:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,613:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,614:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,615:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,616:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,617:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:52,617:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,617:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,619:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,620:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:52,621:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,632:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,633:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,634:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:52,635:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,648:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:52,648:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:52,649:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:53,514:INFO:Calculating mean and std
2023-05-25 19:36:53,515:INFO:Creating metrics dataframe
2023-05-25 19:36:53,837:INFO:Uploading results into container
2023-05-25 19:36:53,837:INFO:Uploading model into container now
2023-05-25 19:36:53,838:INFO:_master_model_container: 7
2023-05-25 19:36:53,838:INFO:_display_container: 2
2023-05-25 19:36:53,838:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=6713, verbose=0, warm_start=False)
2023-05-25 19:36:53,838:INFO:create_model() successfully completed......................................
2023-05-25 19:36:54,005:INFO:SubProcess create_model() end ==================================
2023-05-25 19:36:54,005:INFO:Creating metrics dataframe
2023-05-25 19:36:54,016:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 19:36:54,016:INFO:Total runtime is 0.2121404012044271 minutes
2023-05-25 19:36:54,020:INFO:SubProcess create_model() called ==================================
2023-05-25 19:36:54,020:INFO:Initializing create_model()
2023-05-25 19:36:54,020:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:36:54,020:INFO:Checking exceptions
2023-05-25 19:36:54,020:INFO:Importing libraries
2023-05-25 19:36:54,020:INFO:Copying training dataset
2023-05-25 19:36:54,025:INFO:Defining folds
2023-05-25 19:36:54,025:INFO:Declaring metric variables
2023-05-25 19:36:54,028:INFO:Importing untrained model
2023-05-25 19:36:54,030:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 19:36:54,036:INFO:Starting cross validation
2023-05-25 19:36:54,038:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:36:54,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:36:54,153:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:36:54,154:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:36:54,156:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:36:54,156:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:36:54,252:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:54,253:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:54,255:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:54,262:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:54,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:54,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:54,264:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:54,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:54,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:54,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:54,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:54,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:54,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:54,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:54,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:54,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:55,178:INFO:Calculating mean and std
2023-05-25 19:36:55,179:INFO:Creating metrics dataframe
2023-05-25 19:36:55,500:INFO:Uploading results into container
2023-05-25 19:36:55,501:INFO:Uploading model into container now
2023-05-25 19:36:55,501:INFO:_master_model_container: 8
2023-05-25 19:36:55,501:INFO:_display_container: 2
2023-05-25 19:36:55,502:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 19:36:55,502:INFO:create_model() successfully completed......................................
2023-05-25 19:36:55,666:INFO:SubProcess create_model() end ==================================
2023-05-25 19:36:55,666:INFO:Creating metrics dataframe
2023-05-25 19:36:55,676:INFO:Initializing Ada Boost Classifier
2023-05-25 19:36:55,676:INFO:Total runtime is 0.23981359402338664 minutes
2023-05-25 19:36:55,679:INFO:SubProcess create_model() called ==================================
2023-05-25 19:36:55,680:INFO:Initializing create_model()
2023-05-25 19:36:55,680:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:36:55,680:INFO:Checking exceptions
2023-05-25 19:36:55,680:INFO:Importing libraries
2023-05-25 19:36:55,680:INFO:Copying training dataset
2023-05-25 19:36:55,685:INFO:Defining folds
2023-05-25 19:36:55,685:INFO:Declaring metric variables
2023-05-25 19:36:55,688:INFO:Importing untrained model
2023-05-25 19:36:55,690:INFO:Ada Boost Classifier Imported successfully
2023-05-25 19:36:55,696:INFO:Starting cross validation
2023-05-25 19:36:55,697:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:36:56,303:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,304:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,305:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:56,305:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,305:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,306:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,308:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:56,308:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,315:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,317:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:56,317:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,340:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,342:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,342:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:56,343:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,349:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,350:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:56,351:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:36:56,351:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:36:57,212:INFO:Calculating mean and std
2023-05-25 19:36:57,213:INFO:Creating metrics dataframe
2023-05-25 19:36:57,533:INFO:Uploading results into container
2023-05-25 19:36:57,533:INFO:Uploading model into container now
2023-05-25 19:36:57,534:INFO:_master_model_container: 9
2023-05-25 19:36:57,534:INFO:_display_container: 2
2023-05-25 19:36:57,534:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=6713)
2023-05-25 19:36:57,534:INFO:create_model() successfully completed......................................
2023-05-25 19:36:57,694:INFO:SubProcess create_model() end ==================================
2023-05-25 19:36:57,694:INFO:Creating metrics dataframe
2023-05-25 19:36:57,704:INFO:Initializing Gradient Boosting Classifier
2023-05-25 19:36:57,704:INFO:Total runtime is 0.27360897858937583 minutes
2023-05-25 19:36:57,706:INFO:SubProcess create_model() called ==================================
2023-05-25 19:36:57,706:INFO:Initializing create_model()
2023-05-25 19:36:57,708:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:36:57,708:INFO:Checking exceptions
2023-05-25 19:36:57,708:INFO:Importing libraries
2023-05-25 19:36:57,708:INFO:Copying training dataset
2023-05-25 19:36:57,713:INFO:Defining folds
2023-05-25 19:36:57,713:INFO:Declaring metric variables
2023-05-25 19:36:57,716:INFO:Importing untrained model
2023-05-25 19:36:57,718:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 19:36:57,724:INFO:Starting cross validation
2023-05-25 19:36:57,725:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:37:07,078:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,079:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,080:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:37:07,080:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,094:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,095:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,096:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,150:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,152:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,153:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,166:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,167:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,169:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,218:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,219:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:07,220:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,030:INFO:Calculating mean and std
2023-05-25 19:37:08,031:INFO:Creating metrics dataframe
2023-05-25 19:37:08,364:INFO:Uploading results into container
2023-05-25 19:37:08,365:INFO:Uploading model into container now
2023-05-25 19:37:08,365:INFO:_master_model_container: 10
2023-05-25 19:37:08,366:INFO:_display_container: 2
2023-05-25 19:37:08,366:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=6713, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 19:37:08,366:INFO:create_model() successfully completed......................................
2023-05-25 19:37:08,534:INFO:SubProcess create_model() end ==================================
2023-05-25 19:37:08,534:INFO:Creating metrics dataframe
2023-05-25 19:37:08,546:INFO:Initializing Linear Discriminant Analysis
2023-05-25 19:37:08,547:INFO:Total runtime is 0.4543315609296163 minutes
2023-05-25 19:37:08,551:INFO:SubProcess create_model() called ==================================
2023-05-25 19:37:08,551:INFO:Initializing create_model()
2023-05-25 19:37:08,551:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:37:08,551:INFO:Checking exceptions
2023-05-25 19:37:08,551:INFO:Importing libraries
2023-05-25 19:37:08,552:INFO:Copying training dataset
2023-05-25 19:37:08,557:INFO:Defining folds
2023-05-25 19:37:08,557:INFO:Declaring metric variables
2023-05-25 19:37:08,561:INFO:Importing untrained model
2023-05-25 19:37:08,565:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 19:37:08,571:INFO:Starting cross validation
2023-05-25 19:37:08,572:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:37:08,831:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,832:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,833:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,833:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,834:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,834:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,834:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,835:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,835:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,836:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,838:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:08,839:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:09,832:INFO:Calculating mean and std
2023-05-25 19:37:09,833:INFO:Creating metrics dataframe
2023-05-25 19:37:10,156:INFO:Uploading results into container
2023-05-25 19:37:10,156:INFO:Uploading model into container now
2023-05-25 19:37:10,156:INFO:_master_model_container: 11
2023-05-25 19:37:10,156:INFO:_display_container: 2
2023-05-25 19:37:10,157:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 19:37:10,157:INFO:create_model() successfully completed......................................
2023-05-25 19:37:10,350:INFO:SubProcess create_model() end ==================================
2023-05-25 19:37:10,350:INFO:Creating metrics dataframe
2023-05-25 19:37:10,362:INFO:Initializing Extra Trees Classifier
2023-05-25 19:37:10,362:INFO:Total runtime is 0.4845762451489766 minutes
2023-05-25 19:37:10,365:INFO:SubProcess create_model() called ==================================
2023-05-25 19:37:10,365:INFO:Initializing create_model()
2023-05-25 19:37:10,365:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:37:10,365:INFO:Checking exceptions
2023-05-25 19:37:10,365:INFO:Importing libraries
2023-05-25 19:37:10,365:INFO:Copying training dataset
2023-05-25 19:37:10,371:INFO:Defining folds
2023-05-25 19:37:10,371:INFO:Declaring metric variables
2023-05-25 19:37:10,374:INFO:Importing untrained model
2023-05-25 19:37:10,378:INFO:Extra Trees Classifier Imported successfully
2023-05-25 19:37:10,384:INFO:Starting cross validation
2023-05-25 19:37:10,385:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:37:11,155:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,157:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,158:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:37:11,159:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,160:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,162:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,163:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:37:11,164:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,166:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,167:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,167:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:37:11,168:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,173:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,174:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,175:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:37:11,176:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,187:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,188:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:11,189:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:37:11,189:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:12,078:INFO:Calculating mean and std
2023-05-25 19:37:12,079:INFO:Creating metrics dataframe
2023-05-25 19:37:12,399:INFO:Uploading results into container
2023-05-25 19:37:12,400:INFO:Uploading model into container now
2023-05-25 19:37:12,400:INFO:_master_model_container: 12
2023-05-25 19:37:12,400:INFO:_display_container: 2
2023-05-25 19:37:12,400:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=6713, verbose=0, warm_start=False)
2023-05-25 19:37:12,400:INFO:create_model() successfully completed......................................
2023-05-25 19:37:12,558:INFO:SubProcess create_model() end ==================================
2023-05-25 19:37:12,559:INFO:Creating metrics dataframe
2023-05-25 19:37:12,569:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 19:37:12,569:INFO:Total runtime is 0.5213616569836934 minutes
2023-05-25 19:37:12,572:INFO:SubProcess create_model() called ==================================
2023-05-25 19:37:12,572:INFO:Initializing create_model()
2023-05-25 19:37:12,572:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:37:12,572:INFO:Checking exceptions
2023-05-25 19:37:12,572:INFO:Importing libraries
2023-05-25 19:37:12,572:INFO:Copying training dataset
2023-05-25 19:37:12,578:INFO:Defining folds
2023-05-25 19:37:12,578:INFO:Declaring metric variables
2023-05-25 19:37:12,581:INFO:Importing untrained model
2023-05-25 19:37:12,584:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 19:37:12,589:INFO:Starting cross validation
2023-05-25 19:37:12,590:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:37:14,152:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,154:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,155:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,168:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,169:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,170:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,177:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,177:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,180:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,197:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,199:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,199:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:37:14,200:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,243:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,244:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:14,245:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:37:14,245:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,111:INFO:Calculating mean and std
2023-05-25 19:37:15,112:INFO:Creating metrics dataframe
2023-05-25 19:37:15,447:INFO:Uploading results into container
2023-05-25 19:37:15,448:INFO:Uploading model into container now
2023-05-25 19:37:15,448:INFO:_master_model_container: 13
2023-05-25 19:37:15,448:INFO:_display_container: 2
2023-05-25 19:37:15,448:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=6713, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 19:37:15,448:INFO:create_model() successfully completed......................................
2023-05-25 19:37:15,616:INFO:SubProcess create_model() end ==================================
2023-05-25 19:37:15,616:INFO:Creating metrics dataframe
2023-05-25 19:37:15,628:INFO:Initializing Dummy Classifier
2023-05-25 19:37:15,628:INFO:Total runtime is 0.5723486264546712 minutes
2023-05-25 19:37:15,631:INFO:SubProcess create_model() called ==================================
2023-05-25 19:37:15,631:INFO:Initializing create_model()
2023-05-25 19:37:15,631:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE71EB0310>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:37:15,631:INFO:Checking exceptions
2023-05-25 19:37:15,631:INFO:Importing libraries
2023-05-25 19:37:15,631:INFO:Copying training dataset
2023-05-25 19:37:15,636:INFO:Defining folds
2023-05-25 19:37:15,636:INFO:Declaring metric variables
2023-05-25 19:37:15,639:INFO:Importing untrained model
2023-05-25 19:37:15,642:INFO:Dummy Classifier Imported successfully
2023-05-25 19:37:15,649:INFO:Starting cross validation
2023-05-25 19:37:15,650:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:37:15,854:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,856:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,856:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:37:15,857:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,857:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:37:15,857:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,858:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,858:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,859:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:37:15,860:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,866:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,867:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,867:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,868:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:37:15,868:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,868:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:15,869:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:37:15,869:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:37:16,795:INFO:Calculating mean and std
2023-05-25 19:37:16,796:INFO:Creating metrics dataframe
2023-05-25 19:37:17,128:INFO:Uploading results into container
2023-05-25 19:37:17,128:INFO:Uploading model into container now
2023-05-25 19:37:17,128:INFO:_master_model_container: 14
2023-05-25 19:37:17,128:INFO:_display_container: 2
2023-05-25 19:37:17,129:INFO:DummyClassifier(constant=None, random_state=6713, strategy='prior')
2023-05-25 19:37:17,129:INFO:create_model() successfully completed......................................
2023-05-25 19:37:17,288:INFO:SubProcess create_model() end ==================================
2023-05-25 19:37:17,288:INFO:Creating metrics dataframe
2023-05-25 19:37:17,307:INFO:Initializing create_model()
2023-05-25 19:37:17,307:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE706EEB90>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6713, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:37:17,307:INFO:Checking exceptions
2023-05-25 19:37:17,308:INFO:Importing libraries
2023-05-25 19:37:17,308:INFO:Copying training dataset
2023-05-25 19:37:17,312:INFO:Defining folds
2023-05-25 19:37:17,312:INFO:Declaring metric variables
2023-05-25 19:37:17,313:INFO:Importing untrained model
2023-05-25 19:37:17,313:INFO:Declaring custom model
2023-05-25 19:37:17,313:INFO:Logistic Regression Imported successfully
2023-05-25 19:37:17,314:INFO:Cross validation set to False
2023-05-25 19:37:17,314:INFO:Fitting Model
2023-05-25 19:37:17,974:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:37:18,214:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6713, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:37:18,214:INFO:create_model() successfully completed......................................
2023-05-25 19:37:18,397:INFO:_master_model_container: 14
2023-05-25 19:37:18,398:INFO:_display_container: 2
2023-05-25 19:37:18,398:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=6713, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:37:18,398:INFO:compare_models() successfully completed......................................
2023-05-25 19:38:10,200:INFO:PyCaret ClassificationExperiment
2023-05-25 19:38:10,200:INFO:Logging name: clf-default-name
2023-05-25 19:38:10,200:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 19:38:10,201:INFO:version 3.0.2
2023-05-25 19:38:10,201:INFO:Initializing setup()
2023-05-25 19:38:10,201:INFO:self.USI: f5e6
2023-05-25 19:38:10,201:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 19:38:10,201:INFO:Checking environment
2023-05-25 19:38:10,201:INFO:python_version: 3.10.9
2023-05-25 19:38:10,201:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 19:38:10,201:INFO:machine: AMD64
2023-05-25 19:38:10,201:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 19:38:10,201:INFO:Memory: svmem(total=17112055808, available=5274443776, percent=69.2, used=11837612032, free=5274443776)
2023-05-25 19:38:10,201:INFO:Physical Core: 8
2023-05-25 19:38:10,201:INFO:Logical Core: 16
2023-05-25 19:38:10,201:INFO:Checking libraries
2023-05-25 19:38:10,201:INFO:System:
2023-05-25 19:38:10,201:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 19:38:10,201:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 19:38:10,201:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 19:38:10,201:INFO:PyCaret required dependencies:
2023-05-25 19:38:10,201:INFO:                 pip: 22.3.1
2023-05-25 19:38:10,202:INFO:          setuptools: 65.6.3
2023-05-25 19:38:10,202:INFO:             pycaret: 3.0.2
2023-05-25 19:38:10,202:INFO:             IPython: 8.10.0
2023-05-25 19:38:10,202:INFO:          ipywidgets: 7.6.5
2023-05-25 19:38:10,202:INFO:                tqdm: 4.64.1
2023-05-25 19:38:10,202:INFO:               numpy: 1.23.5
2023-05-25 19:38:10,202:INFO:              pandas: 1.5.3
2023-05-25 19:38:10,202:INFO:              jinja2: 3.1.2
2023-05-25 19:38:10,202:INFO:               scipy: 1.10.0
2023-05-25 19:38:10,202:INFO:              joblib: 1.1.1
2023-05-25 19:38:10,202:INFO:             sklearn: 1.2.1
2023-05-25 19:38:10,202:INFO:                pyod: 1.0.9
2023-05-25 19:38:10,202:INFO:            imblearn: 0.10.1
2023-05-25 19:38:10,202:INFO:   category_encoders: 2.6.1
2023-05-25 19:38:10,202:INFO:            lightgbm: 3.3.5
2023-05-25 19:38:10,202:INFO:               numba: 0.56.4
2023-05-25 19:38:10,202:INFO:            requests: 2.28.1
2023-05-25 19:38:10,202:INFO:          matplotlib: 3.7.0
2023-05-25 19:38:10,202:INFO:          scikitplot: 0.3.7
2023-05-25 19:38:10,202:INFO:         yellowbrick: 1.5
2023-05-25 19:38:10,202:INFO:              plotly: 5.9.0
2023-05-25 19:38:10,202:INFO:             kaleido: 0.2.1
2023-05-25 19:38:10,202:INFO:         statsmodels: 0.13.5
2023-05-25 19:38:10,202:INFO:              sktime: 0.17.0
2023-05-25 19:38:10,202:INFO:               tbats: 1.1.3
2023-05-25 19:38:10,203:INFO:            pmdarima: 2.0.3
2023-05-25 19:38:10,203:INFO:              psutil: 5.9.0
2023-05-25 19:38:10,203:INFO:PyCaret optional dependencies:
2023-05-25 19:38:10,203:INFO:                shap: Not installed
2023-05-25 19:38:10,203:INFO:           interpret: Not installed
2023-05-25 19:38:10,203:INFO:                umap: Not installed
2023-05-25 19:38:10,203:INFO:    pandas_profiling: Not installed
2023-05-25 19:38:10,203:INFO:  explainerdashboard: Not installed
2023-05-25 19:38:10,203:INFO:             autoviz: Not installed
2023-05-25 19:38:10,203:INFO:           fairlearn: Not installed
2023-05-25 19:38:10,203:INFO:             xgboost: Not installed
2023-05-25 19:38:10,203:INFO:            catboost: Not installed
2023-05-25 19:38:10,203:INFO:              kmodes: Not installed
2023-05-25 19:38:10,203:INFO:             mlxtend: Not installed
2023-05-25 19:38:10,203:INFO:       statsforecast: Not installed
2023-05-25 19:38:10,203:INFO:        tune_sklearn: Not installed
2023-05-25 19:38:10,203:INFO:                 ray: Not installed
2023-05-25 19:38:10,203:INFO:            hyperopt: Not installed
2023-05-25 19:38:10,203:INFO:              optuna: Not installed
2023-05-25 19:38:10,203:INFO:               skopt: Not installed
2023-05-25 19:38:10,203:INFO:              mlflow: Not installed
2023-05-25 19:38:10,203:INFO:              gradio: Not installed
2023-05-25 19:38:10,203:INFO:             fastapi: Not installed
2023-05-25 19:38:10,204:INFO:             uvicorn: Not installed
2023-05-25 19:38:10,204:INFO:              m2cgen: Not installed
2023-05-25 19:38:10,204:INFO:           evidently: Not installed
2023-05-25 19:38:10,204:INFO:               fugue: Not installed
2023-05-25 19:38:10,204:INFO:           streamlit: Not installed
2023-05-25 19:38:10,204:INFO:             prophet: Not installed
2023-05-25 19:38:10,204:INFO:None
2023-05-25 19:38:10,204:INFO:Set up data.
2023-05-25 19:38:10,212:INFO:Set up train/test split.
2023-05-25 19:38:10,217:INFO:Set up index.
2023-05-25 19:38:10,218:INFO:Set up folding strategy.
2023-05-25 19:38:10,218:INFO:Assigning column types.
2023-05-25 19:38:10,221:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 19:38:10,261:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:38:10,263:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:38:10,288:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:10,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:10,329:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:38:10,329:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:38:10,355:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:10,355:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:10,355:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 19:38:10,394:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:38:10,420:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:10,420:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:10,462:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:38:10,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:10,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:10,487:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 19:38:10,552:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:10,552:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:10,617:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:10,618:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:10,619:INFO:Preparing preprocessing pipeline...
2023-05-25 19:38:10,620:INFO:Set up label encoding.
2023-05-25 19:38:10,620:INFO:Set up simple imputation.
2023-05-25 19:38:10,622:INFO:Set up encoding of categorical features.
2023-05-25 19:38:10,691:INFO:Finished creating preprocessing pipeline.
2023-05-25 19:38:10,696:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['APM', 'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'Gap...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours'],
                                    transformer=TargetEncoder(cols=['Age',
                                                                    'HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 19:38:10,696:INFO:Creating final display dataframe.
2023-05-25 19:38:10,909:INFO:Setup _display_container:                     Description                                           Value
0                    Session id                                            7153
1                        Target                                     LeagueIndex
2                   Target type                                      Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6, 8: 7
4           Original data shape                                      (3395, 17)
5        Transformed data shape                                      (3395, 17)
6   Transformed train set shape                                      (2716, 17)
7    Transformed test set shape                                       (679, 17)
8              Numeric features                                              13
9          Categorical features                                               3
10                   Preprocess                                            True
11              Imputation type                                          simple
12           Numeric imputation                                            mean
13       Categorical imputation                                            mode
14     Maximum one-hot encoding                                              25
15              Encoding method                                            None
16               Fold Generator                                 StratifiedKFold
17                  Fold Number                                               5
18                     CPU Jobs                                              -1
19                      Use GPU                                           False
20               Log Experiment                                           False
21              Experiment Name                                clf-default-name
22                          USI                                            f5e6
2023-05-25 19:38:10,980:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:10,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:11,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:11,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:38:11,044:INFO:setup() successfully completed in 1.08s...............
2023-05-25 19:38:13,960:INFO:Initializing compare_models()
2023-05-25 19:38:13,960:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 19:38:13,960:INFO:Checking exceptions
2023-05-25 19:38:13,964:INFO:Preparing display monitor
2023-05-25 19:38:13,986:INFO:Initializing Logistic Regression
2023-05-25 19:38:13,986:INFO:Total runtime is 0.0 minutes
2023-05-25 19:38:13,990:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:13,990:INFO:Initializing create_model()
2023-05-25 19:38:13,990:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:13,990:INFO:Checking exceptions
2023-05-25 19:38:13,990:INFO:Importing libraries
2023-05-25 19:38:13,990:INFO:Copying training dataset
2023-05-25 19:38:13,994:INFO:Defining folds
2023-05-25 19:38:13,994:INFO:Declaring metric variables
2023-05-25 19:38:13,997:INFO:Importing untrained model
2023-05-25 19:38:14,000:INFO:Logistic Regression Imported successfully
2023-05-25 19:38:14,006:INFO:Starting cross validation
2023-05-25 19:38:14,010:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:14,545:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:38:14,556:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:38:14,559:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:38:14,560:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:38:14,576:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:38:14,676:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,678:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,679:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:14,679:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,685:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,686:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,686:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,687:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,689:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,690:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,692:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,694:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,704:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,705:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:14,706:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:14,706:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:15,642:INFO:Calculating mean and std
2023-05-25 19:38:15,644:INFO:Creating metrics dataframe
2023-05-25 19:38:15,968:INFO:Uploading results into container
2023-05-25 19:38:15,969:INFO:Uploading model into container now
2023-05-25 19:38:15,969:INFO:_master_model_container: 1
2023-05-25 19:38:15,969:INFO:_display_container: 2
2023-05-25 19:38:15,969:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7153, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:38:15,969:INFO:create_model() successfully completed......................................
2023-05-25 19:38:16,124:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:16,124:INFO:Creating metrics dataframe
2023-05-25 19:38:16,133:INFO:Initializing K Neighbors Classifier
2023-05-25 19:38:16,133:INFO:Total runtime is 0.03578591744105021 minutes
2023-05-25 19:38:16,136:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:16,136:INFO:Initializing create_model()
2023-05-25 19:38:16,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:16,136:INFO:Checking exceptions
2023-05-25 19:38:16,136:INFO:Importing libraries
2023-05-25 19:38:16,136:INFO:Copying training dataset
2023-05-25 19:38:16,141:INFO:Defining folds
2023-05-25 19:38:16,141:INFO:Declaring metric variables
2023-05-25 19:38:16,145:INFO:Importing untrained model
2023-05-25 19:38:16,148:INFO:K Neighbors Classifier Imported successfully
2023-05-25 19:38:16,154:INFO:Starting cross validation
2023-05-25 19:38:16,155:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:16,426:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,428:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,429:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,429:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,432:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,434:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,435:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,443:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,445:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,446:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,473:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,474:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:16,475:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:17,365:INFO:Calculating mean and std
2023-05-25 19:38:17,366:INFO:Creating metrics dataframe
2023-05-25 19:38:17,695:INFO:Uploading results into container
2023-05-25 19:38:17,696:INFO:Uploading model into container now
2023-05-25 19:38:17,696:INFO:_master_model_container: 2
2023-05-25 19:38:17,696:INFO:_display_container: 2
2023-05-25 19:38:17,696:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 19:38:17,696:INFO:create_model() successfully completed......................................
2023-05-25 19:38:17,853:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:17,853:INFO:Creating metrics dataframe
2023-05-25 19:38:17,862:INFO:Initializing Naive Bayes
2023-05-25 19:38:17,863:INFO:Total runtime is 0.06462257703145345 minutes
2023-05-25 19:38:17,865:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:17,866:INFO:Initializing create_model()
2023-05-25 19:38:17,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:17,866:INFO:Checking exceptions
2023-05-25 19:38:17,866:INFO:Importing libraries
2023-05-25 19:38:17,866:INFO:Copying training dataset
2023-05-25 19:38:17,870:INFO:Defining folds
2023-05-25 19:38:17,871:INFO:Declaring metric variables
2023-05-25 19:38:17,874:INFO:Importing untrained model
2023-05-25 19:38:17,876:INFO:Naive Bayes Imported successfully
2023-05-25 19:38:17,882:INFO:Starting cross validation
2023-05-25 19:38:17,883:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:18,093:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,095:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,096:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,096:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,097:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,098:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,110:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,110:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,111:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,111:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,113:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,113:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,115:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:18,116:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,040:INFO:Calculating mean and std
2023-05-25 19:38:19,042:INFO:Creating metrics dataframe
2023-05-25 19:38:19,375:INFO:Uploading results into container
2023-05-25 19:38:19,376:INFO:Uploading model into container now
2023-05-25 19:38:19,376:INFO:_master_model_container: 3
2023-05-25 19:38:19,376:INFO:_display_container: 2
2023-05-25 19:38:19,377:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 19:38:19,377:INFO:create_model() successfully completed......................................
2023-05-25 19:38:19,546:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:19,546:INFO:Creating metrics dataframe
2023-05-25 19:38:19,555:INFO:Initializing Decision Tree Classifier
2023-05-25 19:38:19,555:INFO:Total runtime is 0.09282890160878499 minutes
2023-05-25 19:38:19,558:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:19,558:INFO:Initializing create_model()
2023-05-25 19:38:19,558:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:19,558:INFO:Checking exceptions
2023-05-25 19:38:19,558:INFO:Importing libraries
2023-05-25 19:38:19,558:INFO:Copying training dataset
2023-05-25 19:38:19,563:INFO:Defining folds
2023-05-25 19:38:19,563:INFO:Declaring metric variables
2023-05-25 19:38:19,567:INFO:Importing untrained model
2023-05-25 19:38:19,570:INFO:Decision Tree Classifier Imported successfully
2023-05-25 19:38:19,576:INFO:Starting cross validation
2023-05-25 19:38:19,577:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:19,811:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,812:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,813:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,816:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,817:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,819:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,821:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,822:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,825:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,828:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,828:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,829:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:19,831:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:20,772:INFO:Calculating mean and std
2023-05-25 19:38:20,773:INFO:Creating metrics dataframe
2023-05-25 19:38:21,106:INFO:Uploading results into container
2023-05-25 19:38:21,106:INFO:Uploading model into container now
2023-05-25 19:38:21,107:INFO:_master_model_container: 4
2023-05-25 19:38:21,107:INFO:_display_container: 2
2023-05-25 19:38:21,107:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7153, splitter='best')
2023-05-25 19:38:21,107:INFO:create_model() successfully completed......................................
2023-05-25 19:38:21,275:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:21,275:INFO:Creating metrics dataframe
2023-05-25 19:38:21,286:INFO:Initializing SVM - Linear Kernel
2023-05-25 19:38:21,286:INFO:Total runtime is 0.12167530854543049 minutes
2023-05-25 19:38:21,289:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:21,290:INFO:Initializing create_model()
2023-05-25 19:38:21,290:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:21,290:INFO:Checking exceptions
2023-05-25 19:38:21,290:INFO:Importing libraries
2023-05-25 19:38:21,290:INFO:Copying training dataset
2023-05-25 19:38:21,296:INFO:Defining folds
2023-05-25 19:38:21,296:INFO:Declaring metric variables
2023-05-25 19:38:21,299:INFO:Importing untrained model
2023-05-25 19:38:21,303:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 19:38:21,309:INFO:Starting cross validation
2023-05-25 19:38:21,310:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:21,541:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:38:21,542:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,542:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:38:21,543:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,543:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,544:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,544:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:21,544:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,545:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:21,545:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,552:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:38:21,553:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,554:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,555:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:21,555:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,558:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:38:21,558:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,559:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,560:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:21,561:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,562:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:38:21,563:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,564:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:21,565:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:21,565:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:22,463:INFO:Calculating mean and std
2023-05-25 19:38:22,464:INFO:Creating metrics dataframe
2023-05-25 19:38:22,789:INFO:Uploading results into container
2023-05-25 19:38:22,790:INFO:Uploading model into container now
2023-05-25 19:38:22,790:INFO:_master_model_container: 5
2023-05-25 19:38:22,790:INFO:_display_container: 2
2023-05-25 19:38:22,791:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7153, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 19:38:22,791:INFO:create_model() successfully completed......................................
2023-05-25 19:38:22,950:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:22,950:INFO:Creating metrics dataframe
2023-05-25 19:38:22,959:INFO:Initializing Ridge Classifier
2023-05-25 19:38:22,959:INFO:Total runtime is 0.14955707391103107 minutes
2023-05-25 19:38:22,962:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:22,962:INFO:Initializing create_model()
2023-05-25 19:38:22,962:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:22,962:INFO:Checking exceptions
2023-05-25 19:38:22,962:INFO:Importing libraries
2023-05-25 19:38:22,962:INFO:Copying training dataset
2023-05-25 19:38:22,968:INFO:Defining folds
2023-05-25 19:38:22,968:INFO:Declaring metric variables
2023-05-25 19:38:22,971:INFO:Importing untrained model
2023-05-25 19:38:22,974:INFO:Ridge Classifier Imported successfully
2023-05-25 19:38:22,980:INFO:Starting cross validation
2023-05-25 19:38:22,981:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:23,154:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:38:23,155:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,156:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,156:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:23,157:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,159:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:38:23,160:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,161:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,162:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:38:23,162:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:23,162:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,163:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,164:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,165:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:23,165:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,185:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:38:23,186:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,187:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,188:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:23,189:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,192:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:38:23,193:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,194:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:23,195:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:23,196:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:24,138:INFO:Calculating mean and std
2023-05-25 19:38:24,138:INFO:Creating metrics dataframe
2023-05-25 19:38:24,481:INFO:Uploading results into container
2023-05-25 19:38:24,481:INFO:Uploading model into container now
2023-05-25 19:38:24,482:INFO:_master_model_container: 6
2023-05-25 19:38:24,482:INFO:_display_container: 2
2023-05-25 19:38:24,482:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7153, solver='auto',
                tol=0.0001)
2023-05-25 19:38:24,482:INFO:create_model() successfully completed......................................
2023-05-25 19:38:24,652:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:24,653:INFO:Creating metrics dataframe
2023-05-25 19:38:24,663:INFO:Initializing Random Forest Classifier
2023-05-25 19:38:24,663:INFO:Total runtime is 0.17796132564544676 minutes
2023-05-25 19:38:24,666:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:24,666:INFO:Initializing create_model()
2023-05-25 19:38:24,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:24,666:INFO:Checking exceptions
2023-05-25 19:38:24,666:INFO:Importing libraries
2023-05-25 19:38:24,666:INFO:Copying training dataset
2023-05-25 19:38:24,672:INFO:Defining folds
2023-05-25 19:38:24,672:INFO:Declaring metric variables
2023-05-25 19:38:24,675:INFO:Importing untrained model
2023-05-25 19:38:24,679:INFO:Random Forest Classifier Imported successfully
2023-05-25 19:38:24,684:INFO:Starting cross validation
2023-05-25 19:38:24,686:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:25,568:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,570:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,570:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,571:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:25,571:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,571:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,571:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,572:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:25,572:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,572:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,572:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,573:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:25,573:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,574:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,574:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:25,575:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,580:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:25,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:25,584:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:26,541:INFO:Calculating mean and std
2023-05-25 19:38:26,542:INFO:Creating metrics dataframe
2023-05-25 19:38:26,883:INFO:Uploading results into container
2023-05-25 19:38:26,883:INFO:Uploading model into container now
2023-05-25 19:38:26,884:INFO:_master_model_container: 7
2023-05-25 19:38:26,884:INFO:_display_container: 2
2023-05-25 19:38:26,884:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7153, verbose=0, warm_start=False)
2023-05-25 19:38:26,884:INFO:create_model() successfully completed......................................
2023-05-25 19:38:27,042:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:27,042:INFO:Creating metrics dataframe
2023-05-25 19:38:27,052:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 19:38:27,052:INFO:Total runtime is 0.2177790363629659 minutes
2023-05-25 19:38:27,055:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:27,055:INFO:Initializing create_model()
2023-05-25 19:38:27,055:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:27,056:INFO:Checking exceptions
2023-05-25 19:38:27,056:INFO:Importing libraries
2023-05-25 19:38:27,056:INFO:Copying training dataset
2023-05-25 19:38:27,061:INFO:Defining folds
2023-05-25 19:38:27,062:INFO:Declaring metric variables
2023-05-25 19:38:27,065:INFO:Importing untrained model
2023-05-25 19:38:27,067:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 19:38:27,073:INFO:Starting cross validation
2023-05-25 19:38:27,074:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:27,185:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:38:27,188:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:38:27,191:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:38:27,195:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:38:27,205:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:38:27,293:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,294:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,295:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,296:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,296:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,298:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,312:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,313:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:27,315:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,315:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,315:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:27,317:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:28,244:INFO:Calculating mean and std
2023-05-25 19:38:28,245:INFO:Creating metrics dataframe
2023-05-25 19:38:28,587:INFO:Uploading results into container
2023-05-25 19:38:28,587:INFO:Uploading model into container now
2023-05-25 19:38:28,588:INFO:_master_model_container: 8
2023-05-25 19:38:28,588:INFO:_display_container: 2
2023-05-25 19:38:28,588:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 19:38:28,588:INFO:create_model() successfully completed......................................
2023-05-25 19:38:28,757:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:28,758:INFO:Creating metrics dataframe
2023-05-25 19:38:28,767:INFO:Initializing Ada Boost Classifier
2023-05-25 19:38:28,767:INFO:Total runtime is 0.24636304775873819 minutes
2023-05-25 19:38:28,770:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:28,770:INFO:Initializing create_model()
2023-05-25 19:38:28,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:28,771:INFO:Checking exceptions
2023-05-25 19:38:28,771:INFO:Importing libraries
2023-05-25 19:38:28,771:INFO:Copying training dataset
2023-05-25 19:38:28,775:INFO:Defining folds
2023-05-25 19:38:28,775:INFO:Declaring metric variables
2023-05-25 19:38:28,779:INFO:Importing untrained model
2023-05-25 19:38:28,782:INFO:Ada Boost Classifier Imported successfully
2023-05-25 19:38:28,788:INFO:Starting cross validation
2023-05-25 19:38:28,789:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:29,353:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,353:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,354:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,354:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,354:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,355:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:29,355:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,355:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:29,355:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,356:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,356:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:29,356:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,357:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,358:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,359:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:29,359:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,362:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,363:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:29,365:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:30,340:INFO:Calculating mean and std
2023-05-25 19:38:30,341:INFO:Creating metrics dataframe
2023-05-25 19:38:30,670:INFO:Uploading results into container
2023-05-25 19:38:30,670:INFO:Uploading model into container now
2023-05-25 19:38:30,671:INFO:_master_model_container: 9
2023-05-25 19:38:30,671:INFO:_display_container: 2
2023-05-25 19:38:30,671:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7153)
2023-05-25 19:38:30,671:INFO:create_model() successfully completed......................................
2023-05-25 19:38:30,824:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:30,825:INFO:Creating metrics dataframe
2023-05-25 19:38:30,836:INFO:Initializing Gradient Boosting Classifier
2023-05-25 19:38:30,836:INFO:Total runtime is 0.2808368603388468 minutes
2023-05-25 19:38:30,838:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:30,839:INFO:Initializing create_model()
2023-05-25 19:38:30,839:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:30,839:INFO:Checking exceptions
2023-05-25 19:38:30,839:INFO:Importing libraries
2023-05-25 19:38:30,839:INFO:Copying training dataset
2023-05-25 19:38:30,844:INFO:Defining folds
2023-05-25 19:38:30,844:INFO:Declaring metric variables
2023-05-25 19:38:30,848:INFO:Importing untrained model
2023-05-25 19:38:30,851:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 19:38:30,857:INFO:Starting cross validation
2023-05-25 19:38:30,858:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:38,940:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,940:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,941:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,942:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,943:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,943:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,964:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,965:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,968:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,969:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,976:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:38,978:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:39,955:INFO:Calculating mean and std
2023-05-25 19:38:39,956:INFO:Creating metrics dataframe
2023-05-25 19:38:40,289:INFO:Uploading results into container
2023-05-25 19:38:40,289:INFO:Uploading model into container now
2023-05-25 19:38:40,290:INFO:_master_model_container: 10
2023-05-25 19:38:40,290:INFO:_display_container: 2
2023-05-25 19:38:40,290:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7153, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 19:38:40,290:INFO:create_model() successfully completed......................................
2023-05-25 19:38:40,458:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:40,458:INFO:Creating metrics dataframe
2023-05-25 19:38:40,468:INFO:Initializing Linear Discriminant Analysis
2023-05-25 19:38:40,468:INFO:Total runtime is 0.44137655496597283 minutes
2023-05-25 19:38:40,471:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:40,472:INFO:Initializing create_model()
2023-05-25 19:38:40,472:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:40,472:INFO:Checking exceptions
2023-05-25 19:38:40,472:INFO:Importing libraries
2023-05-25 19:38:40,472:INFO:Copying training dataset
2023-05-25 19:38:40,477:INFO:Defining folds
2023-05-25 19:38:40,477:INFO:Declaring metric variables
2023-05-25 19:38:40,480:INFO:Importing untrained model
2023-05-25 19:38:40,483:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 19:38:40,488:INFO:Starting cross validation
2023-05-25 19:38:40,489:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:40,704:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,705:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,706:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,717:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,718:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,720:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,721:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,723:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,724:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,724:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,725:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,726:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,740:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,741:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:40,743:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:41,645:INFO:Calculating mean and std
2023-05-25 19:38:41,646:INFO:Creating metrics dataframe
2023-05-25 19:38:41,982:INFO:Uploading results into container
2023-05-25 19:38:41,983:INFO:Uploading model into container now
2023-05-25 19:38:41,983:INFO:_master_model_container: 11
2023-05-25 19:38:41,983:INFO:_display_container: 2
2023-05-25 19:38:41,983:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 19:38:41,983:INFO:create_model() successfully completed......................................
2023-05-25 19:38:42,140:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:42,140:INFO:Creating metrics dataframe
2023-05-25 19:38:42,151:INFO:Initializing Extra Trees Classifier
2023-05-25 19:38:42,152:INFO:Total runtime is 0.46943549315134675 minutes
2023-05-25 19:38:42,154:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:42,155:INFO:Initializing create_model()
2023-05-25 19:38:42,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:42,155:INFO:Checking exceptions
2023-05-25 19:38:42,155:INFO:Importing libraries
2023-05-25 19:38:42,155:INFO:Copying training dataset
2023-05-25 19:38:42,159:INFO:Defining folds
2023-05-25 19:38:42,159:INFO:Declaring metric variables
2023-05-25 19:38:42,162:INFO:Importing untrained model
2023-05-25 19:38:42,165:INFO:Extra Trees Classifier Imported successfully
2023-05-25 19:38:42,171:INFO:Starting cross validation
2023-05-25 19:38:42,172:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:42,910:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,911:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,912:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,912:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,913:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,913:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:42,914:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,916:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,918:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,919:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:42,919:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,936:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,937:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,938:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:42,939:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,953:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:42,954:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:42,954:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:43,906:INFO:Calculating mean and std
2023-05-25 19:38:43,907:INFO:Creating metrics dataframe
2023-05-25 19:38:44,265:INFO:Uploading results into container
2023-05-25 19:38:44,267:INFO:Uploading model into container now
2023-05-25 19:38:44,267:INFO:_master_model_container: 12
2023-05-25 19:38:44,267:INFO:_display_container: 2
2023-05-25 19:38:44,268:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7153, verbose=0, warm_start=False)
2023-05-25 19:38:44,268:INFO:create_model() successfully completed......................................
2023-05-25 19:38:44,439:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:44,439:INFO:Creating metrics dataframe
2023-05-25 19:38:44,452:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 19:38:44,452:INFO:Total runtime is 0.5077661275863646 minutes
2023-05-25 19:38:44,455:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:44,455:INFO:Initializing create_model()
2023-05-25 19:38:44,455:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:44,455:INFO:Checking exceptions
2023-05-25 19:38:44,455:INFO:Importing libraries
2023-05-25 19:38:44,455:INFO:Copying training dataset
2023-05-25 19:38:44,459:INFO:Defining folds
2023-05-25 19:38:44,460:INFO:Declaring metric variables
2023-05-25 19:38:44,463:INFO:Importing untrained model
2023-05-25 19:38:44,466:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 19:38:44,472:INFO:Starting cross validation
2023-05-25 19:38:44,473:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:45,962:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:45,963:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:45,964:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:45,965:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:45,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:45,967:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:45,968:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:45,969:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:45,980:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:45,981:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:45,982:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:46,002:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:46,003:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:46,003:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:46,004:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:46,700:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:46,701:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:46,702:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:46,955:INFO:Calculating mean and std
2023-05-25 19:38:46,956:INFO:Creating metrics dataframe
2023-05-25 19:38:47,307:INFO:Uploading results into container
2023-05-25 19:38:47,308:INFO:Uploading model into container now
2023-05-25 19:38:47,308:INFO:_master_model_container: 13
2023-05-25 19:38:47,308:INFO:_display_container: 2
2023-05-25 19:38:47,308:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7153, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 19:38:47,308:INFO:create_model() successfully completed......................................
2023-05-25 19:38:47,467:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:47,467:INFO:Creating metrics dataframe
2023-05-25 19:38:47,479:INFO:Initializing Dummy Classifier
2023-05-25 19:38:47,479:INFO:Total runtime is 0.55821662346522 minutes
2023-05-25 19:38:47,482:INFO:SubProcess create_model() called ==================================
2023-05-25 19:38:47,482:INFO:Initializing create_model()
2023-05-25 19:38:47,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE706EEB90>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:47,482:INFO:Checking exceptions
2023-05-25 19:38:47,482:INFO:Importing libraries
2023-05-25 19:38:47,482:INFO:Copying training dataset
2023-05-25 19:38:47,487:INFO:Defining folds
2023-05-25 19:38:47,487:INFO:Declaring metric variables
2023-05-25 19:38:47,490:INFO:Importing untrained model
2023-05-25 19:38:47,493:INFO:Dummy Classifier Imported successfully
2023-05-25 19:38:47,499:INFO:Starting cross validation
2023-05-25 19:38:47,500:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:38:47,710:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,712:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,712:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:47,713:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,726:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,727:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,727:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,728:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,728:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,728:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,729:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:47,729:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:47,729:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,729:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,730:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:47,731:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,753:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,754:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:47,755:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:38:47,755:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:38:48,693:INFO:Calculating mean and std
2023-05-25 19:38:48,694:INFO:Creating metrics dataframe
2023-05-25 19:38:49,032:INFO:Uploading results into container
2023-05-25 19:38:49,033:INFO:Uploading model into container now
2023-05-25 19:38:49,033:INFO:_master_model_container: 14
2023-05-25 19:38:49,033:INFO:_display_container: 2
2023-05-25 19:38:49,033:INFO:DummyClassifier(constant=None, random_state=7153, strategy='prior')
2023-05-25 19:38:49,034:INFO:create_model() successfully completed......................................
2023-05-25 19:38:49,206:INFO:SubProcess create_model() end ==================================
2023-05-25 19:38:49,206:INFO:Creating metrics dataframe
2023-05-25 19:38:49,226:INFO:Initializing create_model()
2023-05-25 19:38:49,226:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE6EF060B0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7153, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:38:49,226:INFO:Checking exceptions
2023-05-25 19:38:49,227:INFO:Importing libraries
2023-05-25 19:38:49,227:INFO:Copying training dataset
2023-05-25 19:38:49,231:INFO:Defining folds
2023-05-25 19:38:49,231:INFO:Declaring metric variables
2023-05-25 19:38:49,231:INFO:Importing untrained model
2023-05-25 19:38:49,231:INFO:Declaring custom model
2023-05-25 19:38:49,232:INFO:Logistic Regression Imported successfully
2023-05-25 19:38:49,233:INFO:Cross validation set to False
2023-05-25 19:38:49,233:INFO:Fitting Model
2023-05-25 19:38:49,894:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:38:50,150:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7153, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:38:50,150:INFO:create_model() successfully completed......................................
2023-05-25 19:38:50,342:INFO:_master_model_container: 14
2023-05-25 19:38:50,342:INFO:_display_container: 2
2023-05-25 19:38:50,342:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7153, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:38:50,342:INFO:compare_models() successfully completed......................................
2023-05-25 19:48:06,513:INFO:PyCaret ClassificationExperiment
2023-05-25 19:48:06,513:INFO:Logging name: clf-default-name
2023-05-25 19:48:06,513:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 19:48:06,513:INFO:version 3.0.2
2023-05-25 19:48:06,513:INFO:Initializing setup()
2023-05-25 19:48:06,513:INFO:self.USI: da0b
2023-05-25 19:48:06,513:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 19:48:06,513:INFO:Checking environment
2023-05-25 19:48:06,513:INFO:python_version: 3.10.9
2023-05-25 19:48:06,513:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 19:48:06,513:INFO:machine: AMD64
2023-05-25 19:48:06,513:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 19:48:06,513:INFO:Memory: svmem(total=17112055808, available=7633678336, percent=55.4, used=9478377472, free=7633678336)
2023-05-25 19:48:06,513:INFO:Physical Core: 8
2023-05-25 19:48:06,514:INFO:Logical Core: 16
2023-05-25 19:48:06,514:INFO:Checking libraries
2023-05-25 19:48:06,514:INFO:System:
2023-05-25 19:48:06,514:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 19:48:06,514:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 19:48:06,514:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 19:48:06,514:INFO:PyCaret required dependencies:
2023-05-25 19:48:06,514:INFO:                 pip: 22.3.1
2023-05-25 19:48:06,514:INFO:          setuptools: 65.6.3
2023-05-25 19:48:06,514:INFO:             pycaret: 3.0.2
2023-05-25 19:48:06,514:INFO:             IPython: 8.10.0
2023-05-25 19:48:06,514:INFO:          ipywidgets: 7.6.5
2023-05-25 19:48:06,514:INFO:                tqdm: 4.64.1
2023-05-25 19:48:06,514:INFO:               numpy: 1.23.5
2023-05-25 19:48:06,514:INFO:              pandas: 1.5.3
2023-05-25 19:48:06,514:INFO:              jinja2: 3.1.2
2023-05-25 19:48:06,514:INFO:               scipy: 1.10.0
2023-05-25 19:48:06,514:INFO:              joblib: 1.1.1
2023-05-25 19:48:06,514:INFO:             sklearn: 1.2.1
2023-05-25 19:48:06,514:INFO:                pyod: 1.0.9
2023-05-25 19:48:06,514:INFO:            imblearn: 0.10.1
2023-05-25 19:48:06,514:INFO:   category_encoders: 2.6.1
2023-05-25 19:48:06,514:INFO:            lightgbm: 3.3.5
2023-05-25 19:48:06,515:INFO:               numba: 0.56.4
2023-05-25 19:48:06,515:INFO:            requests: 2.28.1
2023-05-25 19:48:06,515:INFO:          matplotlib: 3.7.0
2023-05-25 19:48:06,515:INFO:          scikitplot: 0.3.7
2023-05-25 19:48:06,515:INFO:         yellowbrick: 1.5
2023-05-25 19:48:06,515:INFO:              plotly: 5.9.0
2023-05-25 19:48:06,515:INFO:             kaleido: 0.2.1
2023-05-25 19:48:06,515:INFO:         statsmodels: 0.13.5
2023-05-25 19:48:06,515:INFO:              sktime: 0.17.0
2023-05-25 19:48:06,515:INFO:               tbats: 1.1.3
2023-05-25 19:48:06,515:INFO:            pmdarima: 2.0.3
2023-05-25 19:48:06,515:INFO:              psutil: 5.9.0
2023-05-25 19:48:06,515:INFO:PyCaret optional dependencies:
2023-05-25 19:48:06,516:INFO:                shap: Not installed
2023-05-25 19:48:06,516:INFO:           interpret: Not installed
2023-05-25 19:48:06,516:INFO:                umap: Not installed
2023-05-25 19:48:06,516:INFO:    pandas_profiling: Not installed
2023-05-25 19:48:06,516:INFO:  explainerdashboard: Not installed
2023-05-25 19:48:06,516:INFO:             autoviz: Not installed
2023-05-25 19:48:06,516:INFO:           fairlearn: Not installed
2023-05-25 19:48:06,516:INFO:             xgboost: Not installed
2023-05-25 19:48:06,516:INFO:            catboost: Not installed
2023-05-25 19:48:06,516:INFO:              kmodes: Not installed
2023-05-25 19:48:06,516:INFO:             mlxtend: Not installed
2023-05-25 19:48:06,516:INFO:       statsforecast: Not installed
2023-05-25 19:48:06,516:INFO:        tune_sklearn: Not installed
2023-05-25 19:48:06,516:INFO:                 ray: Not installed
2023-05-25 19:48:06,516:INFO:            hyperopt: Not installed
2023-05-25 19:48:06,516:INFO:              optuna: Not installed
2023-05-25 19:48:06,516:INFO:               skopt: Not installed
2023-05-25 19:48:06,516:INFO:              mlflow: Not installed
2023-05-25 19:48:06,516:INFO:              gradio: Not installed
2023-05-25 19:48:06,516:INFO:             fastapi: Not installed
2023-05-25 19:48:06,516:INFO:             uvicorn: Not installed
2023-05-25 19:48:06,516:INFO:              m2cgen: Not installed
2023-05-25 19:48:06,516:INFO:           evidently: Not installed
2023-05-25 19:48:06,516:INFO:               fugue: Not installed
2023-05-25 19:48:06,517:INFO:           streamlit: Not installed
2023-05-25 19:48:06,517:INFO:             prophet: Not installed
2023-05-25 19:48:06,517:INFO:None
2023-05-25 19:48:06,517:INFO:Set up data.
2023-05-25 19:48:06,524:INFO:Set up train/test split.
2023-05-25 19:48:06,529:INFO:Set up index.
2023-05-25 19:48:06,529:INFO:Set up folding strategy.
2023-05-25 19:48:06,529:INFO:Assigning column types.
2023-05-25 19:48:25,798:INFO:PyCaret ClassificationExperiment
2023-05-25 19:48:25,798:INFO:Logging name: clf-default-name
2023-05-25 19:48:25,798:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 19:48:25,798:INFO:version 3.0.2
2023-05-25 19:48:25,798:INFO:Initializing setup()
2023-05-25 19:48:25,798:INFO:self.USI: 65b8
2023-05-25 19:48:25,798:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 19:48:25,798:INFO:Checking environment
2023-05-25 19:48:25,798:INFO:python_version: 3.10.9
2023-05-25 19:48:25,798:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 19:48:25,798:INFO:machine: AMD64
2023-05-25 19:48:25,798:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 19:48:25,798:INFO:Memory: svmem(total=17112055808, available=7632056320, percent=55.4, used=9479999488, free=7632056320)
2023-05-25 19:48:25,798:INFO:Physical Core: 8
2023-05-25 19:48:25,799:INFO:Logical Core: 16
2023-05-25 19:48:25,799:INFO:Checking libraries
2023-05-25 19:48:25,799:INFO:System:
2023-05-25 19:48:25,799:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 19:48:25,799:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 19:48:25,799:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 19:48:25,799:INFO:PyCaret required dependencies:
2023-05-25 19:48:25,799:INFO:                 pip: 22.3.1
2023-05-25 19:48:25,799:INFO:          setuptools: 65.6.3
2023-05-25 19:48:25,799:INFO:             pycaret: 3.0.2
2023-05-25 19:48:25,799:INFO:             IPython: 8.10.0
2023-05-25 19:48:25,799:INFO:          ipywidgets: 7.6.5
2023-05-25 19:48:25,799:INFO:                tqdm: 4.64.1
2023-05-25 19:48:25,799:INFO:               numpy: 1.23.5
2023-05-25 19:48:25,799:INFO:              pandas: 1.5.3
2023-05-25 19:48:25,799:INFO:              jinja2: 3.1.2
2023-05-25 19:48:25,799:INFO:               scipy: 1.10.0
2023-05-25 19:48:25,799:INFO:              joblib: 1.1.1
2023-05-25 19:48:25,799:INFO:             sklearn: 1.2.1
2023-05-25 19:48:25,799:INFO:                pyod: 1.0.9
2023-05-25 19:48:25,799:INFO:            imblearn: 0.10.1
2023-05-25 19:48:25,799:INFO:   category_encoders: 2.6.1
2023-05-25 19:48:25,800:INFO:            lightgbm: 3.3.5
2023-05-25 19:48:25,800:INFO:               numba: 0.56.4
2023-05-25 19:48:25,800:INFO:            requests: 2.28.1
2023-05-25 19:48:25,800:INFO:          matplotlib: 3.7.0
2023-05-25 19:48:25,800:INFO:          scikitplot: 0.3.7
2023-05-25 19:48:25,800:INFO:         yellowbrick: 1.5
2023-05-25 19:48:25,800:INFO:              plotly: 5.9.0
2023-05-25 19:48:25,800:INFO:             kaleido: 0.2.1
2023-05-25 19:48:25,800:INFO:         statsmodels: 0.13.5
2023-05-25 19:48:25,800:INFO:              sktime: 0.17.0
2023-05-25 19:48:25,800:INFO:               tbats: 1.1.3
2023-05-25 19:48:25,800:INFO:            pmdarima: 2.0.3
2023-05-25 19:48:25,800:INFO:              psutil: 5.9.0
2023-05-25 19:48:25,800:INFO:PyCaret optional dependencies:
2023-05-25 19:48:25,800:INFO:                shap: Not installed
2023-05-25 19:48:25,800:INFO:           interpret: Not installed
2023-05-25 19:48:25,800:INFO:                umap: Not installed
2023-05-25 19:48:25,800:INFO:    pandas_profiling: Not installed
2023-05-25 19:48:25,800:INFO:  explainerdashboard: Not installed
2023-05-25 19:48:25,800:INFO:             autoviz: Not installed
2023-05-25 19:48:25,800:INFO:           fairlearn: Not installed
2023-05-25 19:48:25,800:INFO:             xgboost: Not installed
2023-05-25 19:48:25,800:INFO:            catboost: Not installed
2023-05-25 19:48:25,800:INFO:              kmodes: Not installed
2023-05-25 19:48:25,800:INFO:             mlxtend: Not installed
2023-05-25 19:48:25,801:INFO:       statsforecast: Not installed
2023-05-25 19:48:25,801:INFO:        tune_sklearn: Not installed
2023-05-25 19:48:25,801:INFO:                 ray: Not installed
2023-05-25 19:48:25,801:INFO:            hyperopt: Not installed
2023-05-25 19:48:25,801:INFO:              optuna: Not installed
2023-05-25 19:48:25,801:INFO:               skopt: Not installed
2023-05-25 19:48:25,801:INFO:              mlflow: Not installed
2023-05-25 19:48:25,801:INFO:              gradio: Not installed
2023-05-25 19:48:25,801:INFO:             fastapi: Not installed
2023-05-25 19:48:25,801:INFO:             uvicorn: Not installed
2023-05-25 19:48:25,801:INFO:              m2cgen: Not installed
2023-05-25 19:48:25,801:INFO:           evidently: Not installed
2023-05-25 19:48:25,801:INFO:               fugue: Not installed
2023-05-25 19:48:25,801:INFO:           streamlit: Not installed
2023-05-25 19:48:25,801:INFO:             prophet: Not installed
2023-05-25 19:48:25,801:INFO:None
2023-05-25 19:48:25,801:INFO:Set up data.
2023-05-25 19:48:25,808:INFO:Set up train/test split.
2023-05-25 19:48:25,813:INFO:Set up index.
2023-05-25 19:48:25,813:INFO:Set up folding strategy.
2023-05-25 19:48:25,813:INFO:Assigning column types.
2023-05-25 19:48:25,817:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 19:48:25,855:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:48:25,856:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:48:25,880:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:25,880:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:25,919:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 19:48:25,920:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:48:25,944:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:25,944:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:25,944:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 19:48:25,982:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:48:26,007:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:26,007:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:26,046:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 19:48:26,070:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:26,070:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:26,070:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 19:48:26,133:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:26,133:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:26,196:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:26,198:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:26,199:INFO:Preparing preprocessing pipeline...
2023-05-25 19:48:26,199:INFO:Set up label encoding.
2023-05-25 19:48:26,199:INFO:Set up simple imputation.
2023-05-25 19:48:26,202:INFO:Set up encoding of categorical features.
2023-05-25 19:48:26,272:INFO:Finished creating preprocessing pipeline.
2023-05-25 19:48:26,277:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['APM', 'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'Gap...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours'],
                                    transformer=TargetEncoder(cols=['Age',
                                                                    'HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 19:48:26,277:INFO:Creating final display dataframe.
2023-05-25 19:48:26,490:INFO:Setup _display_container:                     Description                                           Value
0                    Session id                                            1446
1                        Target                                     LeagueIndex
2                   Target type                                      Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6, 8: 7
4           Original data shape                                      (3395, 17)
5        Transformed data shape                                      (3395, 17)
6   Transformed train set shape                                      (2716, 17)
7    Transformed test set shape                                       (679, 17)
8              Numeric features                                              13
9          Categorical features                                               3
10                   Preprocess                                            True
11              Imputation type                                          simple
12           Numeric imputation                                            mean
13       Categorical imputation                                            mode
14     Maximum one-hot encoding                                              25
15              Encoding method                                            None
16               Fold Generator                                 StratifiedKFold
17                  Fold Number                                               5
18                     CPU Jobs                                              -1
19                      Use GPU                                           False
20               Log Experiment                                           False
21              Experiment Name                                clf-default-name
22                          USI                                            65b8
2023-05-25 19:48:26,559:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:26,560:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:26,625:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:26,625:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 19:48:26,626:INFO:setup() successfully completed in 1.06s...............
2023-05-25 19:48:32,394:INFO:Initializing compare_models()
2023-05-25 19:48:32,394:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 19:48:32,395:INFO:Checking exceptions
2023-05-25 19:48:32,398:INFO:Preparing display monitor
2023-05-25 19:48:32,420:INFO:Initializing Logistic Regression
2023-05-25 19:48:32,420:INFO:Total runtime is 0.0 minutes
2023-05-25 19:48:32,423:INFO:SubProcess create_model() called ==================================
2023-05-25 19:48:32,423:INFO:Initializing create_model()
2023-05-25 19:48:32,423:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:48:32,423:INFO:Checking exceptions
2023-05-25 19:48:32,424:INFO:Importing libraries
2023-05-25 19:48:32,424:INFO:Copying training dataset
2023-05-25 19:48:32,427:INFO:Defining folds
2023-05-25 19:48:32,427:INFO:Declaring metric variables
2023-05-25 19:48:32,430:INFO:Importing untrained model
2023-05-25 19:48:32,433:INFO:Logistic Regression Imported successfully
2023-05-25 19:48:32,439:INFO:Starting cross validation
2023-05-25 19:48:32,440:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:48:37,343:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:48:37,354:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:48:37,367:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:48:37,383:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:48:37,402:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:48:37,483:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,484:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,486:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,497:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,498:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,507:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,509:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,510:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,523:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,526:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:37,526:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,550:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,552:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:37,553:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:38,495:INFO:Calculating mean and std
2023-05-25 19:48:38,495:INFO:Creating metrics dataframe
2023-05-25 19:48:38,844:INFO:Uploading results into container
2023-05-25 19:48:38,845:INFO:Uploading model into container now
2023-05-25 19:48:38,845:INFO:_master_model_container: 1
2023-05-25 19:48:38,845:INFO:_display_container: 2
2023-05-25 19:48:38,846:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1446, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:48:38,846:INFO:create_model() successfully completed......................................
2023-05-25 19:48:39,029:INFO:SubProcess create_model() end ==================================
2023-05-25 19:48:39,029:INFO:Creating metrics dataframe
2023-05-25 19:48:39,037:INFO:Initializing K Neighbors Classifier
2023-05-25 19:48:39,037:INFO:Total runtime is 0.11028567949930827 minutes
2023-05-25 19:48:39,040:INFO:SubProcess create_model() called ==================================
2023-05-25 19:48:39,041:INFO:Initializing create_model()
2023-05-25 19:48:39,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:48:39,041:INFO:Checking exceptions
2023-05-25 19:48:39,041:INFO:Importing libraries
2023-05-25 19:48:39,041:INFO:Copying training dataset
2023-05-25 19:48:39,046:INFO:Defining folds
2023-05-25 19:48:39,046:INFO:Declaring metric variables
2023-05-25 19:48:39,049:INFO:Importing untrained model
2023-05-25 19:48:39,053:INFO:K Neighbors Classifier Imported successfully
2023-05-25 19:48:39,059:INFO:Starting cross validation
2023-05-25 19:48:39,060:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:48:41,493:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,494:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,494:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:41,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,497:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,498:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,499:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,501:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,502:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,503:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,503:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,503:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:41,504:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,504:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:41,505:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,514:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,516:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:41,517:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:41,517:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:42,478:INFO:Calculating mean and std
2023-05-25 19:48:42,479:INFO:Creating metrics dataframe
2023-05-25 19:48:42,819:INFO:Uploading results into container
2023-05-25 19:48:42,819:INFO:Uploading model into container now
2023-05-25 19:48:42,820:INFO:_master_model_container: 2
2023-05-25 19:48:42,820:INFO:_display_container: 2
2023-05-25 19:48:42,820:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 19:48:42,820:INFO:create_model() successfully completed......................................
2023-05-25 19:48:42,982:INFO:SubProcess create_model() end ==================================
2023-05-25 19:48:42,982:INFO:Creating metrics dataframe
2023-05-25 19:48:42,991:INFO:Initializing Naive Bayes
2023-05-25 19:48:42,991:INFO:Total runtime is 0.17618056535720827 minutes
2023-05-25 19:48:42,994:INFO:SubProcess create_model() called ==================================
2023-05-25 19:48:42,994:INFO:Initializing create_model()
2023-05-25 19:48:42,994:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:48:42,994:INFO:Checking exceptions
2023-05-25 19:48:42,994:INFO:Importing libraries
2023-05-25 19:48:42,994:INFO:Copying training dataset
2023-05-25 19:48:42,999:INFO:Defining folds
2023-05-25 19:48:42,999:INFO:Declaring metric variables
2023-05-25 19:48:43,002:INFO:Importing untrained model
2023-05-25 19:48:43,005:INFO:Naive Bayes Imported successfully
2023-05-25 19:48:43,011:INFO:Starting cross validation
2023-05-25 19:48:43,012:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:48:45,409:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,409:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,410:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,412:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,412:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,422:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,423:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,424:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,434:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,435:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:45,437:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:46,421:INFO:Calculating mean and std
2023-05-25 19:48:46,422:INFO:Creating metrics dataframe
2023-05-25 19:48:46,773:INFO:Uploading results into container
2023-05-25 19:48:46,773:INFO:Uploading model into container now
2023-05-25 19:48:46,774:INFO:_master_model_container: 3
2023-05-25 19:48:46,774:INFO:_display_container: 2
2023-05-25 19:48:46,774:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 19:48:46,774:INFO:create_model() successfully completed......................................
2023-05-25 19:48:46,943:INFO:SubProcess create_model() end ==================================
2023-05-25 19:48:46,943:INFO:Creating metrics dataframe
2023-05-25 19:48:46,952:INFO:Initializing Decision Tree Classifier
2023-05-25 19:48:46,952:INFO:Total runtime is 0.24221065839131675 minutes
2023-05-25 19:48:46,955:INFO:SubProcess create_model() called ==================================
2023-05-25 19:48:46,955:INFO:Initializing create_model()
2023-05-25 19:48:46,955:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:48:46,955:INFO:Checking exceptions
2023-05-25 19:48:46,955:INFO:Importing libraries
2023-05-25 19:48:46,956:INFO:Copying training dataset
2023-05-25 19:48:46,960:INFO:Defining folds
2023-05-25 19:48:46,960:INFO:Declaring metric variables
2023-05-25 19:48:46,963:INFO:Importing untrained model
2023-05-25 19:48:46,966:INFO:Decision Tree Classifier Imported successfully
2023-05-25 19:48:46,972:INFO:Starting cross validation
2023-05-25 19:48:46,973:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:48:47,234:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:47,235:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:47,237:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:47,242:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:47,244:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:47,245:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:47,256:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:47,257:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:47,259:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:47,260:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:47,261:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:47,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:49,307:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:49,309:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:49,310:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:49,313:INFO:Calculating mean and std
2023-05-25 19:48:49,314:INFO:Creating metrics dataframe
2023-05-25 19:48:49,670:INFO:Uploading results into container
2023-05-25 19:48:49,670:INFO:Uploading model into container now
2023-05-25 19:48:49,670:INFO:_master_model_container: 4
2023-05-25 19:48:49,670:INFO:_display_container: 2
2023-05-25 19:48:49,671:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1446, splitter='best')
2023-05-25 19:48:49,671:INFO:create_model() successfully completed......................................
2023-05-25 19:48:49,860:INFO:SubProcess create_model() end ==================================
2023-05-25 19:48:49,860:INFO:Creating metrics dataframe
2023-05-25 19:48:49,871:INFO:Initializing SVM - Linear Kernel
2023-05-25 19:48:49,871:INFO:Total runtime is 0.29085127115249637 minutes
2023-05-25 19:48:49,874:INFO:SubProcess create_model() called ==================================
2023-05-25 19:48:49,874:INFO:Initializing create_model()
2023-05-25 19:48:49,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:48:49,874:INFO:Checking exceptions
2023-05-25 19:48:49,874:INFO:Importing libraries
2023-05-25 19:48:49,874:INFO:Copying training dataset
2023-05-25 19:48:49,879:INFO:Defining folds
2023-05-25 19:48:49,879:INFO:Declaring metric variables
2023-05-25 19:48:49,883:INFO:Importing untrained model
2023-05-25 19:48:49,887:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 19:48:49,893:INFO:Starting cross validation
2023-05-25 19:48:49,894:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:48:50,115:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:48:50,116:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,117:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:48:50,117:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,117:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:50,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:50,120:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,123:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:48:50,123:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,124:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,125:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:50,126:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,132:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:48:50,132:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,134:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,134:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:50,135:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,144:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 19:48:50,145:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,146:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:50,147:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:50,147:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,103:INFO:Calculating mean and std
2023-05-25 19:48:51,104:INFO:Creating metrics dataframe
2023-05-25 19:48:51,452:INFO:Uploading results into container
2023-05-25 19:48:51,453:INFO:Uploading model into container now
2023-05-25 19:48:51,453:INFO:_master_model_container: 5
2023-05-25 19:48:51,453:INFO:_display_container: 2
2023-05-25 19:48:51,454:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1446, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 19:48:51,454:INFO:create_model() successfully completed......................................
2023-05-25 19:48:51,612:INFO:SubProcess create_model() end ==================================
2023-05-25 19:48:51,612:INFO:Creating metrics dataframe
2023-05-25 19:48:51,622:INFO:Initializing Ridge Classifier
2023-05-25 19:48:51,622:INFO:Total runtime is 0.3200295964876811 minutes
2023-05-25 19:48:51,624:INFO:SubProcess create_model() called ==================================
2023-05-25 19:48:51,624:INFO:Initializing create_model()
2023-05-25 19:48:51,624:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:48:51,625:INFO:Checking exceptions
2023-05-25 19:48:51,625:INFO:Importing libraries
2023-05-25 19:48:51,625:INFO:Copying training dataset
2023-05-25 19:48:51,629:INFO:Defining folds
2023-05-25 19:48:51,629:INFO:Declaring metric variables
2023-05-25 19:48:51,632:INFO:Importing untrained model
2023-05-25 19:48:51,636:INFO:Ridge Classifier Imported successfully
2023-05-25 19:48:51,641:INFO:Starting cross validation
2023-05-25 19:48:51,642:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:48:51,809:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:48:51,810:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,811:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,812:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:51,812:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,817:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:48:51,818:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,819:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:51,821:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,821:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:48:51,822:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,823:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,824:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:51,824:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:48:51,824:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,824:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:51,827:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,834:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 19:48:51,834:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,836:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:51,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:51,838:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:52,805:INFO:Calculating mean and std
2023-05-25 19:48:52,806:INFO:Creating metrics dataframe
2023-05-25 19:48:53,153:INFO:Uploading results into container
2023-05-25 19:48:53,153:INFO:Uploading model into container now
2023-05-25 19:48:53,154:INFO:_master_model_container: 6
2023-05-25 19:48:53,154:INFO:_display_container: 2
2023-05-25 19:48:53,154:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1446, solver='auto',
                tol=0.0001)
2023-05-25 19:48:53,154:INFO:create_model() successfully completed......................................
2023-05-25 19:48:53,317:INFO:SubProcess create_model() end ==================================
2023-05-25 19:48:53,317:INFO:Creating metrics dataframe
2023-05-25 19:48:53,327:INFO:Initializing Random Forest Classifier
2023-05-25 19:48:53,327:INFO:Total runtime is 0.3484562714894613 minutes
2023-05-25 19:48:53,330:INFO:SubProcess create_model() called ==================================
2023-05-25 19:48:53,331:INFO:Initializing create_model()
2023-05-25 19:48:53,331:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:48:53,331:INFO:Checking exceptions
2023-05-25 19:48:53,331:INFO:Importing libraries
2023-05-25 19:48:53,331:INFO:Copying training dataset
2023-05-25 19:48:53,336:INFO:Defining folds
2023-05-25 19:48:53,336:INFO:Declaring metric variables
2023-05-25 19:48:53,339:INFO:Importing untrained model
2023-05-25 19:48:53,343:INFO:Random Forest Classifier Imported successfully
2023-05-25 19:48:53,349:INFO:Starting cross validation
2023-05-25 19:48:53,350:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:48:54,319:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,321:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,322:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:54,323:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,329:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,331:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,333:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,335:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,336:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,337:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:54,337:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,341:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,342:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,343:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:54,343:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,345:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,347:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:54,348:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:54,349:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:55,437:INFO:Calculating mean and std
2023-05-25 19:48:55,438:INFO:Creating metrics dataframe
2023-05-25 19:48:55,789:INFO:Uploading results into container
2023-05-25 19:48:55,790:INFO:Uploading model into container now
2023-05-25 19:48:55,790:INFO:_master_model_container: 7
2023-05-25 19:48:55,791:INFO:_display_container: 2
2023-05-25 19:48:55,791:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1446, verbose=0, warm_start=False)
2023-05-25 19:48:55,791:INFO:create_model() successfully completed......................................
2023-05-25 19:48:55,961:INFO:SubProcess create_model() end ==================================
2023-05-25 19:48:55,961:INFO:Creating metrics dataframe
2023-05-25 19:48:55,971:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 19:48:55,971:INFO:Total runtime is 0.3925177574157715 minutes
2023-05-25 19:48:55,974:INFO:SubProcess create_model() called ==================================
2023-05-25 19:48:55,974:INFO:Initializing create_model()
2023-05-25 19:48:55,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:48:55,974:INFO:Checking exceptions
2023-05-25 19:48:55,974:INFO:Importing libraries
2023-05-25 19:48:55,974:INFO:Copying training dataset
2023-05-25 19:48:55,979:INFO:Defining folds
2023-05-25 19:48:55,979:INFO:Declaring metric variables
2023-05-25 19:48:55,982:INFO:Importing untrained model
2023-05-25 19:48:55,985:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 19:48:55,990:INFO:Starting cross validation
2023-05-25 19:48:55,991:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:48:56,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:48:56,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:48:56,110:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:48:56,110:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:48:56,117:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 19:48:56,212:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,213:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,213:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:56,215:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,217:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,218:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,219:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,225:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,227:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,228:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,232:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,233:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,235:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,235:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,236:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:56,237:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:56,238:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:57,208:INFO:Calculating mean and std
2023-05-25 19:48:57,209:INFO:Creating metrics dataframe
2023-05-25 19:48:57,567:INFO:Uploading results into container
2023-05-25 19:48:57,568:INFO:Uploading model into container now
2023-05-25 19:48:57,568:INFO:_master_model_container: 8
2023-05-25 19:48:57,568:INFO:_display_container: 2
2023-05-25 19:48:57,569:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 19:48:57,569:INFO:create_model() successfully completed......................................
2023-05-25 19:48:57,731:INFO:SubProcess create_model() end ==================================
2023-05-25 19:48:57,731:INFO:Creating metrics dataframe
2023-05-25 19:48:57,742:INFO:Initializing Ada Boost Classifier
2023-05-25 19:48:57,742:INFO:Total runtime is 0.42203118006388346 minutes
2023-05-25 19:48:57,745:INFO:SubProcess create_model() called ==================================
2023-05-25 19:48:57,745:INFO:Initializing create_model()
2023-05-25 19:48:57,745:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:48:57,745:INFO:Checking exceptions
2023-05-25 19:48:57,745:INFO:Importing libraries
2023-05-25 19:48:57,745:INFO:Copying training dataset
2023-05-25 19:48:57,749:INFO:Defining folds
2023-05-25 19:48:57,750:INFO:Declaring metric variables
2023-05-25 19:48:57,753:INFO:Importing untrained model
2023-05-25 19:48:57,756:INFO:Ada Boost Classifier Imported successfully
2023-05-25 19:48:57,761:INFO:Starting cross validation
2023-05-25 19:48:57,762:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:48:58,355:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,356:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,357:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:58,358:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,382:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,383:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,383:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:58,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,385:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,386:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:48:58,386:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,387:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,387:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,389:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,412:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,413:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:58,414:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:48:59,388:INFO:Calculating mean and std
2023-05-25 19:48:59,389:INFO:Creating metrics dataframe
2023-05-25 19:48:59,742:INFO:Uploading results into container
2023-05-25 19:48:59,743:INFO:Uploading model into container now
2023-05-25 19:48:59,743:INFO:_master_model_container: 9
2023-05-25 19:48:59,743:INFO:_display_container: 2
2023-05-25 19:48:59,743:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1446)
2023-05-25 19:48:59,743:INFO:create_model() successfully completed......................................
2023-05-25 19:48:59,919:INFO:SubProcess create_model() end ==================================
2023-05-25 19:48:59,919:INFO:Creating metrics dataframe
2023-05-25 19:48:59,930:INFO:Initializing Gradient Boosting Classifier
2023-05-25 19:48:59,930:INFO:Total runtime is 0.4585036238034566 minutes
2023-05-25 19:48:59,932:INFO:SubProcess create_model() called ==================================
2023-05-25 19:48:59,933:INFO:Initializing create_model()
2023-05-25 19:48:59,933:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:48:59,933:INFO:Checking exceptions
2023-05-25 19:48:59,933:INFO:Importing libraries
2023-05-25 19:48:59,933:INFO:Copying training dataset
2023-05-25 19:48:59,938:INFO:Defining folds
2023-05-25 19:48:59,938:INFO:Declaring metric variables
2023-05-25 19:48:59,941:INFO:Importing untrained model
2023-05-25 19:48:59,944:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 19:48:59,950:INFO:Starting cross validation
2023-05-25 19:48:59,951:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:49:08,153:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,155:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,156:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,192:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,193:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,195:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,202:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,203:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,205:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,318:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,320:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,409:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,410:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:08,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:09,231:INFO:Calculating mean and std
2023-05-25 19:49:09,232:INFO:Creating metrics dataframe
2023-05-25 19:49:09,586:INFO:Uploading results into container
2023-05-25 19:49:09,587:INFO:Uploading model into container now
2023-05-25 19:49:09,587:INFO:_master_model_container: 10
2023-05-25 19:49:09,587:INFO:_display_container: 2
2023-05-25 19:49:09,587:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1446, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 19:49:09,587:INFO:create_model() successfully completed......................................
2023-05-25 19:49:09,768:INFO:SubProcess create_model() end ==================================
2023-05-25 19:49:09,769:INFO:Creating metrics dataframe
2023-05-25 19:49:09,780:INFO:Initializing Linear Discriminant Analysis
2023-05-25 19:49:09,780:INFO:Total runtime is 0.6226618965466817 minutes
2023-05-25 19:49:09,783:INFO:SubProcess create_model() called ==================================
2023-05-25 19:49:09,784:INFO:Initializing create_model()
2023-05-25 19:49:09,784:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:49:09,784:INFO:Checking exceptions
2023-05-25 19:49:09,784:INFO:Importing libraries
2023-05-25 19:49:09,784:INFO:Copying training dataset
2023-05-25 19:49:09,788:INFO:Defining folds
2023-05-25 19:49:09,788:INFO:Declaring metric variables
2023-05-25 19:49:09,791:INFO:Importing untrained model
2023-05-25 19:49:09,795:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 19:49:09,801:INFO:Starting cross validation
2023-05-25 19:49:09,802:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:49:10,030:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,031:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,031:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,032:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,033:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,033:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,039:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,045:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,046:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,047:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,047:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,049:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:10,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:11,054:INFO:Calculating mean and std
2023-05-25 19:49:11,055:INFO:Creating metrics dataframe
2023-05-25 19:49:11,396:INFO:Uploading results into container
2023-05-25 19:49:11,397:INFO:Uploading model into container now
2023-05-25 19:49:11,397:INFO:_master_model_container: 11
2023-05-25 19:49:11,397:INFO:_display_container: 2
2023-05-25 19:49:11,398:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 19:49:11,398:INFO:create_model() successfully completed......................................
2023-05-25 19:49:11,559:INFO:SubProcess create_model() end ==================================
2023-05-25 19:49:11,559:INFO:Creating metrics dataframe
2023-05-25 19:49:11,570:INFO:Initializing Extra Trees Classifier
2023-05-25 19:49:11,571:INFO:Total runtime is 0.6525193293889363 minutes
2023-05-25 19:49:11,574:INFO:SubProcess create_model() called ==================================
2023-05-25 19:49:11,574:INFO:Initializing create_model()
2023-05-25 19:49:11,574:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:49:11,574:INFO:Checking exceptions
2023-05-25 19:49:11,574:INFO:Importing libraries
2023-05-25 19:49:11,574:INFO:Copying training dataset
2023-05-25 19:49:11,580:INFO:Defining folds
2023-05-25 19:49:11,580:INFO:Declaring metric variables
2023-05-25 19:49:11,583:INFO:Importing untrained model
2023-05-25 19:49:11,587:INFO:Extra Trees Classifier Imported successfully
2023-05-25 19:49:11,594:INFO:Starting cross validation
2023-05-25 19:49:11,595:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:49:12,408:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:12,410:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:12,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:12,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:12,427:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:12,428:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:12,429:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:12,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:12,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:12,431:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:12,432:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:12,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:12,433:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:12,434:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:12,435:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:12,445:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:12,447:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:12,447:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:12,448:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:13,436:INFO:Calculating mean and std
2023-05-25 19:49:13,437:INFO:Creating metrics dataframe
2023-05-25 19:49:13,795:INFO:Uploading results into container
2023-05-25 19:49:13,795:INFO:Uploading model into container now
2023-05-25 19:49:13,795:INFO:_master_model_container: 12
2023-05-25 19:49:13,795:INFO:_display_container: 2
2023-05-25 19:49:13,796:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1446, verbose=0, warm_start=False)
2023-05-25 19:49:13,796:INFO:create_model() successfully completed......................................
2023-05-25 19:49:13,967:INFO:SubProcess create_model() end ==================================
2023-05-25 19:49:13,967:INFO:Creating metrics dataframe
2023-05-25 19:49:13,979:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 19:49:13,979:INFO:Total runtime is 0.6926442702611287 minutes
2023-05-25 19:49:13,982:INFO:SubProcess create_model() called ==================================
2023-05-25 19:49:13,982:INFO:Initializing create_model()
2023-05-25 19:49:13,982:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:49:13,982:INFO:Checking exceptions
2023-05-25 19:49:13,982:INFO:Importing libraries
2023-05-25 19:49:13,982:INFO:Copying training dataset
2023-05-25 19:49:13,986:INFO:Defining folds
2023-05-25 19:49:13,986:INFO:Declaring metric variables
2023-05-25 19:49:13,989:INFO:Importing untrained model
2023-05-25 19:49:13,992:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 19:49:13,998:INFO:Starting cross validation
2023-05-25 19:49:13,999:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:49:16,243:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,245:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,245:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:16,246:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,278:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,279:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,280:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:16,281:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,284:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,285:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,286:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,287:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,287:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,287:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:16,288:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,302:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,303:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:16,304:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:16,305:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:17,278:INFO:Calculating mean and std
2023-05-25 19:49:17,279:INFO:Creating metrics dataframe
2023-05-25 19:49:17,629:INFO:Uploading results into container
2023-05-25 19:49:17,630:INFO:Uploading model into container now
2023-05-25 19:49:17,630:INFO:_master_model_container: 13
2023-05-25 19:49:17,630:INFO:_display_container: 2
2023-05-25 19:49:17,631:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1446, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 19:49:17,631:INFO:create_model() successfully completed......................................
2023-05-25 19:49:17,792:INFO:SubProcess create_model() end ==================================
2023-05-25 19:49:17,792:INFO:Creating metrics dataframe
2023-05-25 19:49:17,803:INFO:Initializing Dummy Classifier
2023-05-25 19:49:17,803:INFO:Total runtime is 0.756383458773295 minutes
2023-05-25 19:49:17,806:INFO:SubProcess create_model() called ==================================
2023-05-25 19:49:17,806:INFO:Initializing create_model()
2023-05-25 19:49:17,806:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE6D29A560>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:49:17,806:INFO:Checking exceptions
2023-05-25 19:49:17,806:INFO:Importing libraries
2023-05-25 19:49:17,806:INFO:Copying training dataset
2023-05-25 19:49:17,811:INFO:Defining folds
2023-05-25 19:49:17,811:INFO:Declaring metric variables
2023-05-25 19:49:17,813:INFO:Importing untrained model
2023-05-25 19:49:17,817:INFO:Dummy Classifier Imported successfully
2023-05-25 19:49:17,822:INFO:Starting cross validation
2023-05-25 19:49:17,824:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 19:49:18,030:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:18,031:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:18,032:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:18,032:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:18,033:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:18,033:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:18,034:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:18,035:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:18,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:18,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:18,042:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:18,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:18,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:18,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:18,044:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:18,047:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:18,048:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:18,049:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 19:49:18,049:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 19:49:19,097:INFO:Calculating mean and std
2023-05-25 19:49:19,098:INFO:Creating metrics dataframe
2023-05-25 19:49:19,482:INFO:Uploading results into container
2023-05-25 19:49:19,483:INFO:Uploading model into container now
2023-05-25 19:49:19,483:INFO:_master_model_container: 14
2023-05-25 19:49:19,484:INFO:_display_container: 2
2023-05-25 19:49:19,484:INFO:DummyClassifier(constant=None, random_state=1446, strategy='prior')
2023-05-25 19:49:19,484:INFO:create_model() successfully completed......................................
2023-05-25 19:49:19,679:INFO:SubProcess create_model() end ==================================
2023-05-25 19:49:19,679:INFO:Creating metrics dataframe
2023-05-25 19:49:19,699:INFO:Initializing create_model()
2023-05-25 19:49:19,699:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1446, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 19:49:19,699:INFO:Checking exceptions
2023-05-25 19:49:19,701:INFO:Importing libraries
2023-05-25 19:49:19,701:INFO:Copying training dataset
2023-05-25 19:49:19,705:INFO:Defining folds
2023-05-25 19:49:19,705:INFO:Declaring metric variables
2023-05-25 19:49:19,705:INFO:Importing untrained model
2023-05-25 19:49:19,705:INFO:Declaring custom model
2023-05-25 19:49:19,706:INFO:Logistic Regression Imported successfully
2023-05-25 19:49:19,707:INFO:Cross validation set to False
2023-05-25 19:49:19,707:INFO:Fitting Model
2023-05-25 19:49:20,425:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 19:49:20,705:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1446, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:49:20,705:INFO:create_model() successfully completed......................................
2023-05-25 19:49:20,892:INFO:_master_model_container: 14
2023-05-25 19:49:20,892:INFO:_display_container: 2
2023-05-25 19:49:20,892:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1446, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 19:49:20,892:INFO:compare_models() successfully completed......................................
2023-05-25 19:59:04,066:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:419: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  xb = xb[:, None]

2023-05-25 20:02:46,039:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:206: Warning: the endog has ordered == False, risk of capturing a wrong order for the categories. ordered == True preferred.
  warnings.warn("the endog has ordered == False, "

2023-05-25 20:02:52,741:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:419: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  xb = xb[:, None]

2023-05-25 20:02:59,189:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:419: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  xb = xb[:, None]

2023-05-25 20:05:26,694:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:419: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  xb = xb[:, None]

2023-05-25 20:06:06,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:419: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  xb = xb[:, None]

2023-05-25 20:06:08,373:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:419: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  xb = xb[:, None]

2023-05-25 20:06:21,630:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:419: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  xb = xb[:, None]

2023-05-25 20:06:44,130:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:419: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  xb = xb[:, None]

2023-05-25 20:06:50,537:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:419: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  xb = xb[:, None]

2023-05-25 20:06:57,813:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:419: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  xb = xb[:, None]

2023-05-25 20:07:23,801:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:206: Warning: the endog has ordered == False, risk of capturing a wrong order for the categories. ordered == True preferred.
  warnings.warn("the endog has ordered == False, "

2023-05-25 20:08:08,071:INFO:Initializing tune_model()
2023-05-25 20:08:08,071:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1446, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>)
2023-05-25 20:08:08,071:INFO:Checking exceptions
2023-05-25 20:08:08,088:INFO:Copying training dataset
2023-05-25 20:08:08,092:INFO:Checking base model
2023-05-25 20:08:08,093:INFO:Base model : Logistic Regression
2023-05-25 20:08:08,096:INFO:Declaring metric variables
2023-05-25 20:08:08,099:INFO:Defining Hyperparameters
2023-05-25 20:08:08,571:INFO:Tuning with n_jobs=-1
2023-05-25 20:08:08,571:INFO:Initializing RandomizedSearchCV
2023-05-25 20:08:15,459:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,479:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,490:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,531:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,597:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,638:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,645:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,656:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,661:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,667:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,671:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,679:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,681:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,700:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:15,714:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,303:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,324:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,369:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,386:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,505:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,535:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,536:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,571:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,596:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,603:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,625:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,726:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,730:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,753:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:17,765:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:18,839:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:18,889:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:18,945:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:18,970:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:19,204:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:19,498:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:19,762:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:20,047:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:20,340:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:20,611:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:20,903:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:21,199:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:21,477:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:21,743:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:22,006:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:22,298:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:22,595:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:22,856:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:30,908:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 2.278}
2023-05-25 20:08:30,908:INFO:Hyperparameter search completed
2023-05-25 20:08:30,908:INFO:SubProcess create_model() called ==================================
2023-05-25 20:08:30,909:INFO:Initializing create_model()
2023-05-25 20:08:30,909:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1446, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE723B7130>, model_only=True, return_train_score=False, kwargs={'class_weight': {}, 'C': 2.278})
2023-05-25 20:08:30,909:INFO:Checking exceptions
2023-05-25 20:08:30,909:INFO:Importing libraries
2023-05-25 20:08:30,909:INFO:Copying training dataset
2023-05-25 20:08:30,913:INFO:Defining folds
2023-05-25 20:08:30,913:INFO:Declaring metric variables
2023-05-25 20:08:30,916:INFO:Importing untrained model
2023-05-25 20:08:30,916:INFO:Declaring custom model
2023-05-25 20:08:30,919:INFO:Logistic Regression Imported successfully
2023-05-25 20:08:30,925:INFO:Starting cross validation
2023-05-25 20:08:30,926:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 20:08:31,138:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,139:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,141:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,151:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,153:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,154:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,159:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,161:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,161:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,167:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,168:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,169:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 20:08:31,169:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,174:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,175:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:31,176:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 20:08:31,177:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:32,227:INFO:Calculating mean and std
2023-05-25 20:08:32,228:INFO:Creating metrics dataframe
2023-05-25 20:08:32,233:INFO:Finalizing model
2023-05-25 20:08:32,959:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 20:08:33,250:INFO:Uploading results into container
2023-05-25 20:08:33,251:INFO:Uploading model into container now
2023-05-25 20:08:33,251:INFO:_master_model_container: 15
2023-05-25 20:08:33,251:INFO:_display_container: 3
2023-05-25 20:08:33,251:INFO:LogisticRegression(C=2.278, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1446, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 20:08:33,251:INFO:create_model() successfully completed......................................
2023-05-25 20:08:33,424:INFO:SubProcess create_model() end ==================================
2023-05-25 20:08:33,424:INFO:choose_better activated
2023-05-25 20:08:33,427:INFO:SubProcess create_model() called ==================================
2023-05-25 20:08:33,428:INFO:Initializing create_model()
2023-05-25 20:08:33,428:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE7357BFA0>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1446, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 20:08:33,428:INFO:Checking exceptions
2023-05-25 20:08:33,429:INFO:Importing libraries
2023-05-25 20:08:33,429:INFO:Copying training dataset
2023-05-25 20:08:33,433:INFO:Defining folds
2023-05-25 20:08:33,433:INFO:Declaring metric variables
2023-05-25 20:08:33,433:INFO:Importing untrained model
2023-05-25 20:08:33,433:INFO:Declaring custom model
2023-05-25 20:08:33,434:INFO:Logistic Regression Imported successfully
2023-05-25 20:08:33,434:INFO:Starting cross validation
2023-05-25 20:08:33,435:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 20:08:33,654:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,655:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,656:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,657:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,658:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,659:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,664:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,665:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,671:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,672:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,673:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,682:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:33,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 20:08:33,685:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 8) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 20:08:34,784:INFO:Calculating mean and std
2023-05-25 20:08:34,785:INFO:Creating metrics dataframe
2023-05-25 20:08:34,787:INFO:Finalizing model
2023-05-25 20:08:35,271:INFO:Uploading results into container
2023-05-25 20:08:35,272:INFO:Uploading model into container now
2023-05-25 20:08:35,272:INFO:_master_model_container: 16
2023-05-25 20:08:35,273:INFO:_display_container: 4
2023-05-25 20:08:35,273:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1446, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 20:08:35,273:INFO:create_model() successfully completed......................................
2023-05-25 20:08:35,452:INFO:SubProcess create_model() end ==================================
2023-05-25 20:08:35,453:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1446, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.4109
2023-05-25 20:08:35,453:INFO:LogisticRegression(C=2.278, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1446, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.4142
2023-05-25 20:08:35,454:INFO:LogisticRegression(C=2.278, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1446, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-05-25 20:08:35,454:INFO:choose_better completed
2023-05-25 20:08:35,461:INFO:_master_model_container: 16
2023-05-25 20:08:35,461:INFO:_display_container: 3
2023-05-25 20:08:35,461:INFO:LogisticRegression(C=2.278, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1446, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 20:08:35,461:INFO:tune_model() successfully completed......................................
2023-05-25 20:11:23,543:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:206: Warning: the endog has ordered == False, risk of capturing a wrong order for the categories. ordered == True preferred.
  warnings.warn("the endog has ordered == False, "

2023-05-25 20:11:52,377:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:419: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  xb = xb[:, None]

2023-05-25 20:11:55,450:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_10308\658823812.py:3: DeprecationWarning: elementwise comparison failed; this will raise an error in the future.
  accuracy = (pred_choice == actual_choice).mean()

2023-05-25 20:12:03,630:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_10308\505211479.py:3: DeprecationWarning: elementwise comparison failed; this will raise an error in the future.
  accuracy = (pred_choice == actual_choice).mean()

2023-05-25 20:12:38,042:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:419: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  xb = xb[:, None]

2023-05-25 20:16:01,842:WARNING:C:\ProgramData\anaconda3\lib\site-packages\statsmodels\miscmodels\ordinal_model.py:419: FutureWarning: Support for multi-dimensional indexing (e.g. `obj[:, None]`) is deprecated and will be removed in a future version.  Convert to a numpy array before indexing instead.
  xb = xb[:, None]

2023-05-25 21:10:13,372:INFO:PyCaret ClassificationExperiment
2023-05-25 21:10:13,372:INFO:Logging name: clf-default-name
2023-05-25 21:10:13,372:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 21:10:13,372:INFO:version 3.0.2
2023-05-25 21:10:13,372:INFO:Initializing setup()
2023-05-25 21:10:13,372:INFO:self.USI: c4b9
2023-05-25 21:10:13,373:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 21:10:13,373:INFO:Checking environment
2023-05-25 21:10:13,373:INFO:python_version: 3.10.9
2023-05-25 21:10:13,373:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 21:10:13,373:INFO:machine: AMD64
2023-05-25 21:10:13,373:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 21:10:13,373:INFO:Memory: svmem(total=17112055808, available=7387856896, percent=56.8, used=9724198912, free=7387856896)
2023-05-25 21:10:13,373:INFO:Physical Core: 8
2023-05-25 21:10:13,373:INFO:Logical Core: 16
2023-05-25 21:10:13,373:INFO:Checking libraries
2023-05-25 21:10:13,373:INFO:System:
2023-05-25 21:10:13,373:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 21:10:13,373:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 21:10:13,373:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 21:10:13,373:INFO:PyCaret required dependencies:
2023-05-25 21:10:13,373:INFO:                 pip: 22.3.1
2023-05-25 21:10:13,374:INFO:          setuptools: 65.6.3
2023-05-25 21:10:13,374:INFO:             pycaret: 3.0.2
2023-05-25 21:10:13,374:INFO:             IPython: 8.10.0
2023-05-25 21:10:13,374:INFO:          ipywidgets: 7.6.5
2023-05-25 21:10:13,374:INFO:                tqdm: 4.64.1
2023-05-25 21:10:13,374:INFO:               numpy: 1.23.5
2023-05-25 21:10:13,374:INFO:              pandas: 1.5.3
2023-05-25 21:10:13,374:INFO:              jinja2: 3.1.2
2023-05-25 21:10:13,374:INFO:               scipy: 1.10.0
2023-05-25 21:10:13,374:INFO:              joblib: 1.1.1
2023-05-25 21:10:13,374:INFO:             sklearn: 1.2.1
2023-05-25 21:10:13,374:INFO:                pyod: 1.0.9
2023-05-25 21:10:13,374:INFO:            imblearn: 0.10.1
2023-05-25 21:10:13,374:INFO:   category_encoders: 2.6.1
2023-05-25 21:10:13,374:INFO:            lightgbm: 3.3.5
2023-05-25 21:10:13,374:INFO:               numba: 0.56.4
2023-05-25 21:10:13,374:INFO:            requests: 2.28.1
2023-05-25 21:10:13,374:INFO:          matplotlib: 3.7.0
2023-05-25 21:10:13,374:INFO:          scikitplot: 0.3.7
2023-05-25 21:10:13,374:INFO:         yellowbrick: 1.5
2023-05-25 21:10:13,374:INFO:              plotly: 5.9.0
2023-05-25 21:10:13,374:INFO:             kaleido: 0.2.1
2023-05-25 21:10:13,374:INFO:         statsmodels: 0.13.5
2023-05-25 21:10:13,375:INFO:              sktime: 0.17.0
2023-05-25 21:10:13,375:INFO:               tbats: 1.1.3
2023-05-25 21:10:13,375:INFO:            pmdarima: 2.0.3
2023-05-25 21:10:13,375:INFO:              psutil: 5.9.0
2023-05-25 21:10:13,375:INFO:PyCaret optional dependencies:
2023-05-25 21:10:13,375:INFO:                shap: Not installed
2023-05-25 21:10:13,375:INFO:           interpret: Not installed
2023-05-25 21:10:13,375:INFO:                umap: Not installed
2023-05-25 21:10:13,375:INFO:    pandas_profiling: Not installed
2023-05-25 21:10:13,375:INFO:  explainerdashboard: Not installed
2023-05-25 21:10:13,375:INFO:             autoviz: Not installed
2023-05-25 21:10:13,375:INFO:           fairlearn: Not installed
2023-05-25 21:10:13,375:INFO:             xgboost: Not installed
2023-05-25 21:10:13,375:INFO:            catboost: Not installed
2023-05-25 21:10:13,375:INFO:              kmodes: Not installed
2023-05-25 21:10:13,375:INFO:             mlxtend: Not installed
2023-05-25 21:10:13,375:INFO:       statsforecast: Not installed
2023-05-25 21:10:13,375:INFO:        tune_sklearn: Not installed
2023-05-25 21:10:13,375:INFO:                 ray: Not installed
2023-05-25 21:10:13,375:INFO:            hyperopt: Not installed
2023-05-25 21:10:13,375:INFO:              optuna: Not installed
2023-05-25 21:10:13,375:INFO:               skopt: Not installed
2023-05-25 21:10:13,375:INFO:              mlflow: Not installed
2023-05-25 21:10:13,375:INFO:              gradio: Not installed
2023-05-25 21:10:13,376:INFO:             fastapi: Not installed
2023-05-25 21:10:13,376:INFO:             uvicorn: Not installed
2023-05-25 21:10:13,376:INFO:              m2cgen: Not installed
2023-05-25 21:10:13,376:INFO:           evidently: Not installed
2023-05-25 21:10:13,376:INFO:               fugue: Not installed
2023-05-25 21:10:13,376:INFO:           streamlit: Not installed
2023-05-25 21:10:13,376:INFO:             prophet: Not installed
2023-05-25 21:10:13,376:INFO:None
2023-05-25 21:10:13,376:INFO:Set up data.
2023-05-25 21:10:13,383:INFO:Set up train/test split.
2023-05-25 21:10:13,389:INFO:Set up index.
2023-05-25 21:10:13,390:INFO:Set up folding strategy.
2023-05-25 21:10:13,390:INFO:Assigning column types.
2023-05-25 21:10:13,393:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 21:10:13,432:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 21:10:13,433:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:10:13,457:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:13,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:13,497:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 21:10:13,499:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:10:13,524:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:13,525:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:13,525:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 21:10:13,567:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:10:13,594:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:13,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:13,636:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:10:13,660:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:13,661:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:13,661:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 21:10:13,728:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:13,728:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:13,795:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:13,795:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:13,796:INFO:Preparing preprocessing pipeline...
2023-05-25 21:10:13,798:INFO:Set up label encoding.
2023-05-25 21:10:13,798:INFO:Set up simple imputation.
2023-05-25 21:10:13,819:INFO:Finished creating preprocessing pipeline.
2023-05-25 21:10:13,824:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['GameID', 'Age', 'HoursPerWeek',
                                             'TotalHours', 'APM',
                                             'SelectByHotkeys', 'UniqueHotkeys',
                                             'MinimapAttacks',...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-05-25 21:10:13,824:INFO:Creating final display dataframe.
2023-05-25 21:10:13,903:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      2394
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                (3338, 16)
5        Transformed data shape                                (3338, 16)
6   Transformed train set shape                                (2670, 16)
7    Transformed test set shape                                 (668, 16)
8              Numeric features                                        15
9                    Preprocess                                      True
10              Imputation type                                    simple
11           Numeric imputation                                      mean
12       Categorical imputation                                      mode
13               Fold Generator                           StratifiedKFold
14                  Fold Number                                         5
15                     CPU Jobs                                        -1
16                      Use GPU                                     False
17               Log Experiment                                     False
18              Experiment Name                          clf-default-name
19                          USI                                      c4b9
2023-05-25 21:10:13,976:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:13,976:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:14,043:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:14,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:10:14,044:INFO:setup() successfully completed in 1.0s...............
2023-05-25 21:10:16,524:INFO:Initializing compare_models()
2023-05-25 21:10:16,524:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 21:10:16,524:INFO:Checking exceptions
2023-05-25 21:10:16,528:INFO:Preparing display monitor
2023-05-25 21:10:16,552:INFO:Initializing Logistic Regression
2023-05-25 21:10:16,552:INFO:Total runtime is 0.0 minutes
2023-05-25 21:10:16,555:INFO:SubProcess create_model() called ==================================
2023-05-25 21:10:16,555:INFO:Initializing create_model()
2023-05-25 21:10:16,555:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:10:16,555:INFO:Checking exceptions
2023-05-25 21:10:16,556:INFO:Importing libraries
2023-05-25 21:10:16,556:INFO:Copying training dataset
2023-05-25 21:10:16,559:INFO:Defining folds
2023-05-25 21:10:16,559:INFO:Declaring metric variables
2023-05-25 21:10:16,562:INFO:Importing untrained model
2023-05-25 21:10:16,565:INFO:Logistic Regression Imported successfully
2023-05-25 21:10:16,571:INFO:Starting cross validation
2023-05-25 21:10:16,572:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:10:21,217:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:10:21,276:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:21,278:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:21,279:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:21,312:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:10:21,313:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:10:21,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:10:21,345:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:10:21,381:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:21,381:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:21,383:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:21,383:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:21,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:21,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:21,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:21,385:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:21,385:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:21,386:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:21,387:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:21,404:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:21,406:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:21,406:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:21,408:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:22,404:INFO:Calculating mean and std
2023-05-25 21:10:22,405:INFO:Creating metrics dataframe
2023-05-25 21:10:22,778:INFO:Uploading results into container
2023-05-25 21:10:22,778:INFO:Uploading model into container now
2023-05-25 21:10:22,779:INFO:_master_model_container: 1
2023-05-25 21:10:22,779:INFO:_display_container: 2
2023-05-25 21:10:22,779:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2394, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 21:10:22,779:INFO:create_model() successfully completed......................................
2023-05-25 21:10:23,288:INFO:SubProcess create_model() end ==================================
2023-05-25 21:10:23,288:INFO:Creating metrics dataframe
2023-05-25 21:10:23,297:INFO:Initializing K Neighbors Classifier
2023-05-25 21:10:23,297:INFO:Total runtime is 0.11242162386576335 minutes
2023-05-25 21:10:23,301:INFO:SubProcess create_model() called ==================================
2023-05-25 21:10:23,301:INFO:Initializing create_model()
2023-05-25 21:10:23,301:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:10:23,301:INFO:Checking exceptions
2023-05-25 21:10:23,302:INFO:Importing libraries
2023-05-25 21:10:23,302:INFO:Copying training dataset
2023-05-25 21:10:23,306:INFO:Defining folds
2023-05-25 21:10:23,306:INFO:Declaring metric variables
2023-05-25 21:10:23,310:INFO:Importing untrained model
2023-05-25 21:10:23,313:INFO:K Neighbors Classifier Imported successfully
2023-05-25 21:10:23,318:INFO:Starting cross validation
2023-05-25 21:10:23,318:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:10:25,466:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,467:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,469:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:25,470:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,470:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,471:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,472:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,472:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:25,473:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,473:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,474:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:25,475:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,483:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,485:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,487:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:25,489:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,492:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,494:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:25,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:25,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:26,573:INFO:Calculating mean and std
2023-05-25 21:10:26,574:INFO:Creating metrics dataframe
2023-05-25 21:10:26,965:INFO:Uploading results into container
2023-05-25 21:10:26,966:INFO:Uploading model into container now
2023-05-25 21:10:26,966:INFO:_master_model_container: 2
2023-05-25 21:10:26,966:INFO:_display_container: 2
2023-05-25 21:10:26,967:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 21:10:26,967:INFO:create_model() successfully completed......................................
2023-05-25 21:10:27,140:INFO:SubProcess create_model() end ==================================
2023-05-25 21:10:27,141:INFO:Creating metrics dataframe
2023-05-25 21:10:27,150:INFO:Initializing Naive Bayes
2023-05-25 21:10:27,150:INFO:Total runtime is 0.17662336428960163 minutes
2023-05-25 21:10:27,154:INFO:SubProcess create_model() called ==================================
2023-05-25 21:10:27,155:INFO:Initializing create_model()
2023-05-25 21:10:27,155:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:10:27,155:INFO:Checking exceptions
2023-05-25 21:10:27,155:INFO:Importing libraries
2023-05-25 21:10:27,155:INFO:Copying training dataset
2023-05-25 21:10:27,159:INFO:Defining folds
2023-05-25 21:10:27,159:INFO:Declaring metric variables
2023-05-25 21:10:27,162:INFO:Importing untrained model
2023-05-25 21:10:27,165:INFO:Naive Bayes Imported successfully
2023-05-25 21:10:27,170:INFO:Starting cross validation
2023-05-25 21:10:27,171:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:10:29,300:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,301:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,303:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,303:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,303:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,305:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,305:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,306:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,306:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,308:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,308:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,310:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,310:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,311:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:29,311:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:30,449:INFO:Calculating mean and std
2023-05-25 21:10:30,450:INFO:Creating metrics dataframe
2023-05-25 21:10:30,831:INFO:Uploading results into container
2023-05-25 21:10:30,832:INFO:Uploading model into container now
2023-05-25 21:10:30,832:INFO:_master_model_container: 3
2023-05-25 21:10:30,832:INFO:_display_container: 2
2023-05-25 21:10:30,832:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 21:10:30,832:INFO:create_model() successfully completed......................................
2023-05-25 21:10:31,003:INFO:SubProcess create_model() end ==================================
2023-05-25 21:10:31,003:INFO:Creating metrics dataframe
2023-05-25 21:10:31,012:INFO:Initializing Decision Tree Classifier
2023-05-25 21:10:31,012:INFO:Total runtime is 0.2410011887550354 minutes
2023-05-25 21:10:31,015:INFO:SubProcess create_model() called ==================================
2023-05-25 21:10:31,015:INFO:Initializing create_model()
2023-05-25 21:10:31,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:10:31,015:INFO:Checking exceptions
2023-05-25 21:10:31,016:INFO:Importing libraries
2023-05-25 21:10:31,016:INFO:Copying training dataset
2023-05-25 21:10:31,021:INFO:Defining folds
2023-05-25 21:10:31,022:INFO:Declaring metric variables
2023-05-25 21:10:31,025:INFO:Importing untrained model
2023-05-25 21:10:31,028:INFO:Decision Tree Classifier Imported successfully
2023-05-25 21:10:31,033:INFO:Starting cross validation
2023-05-25 21:10:31,034:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:10:31,130:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:31,132:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:31,133:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:31,134:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:31,136:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:31,137:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:31,137:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:31,138:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:31,140:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:31,141:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:31,142:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:31,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,055:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,056:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,060:INFO:Calculating mean and std
2023-05-25 21:10:33,061:INFO:Creating metrics dataframe
2023-05-25 21:10:33,443:INFO:Uploading results into container
2023-05-25 21:10:33,443:INFO:Uploading model into container now
2023-05-25 21:10:33,443:INFO:_master_model_container: 4
2023-05-25 21:10:33,444:INFO:_display_container: 2
2023-05-25 21:10:33,444:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2394, splitter='best')
2023-05-25 21:10:33,444:INFO:create_model() successfully completed......................................
2023-05-25 21:10:33,631:INFO:SubProcess create_model() end ==================================
2023-05-25 21:10:33,632:INFO:Creating metrics dataframe
2023-05-25 21:10:33,642:INFO:Initializing SVM - Linear Kernel
2023-05-25 21:10:33,642:INFO:Total runtime is 0.2848281264305115 minutes
2023-05-25 21:10:33,646:INFO:SubProcess create_model() called ==================================
2023-05-25 21:10:33,646:INFO:Initializing create_model()
2023-05-25 21:10:33,646:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:10:33,646:INFO:Checking exceptions
2023-05-25 21:10:33,646:INFO:Importing libraries
2023-05-25 21:10:33,646:INFO:Copying training dataset
2023-05-25 21:10:33,651:INFO:Defining folds
2023-05-25 21:10:33,651:INFO:Declaring metric variables
2023-05-25 21:10:33,654:INFO:Importing untrained model
2023-05-25 21:10:33,659:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 21:10:33,679:INFO:Starting cross validation
2023-05-25 21:10:33,680:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:10:33,774:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:10:33,775:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,775:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:10:33,776:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,776:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,777:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:10:33,777:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:33,778:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,778:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,778:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,779:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:33,779:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,779:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,780:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:33,781:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,786:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:10:33,787:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,790:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,792:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:33,793:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,795:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:10:33,795:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,796:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:33,797:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:33,798:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:34,898:INFO:Calculating mean and std
2023-05-25 21:10:34,899:INFO:Creating metrics dataframe
2023-05-25 21:10:35,284:INFO:Uploading results into container
2023-05-25 21:10:35,285:INFO:Uploading model into container now
2023-05-25 21:10:35,285:INFO:_master_model_container: 5
2023-05-25 21:10:35,285:INFO:_display_container: 2
2023-05-25 21:10:35,286:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2394, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 21:10:35,286:INFO:create_model() successfully completed......................................
2023-05-25 21:10:35,471:INFO:SubProcess create_model() end ==================================
2023-05-25 21:10:35,471:INFO:Creating metrics dataframe
2023-05-25 21:10:35,482:INFO:Initializing Ridge Classifier
2023-05-25 21:10:35,482:INFO:Total runtime is 0.31549325784047444 minutes
2023-05-25 21:10:35,485:INFO:SubProcess create_model() called ==================================
2023-05-25 21:10:35,485:INFO:Initializing create_model()
2023-05-25 21:10:35,486:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:10:35,486:INFO:Checking exceptions
2023-05-25 21:10:35,486:INFO:Importing libraries
2023-05-25 21:10:35,486:INFO:Copying training dataset
2023-05-25 21:10:35,490:INFO:Defining folds
2023-05-25 21:10:35,490:INFO:Declaring metric variables
2023-05-25 21:10:35,493:INFO:Importing untrained model
2023-05-25 21:10:35,497:INFO:Ridge Classifier Imported successfully
2023-05-25 21:10:35,503:INFO:Starting cross validation
2023-05-25 21:10:35,504:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:10:35,568:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:10:35,568:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,569:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:10:35,569:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,569:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,570:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:35,571:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,571:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,572:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:35,573:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,579:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:10:35,579:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,580:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:10:35,581:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,581:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:35,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,583:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:10:35,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:35,584:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,585:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:35,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:35,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:36,653:INFO:Calculating mean and std
2023-05-25 21:10:36,654:INFO:Creating metrics dataframe
2023-05-25 21:10:37,031:INFO:Uploading results into container
2023-05-25 21:10:37,032:INFO:Uploading model into container now
2023-05-25 21:10:37,032:INFO:_master_model_container: 6
2023-05-25 21:10:37,032:INFO:_display_container: 2
2023-05-25 21:10:37,032:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2394, solver='auto',
                tol=0.0001)
2023-05-25 21:10:37,033:INFO:create_model() successfully completed......................................
2023-05-25 21:10:37,209:INFO:SubProcess create_model() end ==================================
2023-05-25 21:10:37,209:INFO:Creating metrics dataframe
2023-05-25 21:10:37,219:INFO:Initializing Random Forest Classifier
2023-05-25 21:10:37,219:INFO:Total runtime is 0.34444997310638426 minutes
2023-05-25 21:10:37,222:INFO:SubProcess create_model() called ==================================
2023-05-25 21:10:37,222:INFO:Initializing create_model()
2023-05-25 21:10:37,222:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:10:37,222:INFO:Checking exceptions
2023-05-25 21:10:37,222:INFO:Importing libraries
2023-05-25 21:10:37,222:INFO:Copying training dataset
2023-05-25 21:10:37,226:INFO:Defining folds
2023-05-25 21:10:37,226:INFO:Declaring metric variables
2023-05-25 21:10:37,231:INFO:Importing untrained model
2023-05-25 21:10:37,234:INFO:Random Forest Classifier Imported successfully
2023-05-25 21:10:37,240:INFO:Starting cross validation
2023-05-25 21:10:37,240:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:10:37,929:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,930:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,931:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:37,932:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,933:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,935:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,936:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,936:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,936:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:37,937:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,937:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,937:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,938:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:37,938:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:37,939:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,939:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,949:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,950:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:37,951:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:37,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,063:INFO:Calculating mean and std
2023-05-25 21:10:39,064:INFO:Creating metrics dataframe
2023-05-25 21:10:39,456:INFO:Uploading results into container
2023-05-25 21:10:39,457:INFO:Uploading model into container now
2023-05-25 21:10:39,457:INFO:_master_model_container: 7
2023-05-25 21:10:39,457:INFO:_display_container: 2
2023-05-25 21:10:39,457:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2394, verbose=0, warm_start=False)
2023-05-25 21:10:39,457:INFO:create_model() successfully completed......................................
2023-05-25 21:10:39,643:INFO:SubProcess create_model() end ==================================
2023-05-25 21:10:39,643:INFO:Creating metrics dataframe
2023-05-25 21:10:39,654:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 21:10:39,654:INFO:Total runtime is 0.38502298990885414 minutes
2023-05-25 21:10:39,657:INFO:SubProcess create_model() called ==================================
2023-05-25 21:10:39,657:INFO:Initializing create_model()
2023-05-25 21:10:39,657:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:10:39,657:INFO:Checking exceptions
2023-05-25 21:10:39,658:INFO:Importing libraries
2023-05-25 21:10:39,658:INFO:Copying training dataset
2023-05-25 21:10:39,662:INFO:Defining folds
2023-05-25 21:10:39,662:INFO:Declaring metric variables
2023-05-25 21:10:39,666:INFO:Importing untrained model
2023-05-25 21:10:39,669:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 21:10:39,675:INFO:Starting cross validation
2023-05-25 21:10:39,676:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:10:39,755:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,756:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,758:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,759:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,760:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,761:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,761:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,762:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,763:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,763:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,764:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,769:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,771:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:39,772:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:40,881:INFO:Calculating mean and std
2023-05-25 21:10:40,882:INFO:Creating metrics dataframe
2023-05-25 21:10:41,253:INFO:Uploading results into container
2023-05-25 21:10:41,254:INFO:Uploading model into container now
2023-05-25 21:10:41,254:INFO:_master_model_container: 8
2023-05-25 21:10:41,254:INFO:_display_container: 2
2023-05-25 21:10:41,254:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 21:10:41,255:INFO:create_model() successfully completed......................................
2023-05-25 21:10:41,431:INFO:SubProcess create_model() end ==================================
2023-05-25 21:10:41,431:INFO:Creating metrics dataframe
2023-05-25 21:10:41,441:INFO:Initializing Ada Boost Classifier
2023-05-25 21:10:41,441:INFO:Total runtime is 0.41482093334197995 minutes
2023-05-25 21:10:41,444:INFO:SubProcess create_model() called ==================================
2023-05-25 21:10:41,445:INFO:Initializing create_model()
2023-05-25 21:10:41,445:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:10:41,445:INFO:Checking exceptions
2023-05-25 21:10:41,445:INFO:Importing libraries
2023-05-25 21:10:41,445:INFO:Copying training dataset
2023-05-25 21:10:41,451:INFO:Defining folds
2023-05-25 21:10:41,451:INFO:Declaring metric variables
2023-05-25 21:10:41,454:INFO:Importing untrained model
2023-05-25 21:10:41,457:INFO:Ada Boost Classifier Imported successfully
2023-05-25 21:10:41,464:INFO:Starting cross validation
2023-05-25 21:10:41,465:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:10:41,906:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,908:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,909:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:41,909:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,919:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,920:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,921:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:41,922:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,923:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,925:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,926:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:41,926:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,936:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,937:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,938:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:41,939:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,953:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:41,955:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:43,017:INFO:Calculating mean and std
2023-05-25 21:10:43,018:INFO:Creating metrics dataframe
2023-05-25 21:10:43,408:INFO:Uploading results into container
2023-05-25 21:10:43,409:INFO:Uploading model into container now
2023-05-25 21:10:43,409:INFO:_master_model_container: 9
2023-05-25 21:10:43,409:INFO:_display_container: 2
2023-05-25 21:10:43,409:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2394)
2023-05-25 21:10:43,410:INFO:create_model() successfully completed......................................
2023-05-25 21:10:43,595:INFO:SubProcess create_model() end ==================================
2023-05-25 21:10:43,595:INFO:Creating metrics dataframe
2023-05-25 21:10:43,605:INFO:Initializing Gradient Boosting Classifier
2023-05-25 21:10:43,605:INFO:Total runtime is 0.45087967713673904 minutes
2023-05-25 21:10:43,609:INFO:SubProcess create_model() called ==================================
2023-05-25 21:10:43,609:INFO:Initializing create_model()
2023-05-25 21:10:43,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:10:43,609:INFO:Checking exceptions
2023-05-25 21:10:43,609:INFO:Importing libraries
2023-05-25 21:10:43,609:INFO:Copying training dataset
2023-05-25 21:10:43,614:INFO:Defining folds
2023-05-25 21:10:43,614:INFO:Declaring metric variables
2023-05-25 21:10:43,617:INFO:Importing untrained model
2023-05-25 21:10:43,619:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 21:10:43,626:INFO:Starting cross validation
2023-05-25 21:10:43,626:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:10:50,757:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,759:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,760:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,799:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,801:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,802:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,828:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,828:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,829:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,829:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,830:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,836:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,839:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:50,840:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:51,893:INFO:Calculating mean and std
2023-05-25 21:10:51,894:INFO:Creating metrics dataframe
2023-05-25 21:10:52,273:INFO:Uploading results into container
2023-05-25 21:10:52,273:INFO:Uploading model into container now
2023-05-25 21:10:52,274:INFO:_master_model_container: 10
2023-05-25 21:10:52,274:INFO:_display_container: 2
2023-05-25 21:10:52,274:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2394, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 21:10:52,275:INFO:create_model() successfully completed......................................
2023-05-25 21:10:52,450:INFO:SubProcess create_model() end ==================================
2023-05-25 21:10:52,450:INFO:Creating metrics dataframe
2023-05-25 21:10:52,461:INFO:Initializing Linear Discriminant Analysis
2023-05-25 21:10:52,462:INFO:Total runtime is 0.598489495118459 minutes
2023-05-25 21:10:52,465:INFO:SubProcess create_model() called ==================================
2023-05-25 21:10:52,465:INFO:Initializing create_model()
2023-05-25 21:10:52,465:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:10:52,465:INFO:Checking exceptions
2023-05-25 21:10:52,465:INFO:Importing libraries
2023-05-25 21:10:52,465:INFO:Copying training dataset
2023-05-25 21:10:52,469:INFO:Defining folds
2023-05-25 21:10:52,470:INFO:Declaring metric variables
2023-05-25 21:10:52,473:INFO:Importing untrained model
2023-05-25 21:10:52,476:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 21:10:52,483:INFO:Starting cross validation
2023-05-25 21:10:52,484:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:10:52,559:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,560:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,561:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,569:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,570:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,572:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,572:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,574:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,575:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,576:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,579:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,581:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,585:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:52,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:53,697:INFO:Calculating mean and std
2023-05-25 21:10:53,698:INFO:Creating metrics dataframe
2023-05-25 21:10:54,088:INFO:Uploading results into container
2023-05-25 21:10:54,088:INFO:Uploading model into container now
2023-05-25 21:10:54,089:INFO:_master_model_container: 11
2023-05-25 21:10:54,089:INFO:_display_container: 2
2023-05-25 21:10:54,089:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 21:10:54,089:INFO:create_model() successfully completed......................................
2023-05-25 21:10:54,275:INFO:SubProcess create_model() end ==================================
2023-05-25 21:10:54,275:INFO:Creating metrics dataframe
2023-05-25 21:10:54,288:INFO:Initializing Extra Trees Classifier
2023-05-25 21:10:54,288:INFO:Total runtime is 0.6289267937342324 minutes
2023-05-25 21:10:54,291:INFO:SubProcess create_model() called ==================================
2023-05-25 21:10:54,291:INFO:Initializing create_model()
2023-05-25 21:10:54,291:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:10:54,291:INFO:Checking exceptions
2023-05-25 21:10:54,291:INFO:Importing libraries
2023-05-25 21:10:54,291:INFO:Copying training dataset
2023-05-25 21:10:54,296:INFO:Defining folds
2023-05-25 21:10:54,296:INFO:Declaring metric variables
2023-05-25 21:10:54,299:INFO:Importing untrained model
2023-05-25 21:10:54,302:INFO:Extra Trees Classifier Imported successfully
2023-05-25 21:10:54,309:INFO:Starting cross validation
2023-05-25 21:10:54,310:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:10:54,872:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,872:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,873:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,873:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,874:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,874:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:54,875:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,875:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:54,875:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,876:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,876:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:54,876:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,878:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,879:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,881:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:54,882:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,890:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,892:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:54,893:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:54,894:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:56,017:INFO:Calculating mean and std
2023-05-25 21:10:56,018:INFO:Creating metrics dataframe
2023-05-25 21:10:56,409:INFO:Uploading results into container
2023-05-25 21:10:56,410:INFO:Uploading model into container now
2023-05-25 21:10:56,410:INFO:_master_model_container: 12
2023-05-25 21:10:56,410:INFO:_display_container: 2
2023-05-25 21:10:56,410:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2394, verbose=0, warm_start=False)
2023-05-25 21:10:56,410:INFO:create_model() successfully completed......................................
2023-05-25 21:10:56,589:INFO:SubProcess create_model() end ==================================
2023-05-25 21:10:56,589:INFO:Creating metrics dataframe
2023-05-25 21:10:56,601:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 21:10:56,601:INFO:Total runtime is 0.6674834648768105 minutes
2023-05-25 21:10:56,604:INFO:SubProcess create_model() called ==================================
2023-05-25 21:10:56,604:INFO:Initializing create_model()
2023-05-25 21:10:56,604:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:10:56,604:INFO:Checking exceptions
2023-05-25 21:10:56,604:INFO:Importing libraries
2023-05-25 21:10:56,604:INFO:Copying training dataset
2023-05-25 21:10:56,610:INFO:Defining folds
2023-05-25 21:10:56,610:INFO:Declaring metric variables
2023-05-25 21:10:56,613:INFO:Importing untrained model
2023-05-25 21:10:56,616:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 21:10:56,622:INFO:Starting cross validation
2023-05-25 21:10:56,623:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:10:58,575:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,576:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,577:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,578:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,578:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,579:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:58,579:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,580:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,581:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:58,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:10:58,589:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,616:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,618:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:58,620:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:10:59,750:INFO:Calculating mean and std
2023-05-25 21:10:59,752:INFO:Creating metrics dataframe
2023-05-25 21:11:00,170:INFO:Uploading results into container
2023-05-25 21:11:00,170:INFO:Uploading model into container now
2023-05-25 21:11:00,171:INFO:_master_model_container: 13
2023-05-25 21:11:00,171:INFO:_display_container: 2
2023-05-25 21:11:00,171:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2394, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 21:11:00,171:INFO:create_model() successfully completed......................................
2023-05-25 21:11:00,355:INFO:SubProcess create_model() end ==================================
2023-05-25 21:11:00,355:INFO:Creating metrics dataframe
2023-05-25 21:11:00,366:INFO:Initializing Dummy Classifier
2023-05-25 21:11:00,366:INFO:Total runtime is 0.730234658718109 minutes
2023-05-25 21:11:00,370:INFO:SubProcess create_model() called ==================================
2023-05-25 21:11:00,370:INFO:Initializing create_model()
2023-05-25 21:11:00,370:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76402410>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:11:00,370:INFO:Checking exceptions
2023-05-25 21:11:00,370:INFO:Importing libraries
2023-05-25 21:11:00,371:INFO:Copying training dataset
2023-05-25 21:11:00,376:INFO:Defining folds
2023-05-25 21:11:00,376:INFO:Declaring metric variables
2023-05-25 21:11:00,379:INFO:Importing untrained model
2023-05-25 21:11:00,382:INFO:Dummy Classifier Imported successfully
2023-05-25 21:11:00,388:INFO:Starting cross validation
2023-05-25 21:11:00,389:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:11:00,460:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,461:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,462:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,463:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,463:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:11:00,464:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:11:00,465:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,465:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,465:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,466:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,466:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,466:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:11:00,467:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,467:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,468:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:11:00,468:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,468:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,469:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:00,471:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:11:00,471:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:11:01,606:INFO:Calculating mean and std
2023-05-25 21:11:01,607:INFO:Creating metrics dataframe
2023-05-25 21:11:01,998:INFO:Uploading results into container
2023-05-25 21:11:01,999:INFO:Uploading model into container now
2023-05-25 21:11:01,999:INFO:_master_model_container: 14
2023-05-25 21:11:01,999:INFO:_display_container: 2
2023-05-25 21:11:01,999:INFO:DummyClassifier(constant=None, random_state=2394, strategy='prior')
2023-05-25 21:11:01,999:INFO:create_model() successfully completed......................................
2023-05-25 21:11:02,174:INFO:SubProcess create_model() end ==================================
2023-05-25 21:11:02,174:INFO:Creating metrics dataframe
2023-05-25 21:11:02,194:INFO:Initializing create_model()
2023-05-25 21:11:02,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE735A16C0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2394, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:11:02,194:INFO:Checking exceptions
2023-05-25 21:11:02,195:INFO:Importing libraries
2023-05-25 21:11:02,195:INFO:Copying training dataset
2023-05-25 21:11:02,200:INFO:Defining folds
2023-05-25 21:11:02,200:INFO:Declaring metric variables
2023-05-25 21:11:02,200:INFO:Importing untrained model
2023-05-25 21:11:02,200:INFO:Declaring custom model
2023-05-25 21:11:02,201:INFO:Random Forest Classifier Imported successfully
2023-05-25 21:11:02,201:INFO:Cross validation set to False
2023-05-25 21:11:02,201:INFO:Fitting Model
2023-05-25 21:11:02,836:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2394, verbose=0, warm_start=False)
2023-05-25 21:11:02,836:INFO:create_model() successfully completed......................................
2023-05-25 21:11:03,038:INFO:_master_model_container: 14
2023-05-25 21:11:03,039:INFO:_display_container: 2
2023-05-25 21:11:03,039:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2394, verbose=0, warm_start=False)
2023-05-25 21:11:03,039:INFO:compare_models() successfully completed......................................
2023-05-25 21:13:38,997:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_10308\1569036350.py:20: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  correlation_matrix = scdf.corr()

2023-05-25 21:13:46,295:INFO:PyCaret ClassificationExperiment
2023-05-25 21:13:46,295:INFO:Logging name: clf-default-name
2023-05-25 21:13:46,296:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 21:13:46,296:INFO:version 3.0.2
2023-05-25 21:13:46,296:INFO:Initializing setup()
2023-05-25 21:13:46,296:INFO:self.USI: 0f99
2023-05-25 21:13:46,296:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 21:13:46,296:INFO:Checking environment
2023-05-25 21:13:46,296:INFO:python_version: 3.10.9
2023-05-25 21:13:46,296:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 21:13:46,296:INFO:machine: AMD64
2023-05-25 21:13:46,296:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 21:13:46,296:INFO:Memory: svmem(total=17112055808, available=5250826240, percent=69.3, used=11861229568, free=5250826240)
2023-05-25 21:13:46,296:INFO:Physical Core: 8
2023-05-25 21:13:46,296:INFO:Logical Core: 16
2023-05-25 21:13:46,296:INFO:Checking libraries
2023-05-25 21:13:46,296:INFO:System:
2023-05-25 21:13:46,296:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 21:13:46,296:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 21:13:46,296:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 21:13:46,296:INFO:PyCaret required dependencies:
2023-05-25 21:13:46,297:INFO:                 pip: 22.3.1
2023-05-25 21:13:46,297:INFO:          setuptools: 65.6.3
2023-05-25 21:13:46,297:INFO:             pycaret: 3.0.2
2023-05-25 21:13:46,297:INFO:             IPython: 8.10.0
2023-05-25 21:13:46,297:INFO:          ipywidgets: 7.6.5
2023-05-25 21:13:46,297:INFO:                tqdm: 4.64.1
2023-05-25 21:13:46,297:INFO:               numpy: 1.23.5
2023-05-25 21:13:46,297:INFO:              pandas: 1.5.3
2023-05-25 21:13:46,297:INFO:              jinja2: 3.1.2
2023-05-25 21:13:46,297:INFO:               scipy: 1.10.0
2023-05-25 21:13:46,297:INFO:              joblib: 1.1.1
2023-05-25 21:13:46,297:INFO:             sklearn: 1.2.1
2023-05-25 21:13:46,297:INFO:                pyod: 1.0.9
2023-05-25 21:13:46,298:INFO:            imblearn: 0.10.1
2023-05-25 21:13:46,298:INFO:   category_encoders: 2.6.1
2023-05-25 21:13:46,298:INFO:            lightgbm: 3.3.5
2023-05-25 21:13:46,298:INFO:               numba: 0.56.4
2023-05-25 21:13:46,298:INFO:            requests: 2.28.1
2023-05-25 21:13:46,298:INFO:          matplotlib: 3.7.0
2023-05-25 21:13:46,298:INFO:          scikitplot: 0.3.7
2023-05-25 21:13:46,298:INFO:         yellowbrick: 1.5
2023-05-25 21:13:46,298:INFO:              plotly: 5.9.0
2023-05-25 21:13:46,298:INFO:             kaleido: 0.2.1
2023-05-25 21:13:46,298:INFO:         statsmodels: 0.13.5
2023-05-25 21:13:46,298:INFO:              sktime: 0.17.0
2023-05-25 21:13:46,298:INFO:               tbats: 1.1.3
2023-05-25 21:13:46,298:INFO:            pmdarima: 2.0.3
2023-05-25 21:13:46,298:INFO:              psutil: 5.9.0
2023-05-25 21:13:46,298:INFO:PyCaret optional dependencies:
2023-05-25 21:13:46,298:INFO:                shap: Not installed
2023-05-25 21:13:46,298:INFO:           interpret: Not installed
2023-05-25 21:13:46,298:INFO:                umap: Not installed
2023-05-25 21:13:46,298:INFO:    pandas_profiling: Not installed
2023-05-25 21:13:46,298:INFO:  explainerdashboard: Not installed
2023-05-25 21:13:46,298:INFO:             autoviz: Not installed
2023-05-25 21:13:46,298:INFO:           fairlearn: Not installed
2023-05-25 21:13:46,298:INFO:             xgboost: Not installed
2023-05-25 21:13:46,298:INFO:            catboost: Not installed
2023-05-25 21:13:46,299:INFO:              kmodes: Not installed
2023-05-25 21:13:46,299:INFO:             mlxtend: Not installed
2023-05-25 21:13:46,299:INFO:       statsforecast: Not installed
2023-05-25 21:13:46,299:INFO:        tune_sklearn: Not installed
2023-05-25 21:13:46,299:INFO:                 ray: Not installed
2023-05-25 21:13:46,299:INFO:            hyperopt: Not installed
2023-05-25 21:13:46,299:INFO:              optuna: Not installed
2023-05-25 21:13:46,299:INFO:               skopt: Not installed
2023-05-25 21:13:46,299:INFO:              mlflow: Not installed
2023-05-25 21:13:46,299:INFO:              gradio: Not installed
2023-05-25 21:13:46,299:INFO:             fastapi: Not installed
2023-05-25 21:13:46,299:INFO:             uvicorn: Not installed
2023-05-25 21:13:46,299:INFO:              m2cgen: Not installed
2023-05-25 21:13:46,299:INFO:           evidently: Not installed
2023-05-25 21:13:46,299:INFO:               fugue: Not installed
2023-05-25 21:13:46,299:INFO:           streamlit: Not installed
2023-05-25 21:13:46,299:INFO:             prophet: Not installed
2023-05-25 21:13:46,299:INFO:None
2023-05-25 21:13:46,299:INFO:Set up data.
2023-05-25 21:13:46,307:INFO:Set up train/test split.
2023-05-25 21:13:46,313:INFO:Set up index.
2023-05-25 21:13:46,313:INFO:Set up folding strategy.
2023-05-25 21:13:46,313:INFO:Assigning column types.
2023-05-25 21:13:46,317:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 21:13:46,355:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 21:13:46,356:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:13:46,380:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:46,380:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:46,420:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 21:13:46,420:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:13:46,444:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:46,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:46,445:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 21:13:46,484:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:13:46,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:46,509:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:46,549:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:13:46,574:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:46,574:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:46,574:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 21:13:46,638:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:46,638:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:46,700:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:46,700:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:46,701:INFO:Preparing preprocessing pipeline...
2023-05-25 21:13:46,702:INFO:Set up label encoding.
2023-05-25 21:13:46,702:INFO:Set up simple imputation.
2023-05-25 21:13:46,705:INFO:Set up encoding of categorical features.
2023-05-25 21:13:46,775:INFO:Finished creating preprocessing pipeline.
2023-05-25 21:13:46,782:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['GameID', 'APM', 'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightCli...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours'],
                                    transformer=TargetEncoder(cols=['Age',
                                                                    'HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 21:13:46,782:INFO:Creating final display dataframe.
2023-05-25 21:13:47,006:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      4713
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                (3338, 18)
5        Transformed data shape                                (3338, 18)
6   Transformed train set shape                                (2670, 18)
7    Transformed test set shape                                 (668, 18)
8              Numeric features                                        14
9          Categorical features                                         3
10                   Preprocess                                      True
11              Imputation type                                    simple
12           Numeric imputation                                      mean
13       Categorical imputation                                      mode
14     Maximum one-hot encoding                                        25
15              Encoding method                                      None
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                         5
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      0f99
2023-05-25 21:13:47,077:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:47,078:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:47,151:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:47,151:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:13:47,152:INFO:setup() successfully completed in 1.13s...............
2023-05-25 21:13:50,585:INFO:Initializing compare_models()
2023-05-25 21:13:50,585:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 21:13:50,585:INFO:Checking exceptions
2023-05-25 21:13:50,590:INFO:Preparing display monitor
2023-05-25 21:13:50,617:INFO:Initializing Logistic Regression
2023-05-25 21:13:50,617:INFO:Total runtime is 0.0 minutes
2023-05-25 21:13:50,620:INFO:SubProcess create_model() called ==================================
2023-05-25 21:13:50,620:INFO:Initializing create_model()
2023-05-25 21:13:50,620:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:13:50,620:INFO:Checking exceptions
2023-05-25 21:13:50,620:INFO:Importing libraries
2023-05-25 21:13:50,620:INFO:Copying training dataset
2023-05-25 21:13:50,626:INFO:Defining folds
2023-05-25 21:13:50,626:INFO:Declaring metric variables
2023-05-25 21:13:50,629:INFO:Importing untrained model
2023-05-25 21:13:50,632:INFO:Logistic Regression Imported successfully
2023-05-25 21:13:50,639:INFO:Starting cross validation
2023-05-25 21:13:50,640:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:13:51,321:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:13:51,328:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:13:51,340:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:13:51,341:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:13:51,346:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:13:51,452:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,454:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,455:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:51,455:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,461:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,462:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,463:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:51,463:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,483:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,485:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,487:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,487:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:51,488:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,488:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,489:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:51,490:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,497:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,498:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:51,499:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:51,499:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:52,616:INFO:Calculating mean and std
2023-05-25 21:13:52,617:INFO:Creating metrics dataframe
2023-05-25 21:13:53,030:INFO:Uploading results into container
2023-05-25 21:13:53,030:INFO:Uploading model into container now
2023-05-25 21:13:53,031:INFO:_master_model_container: 1
2023-05-25 21:13:53,031:INFO:_display_container: 2
2023-05-25 21:13:53,031:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=4713, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 21:13:53,031:INFO:create_model() successfully completed......................................
2023-05-25 21:13:53,220:INFO:SubProcess create_model() end ==================================
2023-05-25 21:13:53,220:INFO:Creating metrics dataframe
2023-05-25 21:13:53,228:INFO:Initializing K Neighbors Classifier
2023-05-25 21:13:53,228:INFO:Total runtime is 0.043520053227742515 minutes
2023-05-25 21:13:53,231:INFO:SubProcess create_model() called ==================================
2023-05-25 21:13:53,231:INFO:Initializing create_model()
2023-05-25 21:13:53,231:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:13:53,231:INFO:Checking exceptions
2023-05-25 21:13:53,231:INFO:Importing libraries
2023-05-25 21:13:53,231:INFO:Copying training dataset
2023-05-25 21:13:53,237:INFO:Defining folds
2023-05-25 21:13:53,237:INFO:Declaring metric variables
2023-05-25 21:13:53,240:INFO:Importing untrained model
2023-05-25 21:13:53,243:INFO:K Neighbors Classifier Imported successfully
2023-05-25 21:13:53,250:INFO:Starting cross validation
2023-05-25 21:13:53,251:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:13:53,678:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,680:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,680:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:53,681:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,690:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,691:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,692:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,692:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:53,692:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,692:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,693:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,693:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,694:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:53,694:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:53,694:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,695:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,696:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,697:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:53,698:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:54,852:INFO:Calculating mean and std
2023-05-25 21:13:54,853:INFO:Creating metrics dataframe
2023-05-25 21:13:55,243:INFO:Uploading results into container
2023-05-25 21:13:55,244:INFO:Uploading model into container now
2023-05-25 21:13:55,244:INFO:_master_model_container: 2
2023-05-25 21:13:55,244:INFO:_display_container: 2
2023-05-25 21:13:55,244:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 21:13:55,244:INFO:create_model() successfully completed......................................
2023-05-25 21:13:55,437:INFO:SubProcess create_model() end ==================================
2023-05-25 21:13:55,437:INFO:Creating metrics dataframe
2023-05-25 21:13:55,447:INFO:Initializing Naive Bayes
2023-05-25 21:13:55,447:INFO:Total runtime is 0.08049962917963664 minutes
2023-05-25 21:13:55,449:INFO:SubProcess create_model() called ==================================
2023-05-25 21:13:55,449:INFO:Initializing create_model()
2023-05-25 21:13:55,450:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:13:55,450:INFO:Checking exceptions
2023-05-25 21:13:55,450:INFO:Importing libraries
2023-05-25 21:13:55,450:INFO:Copying training dataset
2023-05-25 21:13:55,455:INFO:Defining folds
2023-05-25 21:13:55,455:INFO:Declaring metric variables
2023-05-25 21:13:55,459:INFO:Importing untrained model
2023-05-25 21:13:55,462:INFO:Naive Bayes Imported successfully
2023-05-25 21:13:55,468:INFO:Starting cross validation
2023-05-25 21:13:55,469:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:13:55,789:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,790:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,791:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,802:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,804:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,804:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,805:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,805:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,806:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,806:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,807:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,810:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,817:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,818:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:55,820:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:56,913:INFO:Calculating mean and std
2023-05-25 21:13:56,914:INFO:Creating metrics dataframe
2023-05-25 21:13:57,306:INFO:Uploading results into container
2023-05-25 21:13:57,307:INFO:Uploading model into container now
2023-05-25 21:13:57,307:INFO:_master_model_container: 3
2023-05-25 21:13:57,307:INFO:_display_container: 2
2023-05-25 21:13:57,307:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 21:13:57,307:INFO:create_model() successfully completed......................................
2023-05-25 21:13:57,511:INFO:SubProcess create_model() end ==================================
2023-05-25 21:13:57,511:INFO:Creating metrics dataframe
2023-05-25 21:13:57,522:INFO:Initializing Decision Tree Classifier
2023-05-25 21:13:57,522:INFO:Total runtime is 0.11507838567097983 minutes
2023-05-25 21:13:57,525:INFO:SubProcess create_model() called ==================================
2023-05-25 21:13:57,525:INFO:Initializing create_model()
2023-05-25 21:13:57,525:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:13:57,525:INFO:Checking exceptions
2023-05-25 21:13:57,525:INFO:Importing libraries
2023-05-25 21:13:57,525:INFO:Copying training dataset
2023-05-25 21:13:57,531:INFO:Defining folds
2023-05-25 21:13:57,531:INFO:Declaring metric variables
2023-05-25 21:13:57,535:INFO:Importing untrained model
2023-05-25 21:13:57,538:INFO:Decision Tree Classifier Imported successfully
2023-05-25 21:13:57,544:INFO:Starting cross validation
2023-05-25 21:13:57,545:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:13:57,790:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,792:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,793:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,803:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,804:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,805:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,807:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,807:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,809:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,821:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,823:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,824:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,901:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,902:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:57,903:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:58,958:INFO:Calculating mean and std
2023-05-25 21:13:58,959:INFO:Creating metrics dataframe
2023-05-25 21:13:59,352:INFO:Uploading results into container
2023-05-25 21:13:59,352:INFO:Uploading model into container now
2023-05-25 21:13:59,353:INFO:_master_model_container: 4
2023-05-25 21:13:59,353:INFO:_display_container: 2
2023-05-25 21:13:59,353:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=4713, splitter='best')
2023-05-25 21:13:59,353:INFO:create_model() successfully completed......................................
2023-05-25 21:13:59,576:INFO:SubProcess create_model() end ==================================
2023-05-25 21:13:59,576:INFO:Creating metrics dataframe
2023-05-25 21:13:59,585:INFO:Initializing SVM - Linear Kernel
2023-05-25 21:13:59,585:INFO:Total runtime is 0.149474573135376 minutes
2023-05-25 21:13:59,589:INFO:SubProcess create_model() called ==================================
2023-05-25 21:13:59,589:INFO:Initializing create_model()
2023-05-25 21:13:59,589:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:13:59,589:INFO:Checking exceptions
2023-05-25 21:13:59,589:INFO:Importing libraries
2023-05-25 21:13:59,590:INFO:Copying training dataset
2023-05-25 21:13:59,595:INFO:Defining folds
2023-05-25 21:13:59,595:INFO:Declaring metric variables
2023-05-25 21:13:59,598:INFO:Importing untrained model
2023-05-25 21:13:59,602:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 21:13:59,608:INFO:Starting cross validation
2023-05-25 21:13:59,609:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:13:59,828:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:13:59,828:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,830:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,831:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:59,832:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,843:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:13:59,844:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,845:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,847:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:59,847:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,851:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:13:59,852:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,854:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:59,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,856:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:13:59,857:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,858:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,859:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:59,860:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,875:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:13:59,875:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,877:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:13:59,877:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:13:59,877:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,045:INFO:Calculating mean and std
2023-05-25 21:14:01,046:INFO:Creating metrics dataframe
2023-05-25 21:14:01,441:INFO:Uploading results into container
2023-05-25 21:14:01,442:INFO:Uploading model into container now
2023-05-25 21:14:01,442:INFO:_master_model_container: 5
2023-05-25 21:14:01,442:INFO:_display_container: 2
2023-05-25 21:14:01,443:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=4713, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 21:14:01,443:INFO:create_model() successfully completed......................................
2023-05-25 21:14:01,623:INFO:SubProcess create_model() end ==================================
2023-05-25 21:14:01,623:INFO:Creating metrics dataframe
2023-05-25 21:14:01,632:INFO:Initializing Ridge Classifier
2023-05-25 21:14:01,632:INFO:Total runtime is 0.18358556032180787 minutes
2023-05-25 21:14:01,635:INFO:SubProcess create_model() called ==================================
2023-05-25 21:14:01,635:INFO:Initializing create_model()
2023-05-25 21:14:01,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:14:01,635:INFO:Checking exceptions
2023-05-25 21:14:01,635:INFO:Importing libraries
2023-05-25 21:14:01,635:INFO:Copying training dataset
2023-05-25 21:14:01,642:INFO:Defining folds
2023-05-25 21:14:01,642:INFO:Declaring metric variables
2023-05-25 21:14:01,646:INFO:Importing untrained model
2023-05-25 21:14:01,649:INFO:Ridge Classifier Imported successfully
2023-05-25 21:14:01,655:INFO:Starting cross validation
2023-05-25 21:14:01,656:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:14:01,822:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:14:01,823:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,824:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,825:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:01,825:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,835:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:14:01,836:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,836:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:14:01,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,838:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:01,838:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,838:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:14:01,838:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,838:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,839:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:01,839:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:14:01,839:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,839:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,840:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,840:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,840:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:01,841:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:01,841:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:01,842:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:02,989:INFO:Calculating mean and std
2023-05-25 21:14:02,990:INFO:Creating metrics dataframe
2023-05-25 21:14:03,381:INFO:Uploading results into container
2023-05-25 21:14:03,381:INFO:Uploading model into container now
2023-05-25 21:14:03,381:INFO:_master_model_container: 6
2023-05-25 21:14:03,382:INFO:_display_container: 2
2023-05-25 21:14:03,382:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=4713, solver='auto',
                tol=0.0001)
2023-05-25 21:14:03,382:INFO:create_model() successfully completed......................................
2023-05-25 21:14:03,571:INFO:SubProcess create_model() end ==================================
2023-05-25 21:14:03,571:INFO:Creating metrics dataframe
2023-05-25 21:14:03,581:INFO:Initializing Random Forest Classifier
2023-05-25 21:14:03,581:INFO:Total runtime is 0.21606473525365194 minutes
2023-05-25 21:14:03,584:INFO:SubProcess create_model() called ==================================
2023-05-25 21:14:03,584:INFO:Initializing create_model()
2023-05-25 21:14:03,584:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:14:03,584:INFO:Checking exceptions
2023-05-25 21:14:03,584:INFO:Importing libraries
2023-05-25 21:14:03,584:INFO:Copying training dataset
2023-05-25 21:14:03,590:INFO:Defining folds
2023-05-25 21:14:03,590:INFO:Declaring metric variables
2023-05-25 21:14:03,594:INFO:Importing untrained model
2023-05-25 21:14:03,597:INFO:Random Forest Classifier Imported successfully
2023-05-25 21:14:03,603:INFO:Starting cross validation
2023-05-25 21:14:03,605:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:14:04,466:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,467:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,467:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,468:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,469:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:04,469:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:04,469:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,469:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,470:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,471:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,472:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:04,472:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,515:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,516:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,517:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:04,517:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,528:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:04,528:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:04,529:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:05,671:INFO:Calculating mean and std
2023-05-25 21:14:05,672:INFO:Creating metrics dataframe
2023-05-25 21:14:06,065:INFO:Uploading results into container
2023-05-25 21:14:06,066:INFO:Uploading model into container now
2023-05-25 21:14:06,066:INFO:_master_model_container: 7
2023-05-25 21:14:06,066:INFO:_display_container: 2
2023-05-25 21:14:06,067:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4713, verbose=0, warm_start=False)
2023-05-25 21:14:06,067:INFO:create_model() successfully completed......................................
2023-05-25 21:14:06,245:INFO:SubProcess create_model() end ==================================
2023-05-25 21:14:06,245:INFO:Creating metrics dataframe
2023-05-25 21:14:06,256:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 21:14:06,257:INFO:Total runtime is 0.2606637080510457 minutes
2023-05-25 21:14:06,259:INFO:SubProcess create_model() called ==================================
2023-05-25 21:14:06,260:INFO:Initializing create_model()
2023-05-25 21:14:06,260:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:14:06,260:INFO:Checking exceptions
2023-05-25 21:14:06,260:INFO:Importing libraries
2023-05-25 21:14:06,260:INFO:Copying training dataset
2023-05-25 21:14:06,265:INFO:Defining folds
2023-05-25 21:14:06,265:INFO:Declaring metric variables
2023-05-25 21:14:06,270:INFO:Importing untrained model
2023-05-25 21:14:06,274:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 21:14:06,279:INFO:Starting cross validation
2023-05-25 21:14:06,280:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:14:06,402:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-05-25 21:14:06,522:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,524:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:06,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,527:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,528:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,533:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,533:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,534:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,535:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,536:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,536:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,558:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,559:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:06,561:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:07,683:INFO:Calculating mean and std
2023-05-25 21:14:07,684:INFO:Creating metrics dataframe
2023-05-25 21:14:08,091:INFO:Uploading results into container
2023-05-25 21:14:08,091:INFO:Uploading model into container now
2023-05-25 21:14:08,091:INFO:_master_model_container: 8
2023-05-25 21:14:08,091:INFO:_display_container: 2
2023-05-25 21:14:08,092:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 21:14:08,092:INFO:create_model() successfully completed......................................
2023-05-25 21:14:08,296:INFO:SubProcess create_model() end ==================================
2023-05-25 21:14:08,296:INFO:Creating metrics dataframe
2023-05-25 21:14:08,305:INFO:Initializing Ada Boost Classifier
2023-05-25 21:14:08,305:INFO:Total runtime is 0.29480576515197754 minutes
2023-05-25 21:14:08,309:INFO:SubProcess create_model() called ==================================
2023-05-25 21:14:08,310:INFO:Initializing create_model()
2023-05-25 21:14:08,310:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:14:08,310:INFO:Checking exceptions
2023-05-25 21:14:08,310:INFO:Importing libraries
2023-05-25 21:14:08,310:INFO:Copying training dataset
2023-05-25 21:14:08,316:INFO:Defining folds
2023-05-25 21:14:08,316:INFO:Declaring metric variables
2023-05-25 21:14:08,318:INFO:Importing untrained model
2023-05-25 21:14:08,322:INFO:Ada Boost Classifier Imported successfully
2023-05-25 21:14:08,329:INFO:Starting cross validation
2023-05-25 21:14:08,330:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:14:08,930:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,932:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,934:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:08,935:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,942:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,944:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,945:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:08,946:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,954:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,955:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,959:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,962:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,964:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,981:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,983:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:08,984:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:10,175:INFO:Calculating mean and std
2023-05-25 21:14:10,177:INFO:Creating metrics dataframe
2023-05-25 21:14:10,583:INFO:Uploading results into container
2023-05-25 21:14:10,584:INFO:Uploading model into container now
2023-05-25 21:14:10,584:INFO:_master_model_container: 9
2023-05-25 21:14:10,584:INFO:_display_container: 2
2023-05-25 21:14:10,584:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=4713)
2023-05-25 21:14:10,584:INFO:create_model() successfully completed......................................
2023-05-25 21:14:10,764:INFO:SubProcess create_model() end ==================================
2023-05-25 21:14:10,764:INFO:Creating metrics dataframe
2023-05-25 21:14:10,775:INFO:Initializing Gradient Boosting Classifier
2023-05-25 21:14:10,775:INFO:Total runtime is 0.33596777121225996 minutes
2023-05-25 21:14:10,778:INFO:SubProcess create_model() called ==================================
2023-05-25 21:14:10,778:INFO:Initializing create_model()
2023-05-25 21:14:10,778:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:14:10,779:INFO:Checking exceptions
2023-05-25 21:14:10,779:INFO:Importing libraries
2023-05-25 21:14:10,779:INFO:Copying training dataset
2023-05-25 21:14:10,784:INFO:Defining folds
2023-05-25 21:14:10,784:INFO:Declaring metric variables
2023-05-25 21:14:10,787:INFO:Importing untrained model
2023-05-25 21:14:10,790:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 21:14:10,796:INFO:Starting cross validation
2023-05-25 21:14:10,797:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:14:18,370:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,371:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,373:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,423:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,425:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,427:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,491:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,493:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,493:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,494:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,494:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,527:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,529:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:18,530:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:19,612:INFO:Calculating mean and std
2023-05-25 21:14:19,613:INFO:Creating metrics dataframe
2023-05-25 21:14:20,025:INFO:Uploading results into container
2023-05-25 21:14:20,027:INFO:Uploading model into container now
2023-05-25 21:14:20,027:INFO:_master_model_container: 10
2023-05-25 21:14:20,027:INFO:_display_container: 2
2023-05-25 21:14:20,027:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=4713, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 21:14:20,027:INFO:create_model() successfully completed......................................
2023-05-25 21:14:20,221:INFO:SubProcess create_model() end ==================================
2023-05-25 21:14:20,221:INFO:Creating metrics dataframe
2023-05-25 21:14:20,232:INFO:Initializing Linear Discriminant Analysis
2023-05-25 21:14:20,232:INFO:Total runtime is 0.4935830116271973 minutes
2023-05-25 21:14:20,235:INFO:SubProcess create_model() called ==================================
2023-05-25 21:14:20,235:INFO:Initializing create_model()
2023-05-25 21:14:20,235:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:14:20,235:INFO:Checking exceptions
2023-05-25 21:14:20,235:INFO:Importing libraries
2023-05-25 21:14:20,235:INFO:Copying training dataset
2023-05-25 21:14:20,240:INFO:Defining folds
2023-05-25 21:14:20,240:INFO:Declaring metric variables
2023-05-25 21:14:20,244:INFO:Importing untrained model
2023-05-25 21:14:20,247:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 21:14:20,253:INFO:Starting cross validation
2023-05-25 21:14:20,255:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:14:20,493:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:20,494:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:20,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:20,499:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:20,500:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:20,502:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:20,507:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:20,508:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:20,510:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:20,511:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:20,513:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:20,518:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:20,519:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:20,521:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:21,647:INFO:Calculating mean and std
2023-05-25 21:14:21,648:INFO:Creating metrics dataframe
2023-05-25 21:14:22,042:INFO:Uploading results into container
2023-05-25 21:14:22,043:INFO:Uploading model into container now
2023-05-25 21:14:22,043:INFO:_master_model_container: 11
2023-05-25 21:14:22,043:INFO:_display_container: 2
2023-05-25 21:14:22,044:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 21:14:22,044:INFO:create_model() successfully completed......................................
2023-05-25 21:14:22,224:INFO:SubProcess create_model() end ==================================
2023-05-25 21:14:22,224:INFO:Creating metrics dataframe
2023-05-25 21:14:22,237:INFO:Initializing Extra Trees Classifier
2023-05-25 21:14:22,237:INFO:Total runtime is 0.5269936958948772 minutes
2023-05-25 21:14:22,240:INFO:SubProcess create_model() called ==================================
2023-05-25 21:14:22,240:INFO:Initializing create_model()
2023-05-25 21:14:22,240:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:14:22,240:INFO:Checking exceptions
2023-05-25 21:14:22,240:INFO:Importing libraries
2023-05-25 21:14:22,240:INFO:Copying training dataset
2023-05-25 21:14:22,246:INFO:Defining folds
2023-05-25 21:14:22,246:INFO:Declaring metric variables
2023-05-25 21:14:22,250:INFO:Importing untrained model
2023-05-25 21:14:22,253:INFO:Extra Trees Classifier Imported successfully
2023-05-25 21:14:22,259:INFO:Starting cross validation
2023-05-25 21:14:22,260:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:14:22,987:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:22,988:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:22,989:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:22,989:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:22,992:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:22,993:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:22,994:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:22,994:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:22,994:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:22,995:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:22,997:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:22,997:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:22,999:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:23,000:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:23,001:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:23,001:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:23,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:23,042:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:23,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:23,044:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:24,184:INFO:Calculating mean and std
2023-05-25 21:14:24,185:INFO:Creating metrics dataframe
2023-05-25 21:14:24,592:INFO:Uploading results into container
2023-05-25 21:14:24,593:INFO:Uploading model into container now
2023-05-25 21:14:24,593:INFO:_master_model_container: 12
2023-05-25 21:14:24,593:INFO:_display_container: 2
2023-05-25 21:14:24,594:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=4713, verbose=0, warm_start=False)
2023-05-25 21:14:24,594:INFO:create_model() successfully completed......................................
2023-05-25 21:14:24,784:INFO:SubProcess create_model() end ==================================
2023-05-25 21:14:24,785:INFO:Creating metrics dataframe
2023-05-25 21:14:24,797:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 21:14:24,797:INFO:Total runtime is 0.5696629365285238 minutes
2023-05-25 21:14:24,800:INFO:SubProcess create_model() called ==================================
2023-05-25 21:14:24,800:INFO:Initializing create_model()
2023-05-25 21:14:24,800:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:14:24,800:INFO:Checking exceptions
2023-05-25 21:14:24,800:INFO:Importing libraries
2023-05-25 21:14:24,801:INFO:Copying training dataset
2023-05-25 21:14:24,807:INFO:Defining folds
2023-05-25 21:14:24,807:INFO:Declaring metric variables
2023-05-25 21:14:24,811:INFO:Importing untrained model
2023-05-25 21:14:24,814:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 21:14:24,820:INFO:Starting cross validation
2023-05-25 21:14:24,821:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:14:26,205:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:26,207:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:26,207:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:26,208:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:26,916:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:26,919:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:26,920:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:26,951:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:26,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:26,953:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:26,997:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:26,998:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:27,000:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:27,011:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:27,012:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:27,013:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:27,013:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:27,818:INFO:Calculating mean and std
2023-05-25 21:14:27,819:INFO:Creating metrics dataframe
2023-05-25 21:14:28,210:INFO:Uploading results into container
2023-05-25 21:14:28,211:INFO:Uploading model into container now
2023-05-25 21:14:28,211:INFO:_master_model_container: 13
2023-05-25 21:14:28,211:INFO:_display_container: 2
2023-05-25 21:14:28,212:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=4713, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 21:14:28,212:INFO:create_model() successfully completed......................................
2023-05-25 21:14:28,393:INFO:SubProcess create_model() end ==================================
2023-05-25 21:14:28,393:INFO:Creating metrics dataframe
2023-05-25 21:14:28,404:INFO:Initializing Dummy Classifier
2023-05-25 21:14:28,404:INFO:Total runtime is 0.6297875603040061 minutes
2023-05-25 21:14:28,407:INFO:SubProcess create_model() called ==================================
2023-05-25 21:14:28,408:INFO:Initializing create_model()
2023-05-25 21:14:28,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE76477520>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:14:28,408:INFO:Checking exceptions
2023-05-25 21:14:28,408:INFO:Importing libraries
2023-05-25 21:14:28,408:INFO:Copying training dataset
2023-05-25 21:14:28,413:INFO:Defining folds
2023-05-25 21:14:28,414:INFO:Declaring metric variables
2023-05-25 21:14:28,417:INFO:Importing untrained model
2023-05-25 21:14:28,420:INFO:Dummy Classifier Imported successfully
2023-05-25 21:14:28,427:INFO:Starting cross validation
2023-05-25 21:14:28,428:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:14:28,639:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,641:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,642:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:28,642:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,644:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,645:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,646:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,646:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,646:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:28,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:28,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,648:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,650:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,650:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,651:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:28,651:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,651:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:28,652:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:14:28,653:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:14:29,847:INFO:Calculating mean and std
2023-05-25 21:14:29,848:INFO:Creating metrics dataframe
2023-05-25 21:14:30,263:INFO:Uploading results into container
2023-05-25 21:14:30,263:INFO:Uploading model into container now
2023-05-25 21:14:30,264:INFO:_master_model_container: 14
2023-05-25 21:14:30,264:INFO:_display_container: 2
2023-05-25 21:14:30,264:INFO:DummyClassifier(constant=None, random_state=4713, strategy='prior')
2023-05-25 21:14:30,264:INFO:create_model() successfully completed......................................
2023-05-25 21:14:30,461:INFO:SubProcess create_model() end ==================================
2023-05-25 21:14:30,461:INFO:Creating metrics dataframe
2023-05-25 21:14:30,482:INFO:Initializing create_model()
2023-05-25 21:14:30,482:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE76A5C5B0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4713, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:14:30,482:INFO:Checking exceptions
2023-05-25 21:14:30,483:INFO:Importing libraries
2023-05-25 21:14:30,483:INFO:Copying training dataset
2023-05-25 21:14:30,487:INFO:Defining folds
2023-05-25 21:14:30,488:INFO:Declaring metric variables
2023-05-25 21:14:30,488:INFO:Importing untrained model
2023-05-25 21:14:30,488:INFO:Declaring custom model
2023-05-25 21:14:30,488:INFO:Random Forest Classifier Imported successfully
2023-05-25 21:14:30,490:INFO:Cross validation set to False
2023-05-25 21:14:30,490:INFO:Fitting Model
2023-05-25 21:14:31,190:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4713, verbose=0, warm_start=False)
2023-05-25 21:14:31,190:INFO:create_model() successfully completed......................................
2023-05-25 21:14:31,397:INFO:_master_model_container: 14
2023-05-25 21:14:31,397:INFO:_display_container: 2
2023-05-25 21:14:31,398:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=4713, verbose=0, warm_start=False)
2023-05-25 21:14:31,398:INFO:compare_models() successfully completed......................................
2023-05-25 21:15:54,154:INFO:PyCaret ClassificationExperiment
2023-05-25 21:15:54,154:INFO:Logging name: clf-default-name
2023-05-25 21:15:54,154:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 21:15:54,154:INFO:version 3.0.2
2023-05-25 21:15:54,154:INFO:Initializing setup()
2023-05-25 21:15:54,154:INFO:self.USI: 13b5
2023-05-25 21:15:54,154:INFO:self._variable_keys: {'fix_imbalance', 'gpu_param', 'fold_generator', 'pipeline', 'gpu_n_jobs_param', 'fold_shuffle_param', 'n_jobs_param', 'memory', 'seed', 'X', 'fold_groups_param', 'y_train', 'y', 'idx', 'exp_id', 'html_param', '_ml_usecase', 'exp_name_log', 'X_train', '_available_plots', 'log_plots_param', 'USI', 'is_multiclass', 'y_test', 'logging_param', 'X_test', 'target_param', 'data'}
2023-05-25 21:15:54,154:INFO:Checking environment
2023-05-25 21:15:54,154:INFO:python_version: 3.10.9
2023-05-25 21:15:54,154:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 21:15:54,154:INFO:machine: AMD64
2023-05-25 21:15:54,154:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 21:15:54,154:INFO:Memory: svmem(total=17112055808, available=5077176320, percent=70.3, used=12034879488, free=5077176320)
2023-05-25 21:15:54,154:INFO:Physical Core: 8
2023-05-25 21:15:54,155:INFO:Logical Core: 16
2023-05-25 21:15:54,155:INFO:Checking libraries
2023-05-25 21:15:54,155:INFO:System:
2023-05-25 21:15:54,155:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 21:15:54,155:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 21:15:54,155:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 21:15:54,155:INFO:PyCaret required dependencies:
2023-05-25 21:15:54,155:INFO:                 pip: 22.3.1
2023-05-25 21:15:54,155:INFO:          setuptools: 65.6.3
2023-05-25 21:15:54,155:INFO:             pycaret: 3.0.2
2023-05-25 21:15:54,155:INFO:             IPython: 8.10.0
2023-05-25 21:15:54,155:INFO:          ipywidgets: 7.6.5
2023-05-25 21:15:54,155:INFO:                tqdm: 4.64.1
2023-05-25 21:15:54,155:INFO:               numpy: 1.23.5
2023-05-25 21:15:54,155:INFO:              pandas: 1.5.3
2023-05-25 21:15:54,155:INFO:              jinja2: 3.1.2
2023-05-25 21:15:54,155:INFO:               scipy: 1.10.0
2023-05-25 21:15:54,155:INFO:              joblib: 1.1.1
2023-05-25 21:15:54,155:INFO:             sklearn: 1.2.1
2023-05-25 21:15:54,155:INFO:                pyod: 1.0.9
2023-05-25 21:15:54,155:INFO:            imblearn: 0.10.1
2023-05-25 21:15:54,155:INFO:   category_encoders: 2.6.1
2023-05-25 21:15:54,155:INFO:            lightgbm: 3.3.5
2023-05-25 21:15:54,156:INFO:               numba: 0.56.4
2023-05-25 21:15:54,156:INFO:            requests: 2.28.1
2023-05-25 21:15:54,156:INFO:          matplotlib: 3.7.0
2023-05-25 21:15:54,156:INFO:          scikitplot: 0.3.7
2023-05-25 21:15:54,156:INFO:         yellowbrick: 1.5
2023-05-25 21:15:54,156:INFO:              plotly: 5.9.0
2023-05-25 21:15:54,156:INFO:             kaleido: 0.2.1
2023-05-25 21:15:54,156:INFO:         statsmodels: 0.13.5
2023-05-25 21:15:54,156:INFO:              sktime: 0.17.0
2023-05-25 21:15:54,156:INFO:               tbats: 1.1.3
2023-05-25 21:15:54,156:INFO:            pmdarima: 2.0.3
2023-05-25 21:15:54,156:INFO:              psutil: 5.9.0
2023-05-25 21:15:54,156:INFO:PyCaret optional dependencies:
2023-05-25 21:15:54,156:INFO:                shap: Not installed
2023-05-25 21:15:54,156:INFO:           interpret: Not installed
2023-05-25 21:15:54,156:INFO:                umap: Not installed
2023-05-25 21:15:54,156:INFO:    pandas_profiling: Not installed
2023-05-25 21:15:54,156:INFO:  explainerdashboard: Not installed
2023-05-25 21:15:54,156:INFO:             autoviz: Not installed
2023-05-25 21:15:54,156:INFO:           fairlearn: Not installed
2023-05-25 21:15:54,156:INFO:             xgboost: Not installed
2023-05-25 21:15:54,156:INFO:            catboost: Not installed
2023-05-25 21:15:54,156:INFO:              kmodes: Not installed
2023-05-25 21:15:54,157:INFO:             mlxtend: Not installed
2023-05-25 21:15:54,157:INFO:       statsforecast: Not installed
2023-05-25 21:15:54,157:INFO:        tune_sklearn: Not installed
2023-05-25 21:15:54,157:INFO:                 ray: Not installed
2023-05-25 21:15:54,157:INFO:            hyperopt: Not installed
2023-05-25 21:15:54,157:INFO:              optuna: Not installed
2023-05-25 21:15:54,157:INFO:               skopt: Not installed
2023-05-25 21:15:54,157:INFO:              mlflow: Not installed
2023-05-25 21:15:54,157:INFO:              gradio: Not installed
2023-05-25 21:15:54,157:INFO:             fastapi: Not installed
2023-05-25 21:15:54,157:INFO:             uvicorn: Not installed
2023-05-25 21:15:54,157:INFO:              m2cgen: Not installed
2023-05-25 21:15:54,157:INFO:           evidently: Not installed
2023-05-25 21:15:54,157:INFO:               fugue: Not installed
2023-05-25 21:15:54,157:INFO:           streamlit: Not installed
2023-05-25 21:15:54,157:INFO:             prophet: Not installed
2023-05-25 21:15:54,157:INFO:None
2023-05-25 21:15:54,157:INFO:Set up data.
2023-05-25 21:15:54,165:INFO:Set up train/test split.
2023-05-25 21:15:54,171:INFO:Set up index.
2023-05-25 21:15:54,171:INFO:Set up folding strategy.
2023-05-25 21:15:54,171:INFO:Assigning column types.
2023-05-25 21:15:54,175:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 21:15:54,217:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 21:15:54,218:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:15:54,243:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:54,243:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:54,284:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 21:15:54,284:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:15:54,309:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:54,309:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:54,310:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 21:15:54,351:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:15:54,375:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:54,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:54,417:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:15:54,441:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:54,441:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:54,442:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 21:15:54,508:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:54,509:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:54,575:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:54,575:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:54,575:INFO:Preparing preprocessing pipeline...
2023-05-25 21:15:54,576:INFO:Set up label encoding.
2023-05-25 21:15:54,576:INFO:Set up simple imputation.
2023-05-25 21:15:54,579:INFO:Set up encoding of categorical features.
2023-05-25 21:15:54,652:INFO:Finished creating preprocessing pipeline.
2023-05-25 21:15:54,658:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['APM', 'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'MinimapAttacks',
                                             'MinimapRightClicks',
                                             'Gap...
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('rest_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours'],
                                    transformer=TargetEncoder(cols=['Age',
                                                                    'HoursPerWeek',
                                                                    'TotalHours'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0)))],
         verbose=False)
2023-05-25 21:15:54,658:INFO:Creating final display dataframe.
2023-05-25 21:15:54,895:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      3071
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                (3338, 17)
5        Transformed data shape                                (3338, 17)
6   Transformed train set shape                                (2670, 17)
7    Transformed test set shape                                 (668, 17)
8              Numeric features                                        13
9          Categorical features                                         3
10                   Preprocess                                      True
11              Imputation type                                    simple
12           Numeric imputation                                      mean
13       Categorical imputation                                      mode
14     Maximum one-hot encoding                                        25
15              Encoding method                                      None
16               Fold Generator                           StratifiedKFold
17                  Fold Number                                         5
18                     CPU Jobs                                        -1
19                      Use GPU                                     False
20               Log Experiment                                     False
21              Experiment Name                          clf-default-name
22                          USI                                      13b5
2023-05-25 21:15:54,969:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:54,969:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:55,034:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:55,035:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:15:55,035:INFO:setup() successfully completed in 1.18s...............
2023-05-25 21:16:01,152:INFO:Initializing compare_models()
2023-05-25 21:16:01,152:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 21:16:01,152:INFO:Checking exceptions
2023-05-25 21:16:01,157:INFO:Preparing display monitor
2023-05-25 21:16:01,179:INFO:Initializing Logistic Regression
2023-05-25 21:16:01,180:INFO:Total runtime is 1.6657511393229165e-05 minutes
2023-05-25 21:16:01,183:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:01,183:INFO:Initializing create_model()
2023-05-25 21:16:01,183:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:01,183:INFO:Checking exceptions
2023-05-25 21:16:01,183:INFO:Importing libraries
2023-05-25 21:16:01,183:INFO:Copying training dataset
2023-05-25 21:16:01,188:INFO:Defining folds
2023-05-25 21:16:01,188:INFO:Declaring metric variables
2023-05-25 21:16:01,191:INFO:Importing untrained model
2023-05-25 21:16:01,194:INFO:Logistic Regression Imported successfully
2023-05-25 21:16:01,200:INFO:Starting cross validation
2023-05-25 21:16:01,201:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:01,731:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:16:01,739:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:16:01,754:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:16:01,764:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:16:01,785:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:16:01,867:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,868:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,870:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,870:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,871:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,872:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,893:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,894:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,895:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:01,895:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,907:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,909:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,909:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:01,910:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,918:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,919:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:01,920:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:03,098:INFO:Calculating mean and std
2023-05-25 21:16:03,099:INFO:Creating metrics dataframe
2023-05-25 21:16:03,515:INFO:Uploading results into container
2023-05-25 21:16:03,515:INFO:Uploading model into container now
2023-05-25 21:16:03,515:INFO:_master_model_container: 1
2023-05-25 21:16:03,515:INFO:_display_container: 2
2023-05-25 21:16:03,515:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3071, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 21:16:03,515:INFO:create_model() successfully completed......................................
2023-05-25 21:16:03,725:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:03,725:INFO:Creating metrics dataframe
2023-05-25 21:16:03,734:INFO:Initializing K Neighbors Classifier
2023-05-25 21:16:03,734:INFO:Total runtime is 0.042573328812917074 minutes
2023-05-25 21:16:03,737:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:03,737:INFO:Initializing create_model()
2023-05-25 21:16:03,737:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:03,737:INFO:Checking exceptions
2023-05-25 21:16:03,738:INFO:Importing libraries
2023-05-25 21:16:03,738:INFO:Copying training dataset
2023-05-25 21:16:03,743:INFO:Defining folds
2023-05-25 21:16:03,743:INFO:Declaring metric variables
2023-05-25 21:16:03,746:INFO:Importing untrained model
2023-05-25 21:16:03,751:INFO:K Neighbors Classifier Imported successfully
2023-05-25 21:16:03,758:INFO:Starting cross validation
2023-05-25 21:16:03,759:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:04,037:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,039:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:04,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,092:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,094:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,095:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:04,095:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,096:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,097:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,098:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:04,099:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,104:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,105:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,105:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:04,106:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:04,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:04,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:05,265:INFO:Calculating mean and std
2023-05-25 21:16:05,267:INFO:Creating metrics dataframe
2023-05-25 21:16:05,672:INFO:Uploading results into container
2023-05-25 21:16:05,673:INFO:Uploading model into container now
2023-05-25 21:16:05,673:INFO:_master_model_container: 2
2023-05-25 21:16:05,673:INFO:_display_container: 2
2023-05-25 21:16:05,674:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 21:16:05,674:INFO:create_model() successfully completed......................................
2023-05-25 21:16:05,855:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:05,855:INFO:Creating metrics dataframe
2023-05-25 21:16:05,864:INFO:Initializing Naive Bayes
2023-05-25 21:16:05,864:INFO:Total runtime is 0.07807115713755289 minutes
2023-05-25 21:16:05,867:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:05,867:INFO:Initializing create_model()
2023-05-25 21:16:05,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:05,867:INFO:Checking exceptions
2023-05-25 21:16:05,867:INFO:Importing libraries
2023-05-25 21:16:05,867:INFO:Copying training dataset
2023-05-25 21:16:05,872:INFO:Defining folds
2023-05-25 21:16:05,872:INFO:Declaring metric variables
2023-05-25 21:16:05,875:INFO:Importing untrained model
2023-05-25 21:16:05,878:INFO:Naive Bayes Imported successfully
2023-05-25 21:16:05,884:INFO:Starting cross validation
2023-05-25 21:16:05,885:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:06,099:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,102:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,110:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,110:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,111:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,114:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,115:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,116:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,130:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,131:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:06,132:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:07,278:INFO:Calculating mean and std
2023-05-25 21:16:07,278:INFO:Creating metrics dataframe
2023-05-25 21:16:07,679:INFO:Uploading results into container
2023-05-25 21:16:07,680:INFO:Uploading model into container now
2023-05-25 21:16:07,680:INFO:_master_model_container: 3
2023-05-25 21:16:07,680:INFO:_display_container: 2
2023-05-25 21:16:07,681:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 21:16:07,681:INFO:create_model() successfully completed......................................
2023-05-25 21:16:07,864:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:07,864:INFO:Creating metrics dataframe
2023-05-25 21:16:07,873:INFO:Initializing Decision Tree Classifier
2023-05-25 21:16:07,873:INFO:Total runtime is 0.11155958175659178 minutes
2023-05-25 21:16:07,876:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:07,876:INFO:Initializing create_model()
2023-05-25 21:16:07,876:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:07,876:INFO:Checking exceptions
2023-05-25 21:16:07,876:INFO:Importing libraries
2023-05-25 21:16:07,876:INFO:Copying training dataset
2023-05-25 21:16:07,881:INFO:Defining folds
2023-05-25 21:16:07,882:INFO:Declaring metric variables
2023-05-25 21:16:07,886:INFO:Importing untrained model
2023-05-25 21:16:07,890:INFO:Decision Tree Classifier Imported successfully
2023-05-25 21:16:07,895:INFO:Starting cross validation
2023-05-25 21:16:07,896:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:08,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,145:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,147:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,153:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,153:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,153:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,154:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,154:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,154:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,155:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,155:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,156:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,159:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,160:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:08,162:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:09,377:INFO:Calculating mean and std
2023-05-25 21:16:09,378:INFO:Creating metrics dataframe
2023-05-25 21:16:09,806:INFO:Uploading results into container
2023-05-25 21:16:09,807:INFO:Uploading model into container now
2023-05-25 21:16:09,807:INFO:_master_model_container: 4
2023-05-25 21:16:09,807:INFO:_display_container: 2
2023-05-25 21:16:09,807:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3071, splitter='best')
2023-05-25 21:16:09,807:INFO:create_model() successfully completed......................................
2023-05-25 21:16:09,995:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:09,995:INFO:Creating metrics dataframe
2023-05-25 21:16:10,004:INFO:Initializing SVM - Linear Kernel
2023-05-25 21:16:10,004:INFO:Total runtime is 0.14708223342895504 minutes
2023-05-25 21:16:10,008:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:10,008:INFO:Initializing create_model()
2023-05-25 21:16:10,008:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:10,008:INFO:Checking exceptions
2023-05-25 21:16:10,008:INFO:Importing libraries
2023-05-25 21:16:10,008:INFO:Copying training dataset
2023-05-25 21:16:10,013:INFO:Defining folds
2023-05-25 21:16:10,013:INFO:Declaring metric variables
2023-05-25 21:16:10,016:INFO:Importing untrained model
2023-05-25 21:16:10,022:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 21:16:10,029:INFO:Starting cross validation
2023-05-25 21:16:10,030:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:10,230:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:16:10,231:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,232:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,233:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:10,234:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,235:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:16:10,236:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,237:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,238:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:10,238:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:16:10,238:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,239:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,240:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,241:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:10,241:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,245:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:16:10,245:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:16:10,245:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,246:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,247:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,247:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,248:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:10,248:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:10,249:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:10,249:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:11,428:INFO:Calculating mean and std
2023-05-25 21:16:11,429:INFO:Creating metrics dataframe
2023-05-25 21:16:11,843:INFO:Uploading results into container
2023-05-25 21:16:11,844:INFO:Uploading model into container now
2023-05-25 21:16:11,844:INFO:_master_model_container: 5
2023-05-25 21:16:11,844:INFO:_display_container: 2
2023-05-25 21:16:11,845:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3071, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 21:16:11,845:INFO:create_model() successfully completed......................................
2023-05-25 21:16:12,024:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:12,024:INFO:Creating metrics dataframe
2023-05-25 21:16:12,033:INFO:Initializing Ridge Classifier
2023-05-25 21:16:12,033:INFO:Total runtime is 0.18090302546819048 minutes
2023-05-25 21:16:12,036:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:12,037:INFO:Initializing create_model()
2023-05-25 21:16:12,037:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:12,037:INFO:Checking exceptions
2023-05-25 21:16:12,037:INFO:Importing libraries
2023-05-25 21:16:12,037:INFO:Copying training dataset
2023-05-25 21:16:12,042:INFO:Defining folds
2023-05-25 21:16:12,042:INFO:Declaring metric variables
2023-05-25 21:16:12,045:INFO:Importing untrained model
2023-05-25 21:16:12,048:INFO:Ridge Classifier Imported successfully
2023-05-25 21:16:12,055:INFO:Starting cross validation
2023-05-25 21:16:12,055:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:12,213:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:16:12,214:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,215:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,216:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:12,217:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,228:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:16:12,228:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:16:12,228:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,228:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,229:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,230:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,230:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:12,230:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:12,231:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:16:12,231:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,231:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,231:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,232:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,233:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:12,234:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,237:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:16:12,237:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,238:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:12,239:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:12,239:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:13,384:INFO:Calculating mean and std
2023-05-25 21:16:13,385:INFO:Creating metrics dataframe
2023-05-25 21:16:13,806:INFO:Uploading results into container
2023-05-25 21:16:13,807:INFO:Uploading model into container now
2023-05-25 21:16:13,807:INFO:_master_model_container: 6
2023-05-25 21:16:13,807:INFO:_display_container: 2
2023-05-25 21:16:13,808:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3071, solver='auto',
                tol=0.0001)
2023-05-25 21:16:13,808:INFO:create_model() successfully completed......................................
2023-05-25 21:16:14,001:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:14,001:INFO:Creating metrics dataframe
2023-05-25 21:16:14,011:INFO:Initializing Random Forest Classifier
2023-05-25 21:16:14,011:INFO:Total runtime is 0.21386817693710325 minutes
2023-05-25 21:16:14,014:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:14,015:INFO:Initializing create_model()
2023-05-25 21:16:14,015:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:14,015:INFO:Checking exceptions
2023-05-25 21:16:14,015:INFO:Importing libraries
2023-05-25 21:16:14,015:INFO:Copying training dataset
2023-05-25 21:16:14,021:INFO:Defining folds
2023-05-25 21:16:14,021:INFO:Declaring metric variables
2023-05-25 21:16:14,024:INFO:Importing untrained model
2023-05-25 21:16:14,028:INFO:Random Forest Classifier Imported successfully
2023-05-25 21:16:14,034:INFO:Starting cross validation
2023-05-25 21:16:14,035:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:14,905:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:14,907:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:14,907:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:14,908:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:14,908:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:14,908:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:14,909:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

odifier, msg_start, len(result))

2023-05-25 21:16:14,910:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:14,910:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:14,910:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:14,911:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:14,911:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:14,912:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:14,912:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:14,913:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:14,913:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:14,914:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:14,914:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:14,914:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,124:INFO:Calculating mean and std
2023-05-25 21:16:16,125:INFO:Creating metrics dataframe
2023-05-25 21:16:16,532:INFO:Uploading results into container
2023-05-25 21:16:16,532:INFO:Uploading model into container now
2023-05-25 21:16:16,533:INFO:_master_model_container: 7
2023-05-25 21:16:16,533:INFO:_display_container: 2
2023-05-25 21:16:16,533:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3071, verbose=0, warm_start=False)
2023-05-25 21:16:16,533:INFO:create_model() successfully completed......................................
2023-05-25 21:16:16,714:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:16,714:INFO:Creating metrics dataframe
2023-05-25 21:16:16,724:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 21:16:16,724:INFO:Total runtime is 0.2590871016184489 minutes
2023-05-25 21:16:16,728:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:16,728:INFO:Initializing create_model()
2023-05-25 21:16:16,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:16,728:INFO:Checking exceptions
2023-05-25 21:16:16,728:INFO:Importing libraries
2023-05-25 21:16:16,728:INFO:Copying training dataset
2023-05-25 21:16:16,733:INFO:Defining folds
2023-05-25 21:16:16,734:INFO:Declaring metric variables
2023-05-25 21:16:16,737:INFO:Importing untrained model
2023-05-25 21:16:16,740:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 21:16:16,747:INFO:Starting cross validation
2023-05-25 21:16:16,749:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:16,975:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,978:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:16,978:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,982:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,984:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,984:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,985:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:16,987:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,987:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,988:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:16,989:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,991:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,992:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,994:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,994:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,995:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:16,996:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:16,996:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:18,166:INFO:Calculating mean and std
2023-05-25 21:16:18,167:INFO:Creating metrics dataframe
2023-05-25 21:16:18,568:INFO:Uploading results into container
2023-05-25 21:16:18,568:INFO:Uploading model into container now
2023-05-25 21:16:18,569:INFO:_master_model_container: 8
2023-05-25 21:16:18,569:INFO:_display_container: 2
2023-05-25 21:16:18,569:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 21:16:18,569:INFO:create_model() successfully completed......................................
2023-05-25 21:16:18,756:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:18,756:INFO:Creating metrics dataframe
2023-05-25 21:16:18,767:INFO:Initializing Ada Boost Classifier
2023-05-25 21:16:18,768:INFO:Total runtime is 0.2931426684061686 minutes
2023-05-25 21:16:18,771:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:18,771:INFO:Initializing create_model()
2023-05-25 21:16:18,771:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:18,771:INFO:Checking exceptions
2023-05-25 21:16:18,771:INFO:Importing libraries
2023-05-25 21:16:18,772:INFO:Copying training dataset
2023-05-25 21:16:18,776:INFO:Defining folds
2023-05-25 21:16:18,776:INFO:Declaring metric variables
2023-05-25 21:16:18,780:INFO:Importing untrained model
2023-05-25 21:16:18,784:INFO:Ada Boost Classifier Imported successfully
2023-05-25 21:16:18,791:INFO:Starting cross validation
2023-05-25 21:16:18,793:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:19,356:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,357:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,359:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,362:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,362:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,363:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,363:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,363:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,364:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,365:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,365:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,365:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,370:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,372:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:19,373:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:20,584:INFO:Calculating mean and std
2023-05-25 21:16:20,585:INFO:Creating metrics dataframe
2023-05-25 21:16:20,996:INFO:Uploading results into container
2023-05-25 21:16:20,997:INFO:Uploading model into container now
2023-05-25 21:16:20,997:INFO:_master_model_container: 9
2023-05-25 21:16:20,997:INFO:_display_container: 2
2023-05-25 21:16:20,998:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3071)
2023-05-25 21:16:20,998:INFO:create_model() successfully completed......................................
2023-05-25 21:16:21,179:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:21,179:INFO:Creating metrics dataframe
2023-05-25 21:16:21,190:INFO:Initializing Gradient Boosting Classifier
2023-05-25 21:16:21,190:INFO:Total runtime is 0.33350538412729896 minutes
2023-05-25 21:16:21,193:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:21,194:INFO:Initializing create_model()
2023-05-25 21:16:21,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:21,194:INFO:Checking exceptions
2023-05-25 21:16:21,194:INFO:Importing libraries
2023-05-25 21:16:21,194:INFO:Copying training dataset
2023-05-25 21:16:21,199:INFO:Defining folds
2023-05-25 21:16:21,199:INFO:Declaring metric variables
2023-05-25 21:16:21,202:INFO:Importing untrained model
2023-05-25 21:16:21,205:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 21:16:21,213:INFO:Starting cross validation
2023-05-25 21:16:21,214:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:28,237:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,238:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,239:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,255:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,257:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,257:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,258:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,258:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,260:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,293:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,294:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,295:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,340:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,341:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:28,342:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:29,485:INFO:Calculating mean and std
2023-05-25 21:16:29,485:INFO:Creating metrics dataframe
2023-05-25 21:16:29,911:INFO:Uploading results into container
2023-05-25 21:16:29,912:INFO:Uploading model into container now
2023-05-25 21:16:29,912:INFO:_master_model_container: 10
2023-05-25 21:16:29,912:INFO:_display_container: 2
2023-05-25 21:16:29,913:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3071, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 21:16:29,913:INFO:create_model() successfully completed......................................
2023-05-25 21:16:30,102:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:30,102:INFO:Creating metrics dataframe
2023-05-25 21:16:30,113:INFO:Initializing Linear Discriminant Analysis
2023-05-25 21:16:30,113:INFO:Total runtime is 0.4822320024172465 minutes
2023-05-25 21:16:30,116:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:30,118:INFO:Initializing create_model()
2023-05-25 21:16:30,118:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:30,118:INFO:Checking exceptions
2023-05-25 21:16:30,118:INFO:Importing libraries
2023-05-25 21:16:30,118:INFO:Copying training dataset
2023-05-25 21:16:30,122:INFO:Defining folds
2023-05-25 21:16:30,122:INFO:Declaring metric variables
2023-05-25 21:16:30,126:INFO:Importing untrained model
2023-05-25 21:16:30,129:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 21:16:30,136:INFO:Starting cross validation
2023-05-25 21:16:30,137:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:30,355:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,357:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,357:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,358:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,359:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,360:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,360:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,360:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,361:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,361:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,362:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,362:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,365:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,367:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:30,368:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:31,576:INFO:Calculating mean and std
2023-05-25 21:16:31,577:INFO:Creating metrics dataframe
2023-05-25 21:16:31,994:INFO:Uploading results into container
2023-05-25 21:16:31,994:INFO:Uploading model into container now
2023-05-25 21:16:31,995:INFO:_master_model_container: 11
2023-05-25 21:16:31,995:INFO:_display_container: 2
2023-05-25 21:16:31,995:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 21:16:31,995:INFO:create_model() successfully completed......................................
2023-05-25 21:16:32,177:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:32,177:INFO:Creating metrics dataframe
2023-05-25 21:16:32,189:INFO:Initializing Extra Trees Classifier
2023-05-25 21:16:32,189:INFO:Total runtime is 0.5168238838513692 minutes
2023-05-25 21:16:32,192:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:32,192:INFO:Initializing create_model()
2023-05-25 21:16:32,192:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:32,192:INFO:Checking exceptions
2023-05-25 21:16:32,192:INFO:Importing libraries
2023-05-25 21:16:32,192:INFO:Copying training dataset
2023-05-25 21:16:32,197:INFO:Defining folds
2023-05-25 21:16:32,197:INFO:Declaring metric variables
2023-05-25 21:16:32,201:INFO:Importing untrained model
2023-05-25 21:16:32,204:INFO:Extra Trees Classifier Imported successfully
2023-05-25 21:16:32,210:INFO:Starting cross validation
2023-05-25 21:16:32,212:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:32,924:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,926:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,927:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:32,927:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,950:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,951:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:32,953:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,957:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,958:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,958:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,960:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,960:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:32,960:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:32,960:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,961:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,964:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:32,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:32,967:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:34,166:INFO:Calculating mean and std
2023-05-25 21:16:34,167:INFO:Creating metrics dataframe
2023-05-25 21:16:34,587:INFO:Uploading results into container
2023-05-25 21:16:34,588:INFO:Uploading model into container now
2023-05-25 21:16:34,588:INFO:_master_model_container: 12
2023-05-25 21:16:34,588:INFO:_display_container: 2
2023-05-25 21:16:34,589:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3071, verbose=0, warm_start=False)
2023-05-25 21:16:34,589:INFO:create_model() successfully completed......................................
2023-05-25 21:16:34,780:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:34,780:INFO:Creating metrics dataframe
2023-05-25 21:16:34,792:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 21:16:34,792:INFO:Total runtime is 0.5602116147677104 minutes
2023-05-25 21:16:34,795:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:34,795:INFO:Initializing create_model()
2023-05-25 21:16:34,795:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:34,795:INFO:Checking exceptions
2023-05-25 21:16:34,795:INFO:Importing libraries
2023-05-25 21:16:34,795:INFO:Copying training dataset
2023-05-25 21:16:34,800:INFO:Defining folds
2023-05-25 21:16:34,800:INFO:Declaring metric variables
2023-05-25 21:16:34,803:INFO:Importing untrained model
2023-05-25 21:16:34,806:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 21:16:34,814:INFO:Starting cross validation
2023-05-25 21:16:34,815:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:36,182:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,183:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,185:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,189:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,190:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,192:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,935:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,936:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,938:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:36,938:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,965:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,967:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,968:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,969:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:36,970:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:37,554:INFO:Calculating mean and std
2023-05-25 21:16:37,555:INFO:Creating metrics dataframe
2023-05-25 21:16:37,973:INFO:Uploading results into container
2023-05-25 21:16:37,974:INFO:Uploading model into container now
2023-05-25 21:16:37,974:INFO:_master_model_container: 13
2023-05-25 21:16:37,974:INFO:_display_container: 2
2023-05-25 21:16:37,975:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3071, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 21:16:37,975:INFO:create_model() successfully completed......................................
2023-05-25 21:16:38,158:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:38,158:INFO:Creating metrics dataframe
2023-05-25 21:16:38,169:INFO:Initializing Dummy Classifier
2023-05-25 21:16:38,169:INFO:Total runtime is 0.6164967179298402 minutes
2023-05-25 21:16:38,172:INFO:SubProcess create_model() called ==================================
2023-05-25 21:16:38,172:INFO:Initializing create_model()
2023-05-25 21:16:38,173:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002DE5ED2E890>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:38,173:INFO:Checking exceptions
2023-05-25 21:16:38,173:INFO:Importing libraries
2023-05-25 21:16:38,173:INFO:Copying training dataset
2023-05-25 21:16:38,178:INFO:Defining folds
2023-05-25 21:16:38,178:INFO:Declaring metric variables
2023-05-25 21:16:38,181:INFO:Importing untrained model
2023-05-25 21:16:38,184:INFO:Dummy Classifier Imported successfully
2023-05-25 21:16:38,191:INFO:Starting cross validation
2023-05-25 21:16:38,193:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:16:38,397:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,399:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,401:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:38,402:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,406:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,406:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,407:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,407:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,408:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:38,408:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:38,408:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,409:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,412:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,413:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:38,414:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,417:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,418:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:38,419:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:16:38,420:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:16:39,645:INFO:Calculating mean and std
2023-05-25 21:16:39,646:INFO:Creating metrics dataframe
2023-05-25 21:16:40,080:INFO:Uploading results into container
2023-05-25 21:16:40,081:INFO:Uploading model into container now
2023-05-25 21:16:40,081:INFO:_master_model_container: 14
2023-05-25 21:16:40,081:INFO:_display_container: 2
2023-05-25 21:16:40,081:INFO:DummyClassifier(constant=None, random_state=3071, strategy='prior')
2023-05-25 21:16:40,081:INFO:create_model() successfully completed......................................
2023-05-25 21:16:40,273:INFO:SubProcess create_model() end ==================================
2023-05-25 21:16:40,273:INFO:Creating metrics dataframe
2023-05-25 21:16:40,294:INFO:Initializing create_model()
2023-05-25 21:16:40,294:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002DE77124C10>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3071, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:16:40,294:INFO:Checking exceptions
2023-05-25 21:16:40,295:INFO:Importing libraries
2023-05-25 21:16:40,295:INFO:Copying training dataset
2023-05-25 21:16:40,299:INFO:Defining folds
2023-05-25 21:16:40,300:INFO:Declaring metric variables
2023-05-25 21:16:40,300:INFO:Importing untrained model
2023-05-25 21:16:40,300:INFO:Declaring custom model
2023-05-25 21:16:40,301:INFO:Logistic Regression Imported successfully
2023-05-25 21:16:40,302:INFO:Cross validation set to False
2023-05-25 21:16:40,302:INFO:Fitting Model
2023-05-25 21:16:40,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:16:41,305:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3071, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 21:16:41,305:INFO:create_model() successfully completed......................................
2023-05-25 21:16:41,511:INFO:_master_model_container: 14
2023-05-25 21:16:41,511:INFO:_display_container: 2
2023-05-25 21:16:41,511:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3071, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 21:16:41,511:INFO:compare_models() successfully completed......................................
2023-05-25 21:33:17,563:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_3512\1569036350.py:20: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  correlation_matrix = scdf.corr()

2023-05-25 21:33:45,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 21:33:45,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 21:33:45,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 21:33:45,561:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 21:33:46,636:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-25 21:33:47,143:INFO:PyCaret ClassificationExperiment
2023-05-25 21:33:47,143:INFO:Logging name: clf-default-name
2023-05-25 21:33:47,143:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 21:33:47,143:INFO:version 3.0.2
2023-05-25 21:33:47,143:INFO:Initializing setup()
2023-05-25 21:33:47,143:INFO:self.USI: e2ec
2023-05-25 21:33:47,143:INFO:self._variable_keys: {'pipeline', 'fold_generator', 'fold_shuffle_param', 'seed', 'gpu_n_jobs_param', 'fix_imbalance', 'X_test', 'X_train', '_ml_usecase', 'data', 'html_param', 'X', 'y_test', 'y', 'y_train', 'idx', 'gpu_param', 'n_jobs_param', 'target_param', 'is_multiclass', 'memory', 'USI', 'exp_id', 'fold_groups_param', '_available_plots', 'log_plots_param', 'exp_name_log', 'logging_param'}
2023-05-25 21:33:47,143:INFO:Checking environment
2023-05-25 21:33:47,143:INFO:python_version: 3.10.9
2023-05-25 21:33:47,143:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 21:33:47,144:INFO:machine: AMD64
2023-05-25 21:33:47,144:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 21:33:47,144:INFO:Memory: svmem(total=17112055808, available=6406025216, percent=62.6, used=10706030592, free=6406025216)
2023-05-25 21:33:47,144:INFO:Physical Core: 8
2023-05-25 21:33:47,144:INFO:Logical Core: 16
2023-05-25 21:33:47,144:INFO:Checking libraries
2023-05-25 21:33:47,144:INFO:System:
2023-05-25 21:33:47,144:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 21:33:47,144:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 21:33:47,144:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 21:33:47,144:INFO:PyCaret required dependencies:
2023-05-25 21:33:47,144:INFO:                 pip: 22.3.1
2023-05-25 21:33:47,144:INFO:          setuptools: 65.6.3
2023-05-25 21:33:47,144:INFO:             pycaret: 3.0.2
2023-05-25 21:33:47,144:INFO:             IPython: 8.10.0
2023-05-25 21:33:47,144:INFO:          ipywidgets: 7.6.5
2023-05-25 21:33:47,144:INFO:                tqdm: 4.64.1
2023-05-25 21:33:47,144:INFO:               numpy: 1.23.5
2023-05-25 21:33:47,145:INFO:              pandas: 1.5.3
2023-05-25 21:33:47,145:INFO:              jinja2: 3.1.2
2023-05-25 21:33:47,145:INFO:               scipy: 1.10.0
2023-05-25 21:33:47,145:INFO:              joblib: 1.1.1
2023-05-25 21:33:47,145:INFO:             sklearn: 1.2.1
2023-05-25 21:33:47,145:INFO:                pyod: 1.0.9
2023-05-25 21:33:47,145:INFO:            imblearn: 0.10.1
2023-05-25 21:33:47,145:INFO:   category_encoders: 2.6.1
2023-05-25 21:33:47,145:INFO:            lightgbm: 3.3.5
2023-05-25 21:33:47,145:INFO:               numba: 0.56.4
2023-05-25 21:33:47,145:INFO:            requests: 2.28.1
2023-05-25 21:33:47,145:INFO:          matplotlib: 3.7.0
2023-05-25 21:33:47,145:INFO:          scikitplot: 0.3.7
2023-05-25 21:33:47,145:INFO:         yellowbrick: 1.5
2023-05-25 21:33:47,145:INFO:              plotly: 5.9.0
2023-05-25 21:33:47,145:INFO:             kaleido: 0.2.1
2023-05-25 21:33:47,145:INFO:         statsmodels: 0.13.5
2023-05-25 21:33:47,145:INFO:              sktime: 0.17.0
2023-05-25 21:33:47,145:INFO:               tbats: 1.1.3
2023-05-25 21:33:47,145:INFO:            pmdarima: 2.0.3
2023-05-25 21:33:47,145:INFO:              psutil: 5.9.0
2023-05-25 21:33:47,145:INFO:PyCaret optional dependencies:
2023-05-25 21:33:47,158:INFO:                shap: Not installed
2023-05-25 21:33:47,158:INFO:           interpret: Not installed
2023-05-25 21:33:47,158:INFO:                umap: Not installed
2023-05-25 21:33:47,158:INFO:    pandas_profiling: Not installed
2023-05-25 21:33:47,158:INFO:  explainerdashboard: Not installed
2023-05-25 21:33:47,158:INFO:             autoviz: Not installed
2023-05-25 21:33:47,158:INFO:           fairlearn: Not installed
2023-05-25 21:33:47,158:INFO:             xgboost: Not installed
2023-05-25 21:33:47,158:INFO:            catboost: Not installed
2023-05-25 21:33:47,158:INFO:              kmodes: Not installed
2023-05-25 21:33:47,158:INFO:             mlxtend: Not installed
2023-05-25 21:33:47,158:INFO:       statsforecast: Not installed
2023-05-25 21:33:47,158:INFO:        tune_sklearn: Not installed
2023-05-25 21:33:47,159:INFO:                 ray: Not installed
2023-05-25 21:33:47,159:INFO:            hyperopt: Not installed
2023-05-25 21:33:47,159:INFO:              optuna: Not installed
2023-05-25 21:33:47,159:INFO:               skopt: Not installed
2023-05-25 21:33:47,159:INFO:              mlflow: Not installed
2023-05-25 21:33:47,159:INFO:              gradio: Not installed
2023-05-25 21:33:47,159:INFO:             fastapi: Not installed
2023-05-25 21:33:47,159:INFO:             uvicorn: Not installed
2023-05-25 21:33:47,159:INFO:              m2cgen: Not installed
2023-05-25 21:33:47,159:INFO:           evidently: Not installed
2023-05-25 21:33:47,159:INFO:               fugue: Not installed
2023-05-25 21:33:47,159:INFO:           streamlit: Not installed
2023-05-25 21:33:47,159:INFO:             prophet: Not installed
2023-05-25 21:33:47,159:INFO:None
2023-05-25 21:33:47,159:INFO:Set up data.
2023-05-25 21:33:47,165:INFO:Set up train/test split.
2023-05-25 21:33:47,170:INFO:Set up index.
2023-05-25 21:33:47,170:INFO:Set up folding strategy.
2023-05-25 21:33:47,170:INFO:Assigning column types.
2023-05-25 21:33:47,173:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 21:33:47,211:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 21:33:47,214:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:33:47,246:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,461:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 21:33:47,461:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:33:47,486:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,486:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,486:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 21:33:47,525:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:33:47,549:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,549:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,587:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:33:47,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,611:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,611:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 21:33:47,673:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,737:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,738:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,739:INFO:Preparing preprocessing pipeline...
2023-05-25 21:33:47,740:INFO:Set up label encoding.
2023-05-25 21:33:47,740:INFO:Set up simple imputation.
2023-05-25 21:33:47,761:INFO:Finished creating preprocessing pipeline.
2023-05-25 21:33:47,765:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours', 'APM',
                                             'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'Minimap...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-05-25 21:33:47,766:INFO:Creating final display dataframe.
2023-05-25 21:33:47,833:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      3090
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                (3337, 16)
5        Transformed data shape                                (3337, 16)
6   Transformed train set shape                                (2669, 16)
7    Transformed test set shape                                 (668, 16)
8              Numeric features                                        15
9                    Preprocess                                      True
10              Imputation type                                    simple
11           Numeric imputation                                      mean
12       Categorical imputation                                      mode
13               Fold Generator                           StratifiedKFold
14                  Fold Number                                         5
15                     CPU Jobs                                        -1
16                      Use GPU                                     False
17               Log Experiment                                     False
18              Experiment Name                          clf-default-name
19                          USI                                      e2ec
2023-05-25 21:33:47,902:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,902:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:33:47,964:INFO:setup() successfully completed in 1.15s...............
2023-05-25 21:33:51,407:INFO:Initializing compare_models()
2023-05-25 21:33:51,407:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 21:33:51,407:INFO:Checking exceptions
2023-05-25 21:33:51,410:INFO:Preparing display monitor
2023-05-25 21:33:51,436:INFO:Initializing Logistic Regression
2023-05-25 21:33:51,437:INFO:Total runtime is 1.6689300537109375e-05 minutes
2023-05-25 21:33:51,439:INFO:SubProcess create_model() called ==================================
2023-05-25 21:33:51,440:INFO:Initializing create_model()
2023-05-25 21:33:51,440:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:33:51,440:INFO:Checking exceptions
2023-05-25 21:33:51,440:INFO:Importing libraries
2023-05-25 21:33:51,440:INFO:Copying training dataset
2023-05-25 21:33:51,443:INFO:Defining folds
2023-05-25 21:33:51,443:INFO:Declaring metric variables
2023-05-25 21:33:51,446:INFO:Importing untrained model
2023-05-25 21:33:51,449:INFO:Logistic Regression Imported successfully
2023-05-25 21:33:51,455:INFO:Starting cross validation
2023-05-25 21:33:51,456:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:33:55,965:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:33:55,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:33:55,970:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:33:55,982:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:33:55,985:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:33:56,024:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,024:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,026:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,026:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,026:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:33:56,027:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,027:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,027:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,029:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,030:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,039:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,045:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:56,047:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:57,246:INFO:Calculating mean and std
2023-05-25 21:33:57,247:INFO:Creating metrics dataframe
2023-05-25 21:33:57,669:INFO:Uploading results into container
2023-05-25 21:33:57,670:INFO:Uploading model into container now
2023-05-25 21:33:57,670:INFO:_master_model_container: 1
2023-05-25 21:33:57,670:INFO:_display_container: 2
2023-05-25 21:33:57,671:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 21:33:57,671:INFO:create_model() successfully completed......................................
2023-05-25 21:33:57,758:INFO:SubProcess create_model() end ==================================
2023-05-25 21:33:57,758:INFO:Creating metrics dataframe
2023-05-25 21:33:57,766:INFO:Initializing K Neighbors Classifier
2023-05-25 21:33:57,766:INFO:Total runtime is 0.10550399223963419 minutes
2023-05-25 21:33:57,769:INFO:SubProcess create_model() called ==================================
2023-05-25 21:33:57,769:INFO:Initializing create_model()
2023-05-25 21:33:57,769:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:33:57,769:INFO:Checking exceptions
2023-05-25 21:33:57,769:INFO:Importing libraries
2023-05-25 21:33:57,769:INFO:Copying training dataset
2023-05-25 21:33:57,773:INFO:Defining folds
2023-05-25 21:33:57,773:INFO:Declaring metric variables
2023-05-25 21:33:57,776:INFO:Importing untrained model
2023-05-25 21:33:57,779:INFO:K Neighbors Classifier Imported successfully
2023-05-25 21:33:57,786:INFO:Starting cross validation
2023-05-25 21:33:57,787:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:33:59,890:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,891:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,892:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:33:59,893:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,893:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,893:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,895:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,895:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,895:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,896:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:33:59,896:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,896:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,896:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,898:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:33:59,898:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,906:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,907:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:33:59,908:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:33:59,909:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:01,115:INFO:Calculating mean and std
2023-05-25 21:34:01,116:INFO:Creating metrics dataframe
2023-05-25 21:34:01,531:INFO:Uploading results into container
2023-05-25 21:34:01,531:INFO:Uploading model into container now
2023-05-25 21:34:01,532:INFO:_master_model_container: 2
2023-05-25 21:34:01,532:INFO:_display_container: 2
2023-05-25 21:34:01,532:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 21:34:01,532:INFO:create_model() successfully completed......................................
2023-05-25 21:34:01,617:INFO:SubProcess create_model() end ==================================
2023-05-25 21:34:01,617:INFO:Creating metrics dataframe
2023-05-25 21:34:01,625:INFO:Initializing Naive Bayes
2023-05-25 21:34:01,626:INFO:Total runtime is 0.169838015238444 minutes
2023-05-25 21:34:01,628:INFO:SubProcess create_model() called ==================================
2023-05-25 21:34:01,629:INFO:Initializing create_model()
2023-05-25 21:34:01,629:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:34:01,629:INFO:Checking exceptions
2023-05-25 21:34:01,629:INFO:Importing libraries
2023-05-25 21:34:01,629:INFO:Copying training dataset
2023-05-25 21:34:01,634:INFO:Defining folds
2023-05-25 21:34:01,634:INFO:Declaring metric variables
2023-05-25 21:34:01,636:INFO:Importing untrained model
2023-05-25 21:34:01,640:INFO:Naive Bayes Imported successfully
2023-05-25 21:34:01,647:INFO:Starting cross validation
2023-05-25 21:34:01,647:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:34:03,736:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,738:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,740:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,742:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,744:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,744:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,746:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,746:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,746:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,746:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,747:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,748:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,748:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,749:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:03,750:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:04,979:INFO:Calculating mean and std
2023-05-25 21:34:04,979:INFO:Creating metrics dataframe
2023-05-25 21:34:05,405:INFO:Uploading results into container
2023-05-25 21:34:05,406:INFO:Uploading model into container now
2023-05-25 21:34:05,406:INFO:_master_model_container: 3
2023-05-25 21:34:05,406:INFO:_display_container: 2
2023-05-25 21:34:05,406:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 21:34:05,406:INFO:create_model() successfully completed......................................
2023-05-25 21:34:05,498:INFO:SubProcess create_model() end ==================================
2023-05-25 21:34:05,498:INFO:Creating metrics dataframe
2023-05-25 21:34:05,508:INFO:Initializing Decision Tree Classifier
2023-05-25 21:34:05,509:INFO:Total runtime is 0.23455588022867838 minutes
2023-05-25 21:34:05,511:INFO:SubProcess create_model() called ==================================
2023-05-25 21:34:05,511:INFO:Initializing create_model()
2023-05-25 21:34:05,511:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:34:05,511:INFO:Checking exceptions
2023-05-25 21:34:05,512:INFO:Importing libraries
2023-05-25 21:34:05,512:INFO:Copying training dataset
2023-05-25 21:34:05,517:INFO:Defining folds
2023-05-25 21:34:05,517:INFO:Declaring metric variables
2023-05-25 21:34:05,520:INFO:Importing untrained model
2023-05-25 21:34:05,524:INFO:Decision Tree Classifier Imported successfully
2023-05-25 21:34:05,530:INFO:Starting cross validation
2023-05-25 21:34:05,530:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:34:05,621:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:05,624:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:05,625:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:05,630:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:05,632:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:05,633:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:05,636:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:05,638:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:05,640:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:05,643:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:05,645:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:05,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:07,488:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:07,489:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:07,490:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:07,491:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:07,495:INFO:Calculating mean and std
2023-05-25 21:34:07,496:INFO:Creating metrics dataframe
2023-05-25 21:34:07,920:INFO:Uploading results into container
2023-05-25 21:34:07,920:INFO:Uploading model into container now
2023-05-25 21:34:07,920:INFO:_master_model_container: 4
2023-05-25 21:34:07,920:INFO:_display_container: 2
2023-05-25 21:34:07,920:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3090, splitter='best')
2023-05-25 21:34:07,920:INFO:create_model() successfully completed......................................
2023-05-25 21:34:08,005:INFO:SubProcess create_model() end ==================================
2023-05-25 21:34:08,005:INFO:Creating metrics dataframe
2023-05-25 21:34:08,015:INFO:Initializing SVM - Linear Kernel
2023-05-25 21:34:08,015:INFO:Total runtime is 0.2763153632481893 minutes
2023-05-25 21:34:08,018:INFO:SubProcess create_model() called ==================================
2023-05-25 21:34:08,018:INFO:Initializing create_model()
2023-05-25 21:34:08,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:34:08,019:INFO:Checking exceptions
2023-05-25 21:34:08,019:INFO:Importing libraries
2023-05-25 21:34:08,019:INFO:Copying training dataset
2023-05-25 21:34:08,023:INFO:Defining folds
2023-05-25 21:34:08,023:INFO:Declaring metric variables
2023-05-25 21:34:08,026:INFO:Importing untrained model
2023-05-25 21:34:08,029:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 21:34:08,034:INFO:Starting cross validation
2023-05-25 21:34:08,035:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:34:08,108:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:34:08,109:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,110:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,111:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,115:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:34:08,115:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:34:08,116:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,116:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,117:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:08,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:08,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,121:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:34:08,122:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,122:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:34:08,123:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,124:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,124:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,125:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:08,125:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:08,125:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:08,126:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:09,327:INFO:Calculating mean and std
2023-05-25 21:34:09,327:INFO:Creating metrics dataframe
2023-05-25 21:34:09,756:INFO:Uploading results into container
2023-05-25 21:34:09,756:INFO:Uploading model into container now
2023-05-25 21:34:09,757:INFO:_master_model_container: 5
2023-05-25 21:34:09,757:INFO:_display_container: 2
2023-05-25 21:34:09,757:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3090, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 21:34:09,757:INFO:create_model() successfully completed......................................
2023-05-25 21:34:09,847:INFO:SubProcess create_model() end ==================================
2023-05-25 21:34:09,848:INFO:Creating metrics dataframe
2023-05-25 21:34:09,857:INFO:Initializing Ridge Classifier
2023-05-25 21:34:09,857:INFO:Total runtime is 0.30702424844106035 minutes
2023-05-25 21:34:09,860:INFO:SubProcess create_model() called ==================================
2023-05-25 21:34:09,860:INFO:Initializing create_model()
2023-05-25 21:34:09,860:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:34:09,860:INFO:Checking exceptions
2023-05-25 21:34:09,860:INFO:Importing libraries
2023-05-25 21:34:09,861:INFO:Copying training dataset
2023-05-25 21:34:09,866:INFO:Defining folds
2023-05-25 21:34:09,866:INFO:Declaring metric variables
2023-05-25 21:34:09,869:INFO:Importing untrained model
2023-05-25 21:34:09,872:INFO:Ridge Classifier Imported successfully
2023-05-25 21:34:09,878:INFO:Starting cross validation
2023-05-25 21:34:09,879:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:34:09,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.55651e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-25 21:34:09,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.57217e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-25 21:34:09,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=6.72389e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-25 21:34:09,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=4.58688e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-25 21:34:09,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=4.74048e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-25 21:34:09,975:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:34:09,975:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:34:09,975:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:34:09,975:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:34:09,975:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:34:09,976:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:09,976:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:09,976:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:09,976:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:09,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:09,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:09,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:09,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:09,978:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:09,978:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:09,978:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:09,978:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:09,978:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:09,979:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:09,979:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:09,979:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:09,979:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:09,979:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:11,190:INFO:Calculating mean and std
2023-05-25 21:34:11,191:INFO:Creating metrics dataframe
2023-05-25 21:34:11,605:INFO:Uploading results into container
2023-05-25 21:34:11,606:INFO:Uploading model into container now
2023-05-25 21:34:11,606:INFO:_master_model_container: 6
2023-05-25 21:34:11,606:INFO:_display_container: 2
2023-05-25 21:34:11,606:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3090, solver='auto',
                tol=0.0001)
2023-05-25 21:34:11,606:INFO:create_model() successfully completed......................................
2023-05-25 21:34:11,690:INFO:SubProcess create_model() end ==================================
2023-05-25 21:34:11,691:INFO:Creating metrics dataframe
2023-05-25 21:34:11,700:INFO:Initializing Random Forest Classifier
2023-05-25 21:34:11,700:INFO:Total runtime is 0.33774607976277665 minutes
2023-05-25 21:34:11,704:INFO:SubProcess create_model() called ==================================
2023-05-25 21:34:11,704:INFO:Initializing create_model()
2023-05-25 21:34:11,704:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:34:11,704:INFO:Checking exceptions
2023-05-25 21:34:11,704:INFO:Importing libraries
2023-05-25 21:34:11,704:INFO:Copying training dataset
2023-05-25 21:34:11,709:INFO:Defining folds
2023-05-25 21:34:11,709:INFO:Declaring metric variables
2023-05-25 21:34:11,711:INFO:Importing untrained model
2023-05-25 21:34:11,715:INFO:Random Forest Classifier Imported successfully
2023-05-25 21:34:11,722:INFO:Starting cross validation
2023-05-25 21:34:11,723:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:34:12,394:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,396:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,396:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,397:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:12,398:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,398:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,399:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:12,400:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,401:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,403:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,404:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,405:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,405:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:12,406:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:12,406:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,406:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,412:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:12,413:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:12,413:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:13,627:INFO:Calculating mean and std
2023-05-25 21:34:13,628:INFO:Creating metrics dataframe
2023-05-25 21:34:14,061:INFO:Uploading results into container
2023-05-25 21:34:14,063:INFO:Uploading model into container now
2023-05-25 21:34:14,063:INFO:_master_model_container: 7
2023-05-25 21:34:14,063:INFO:_display_container: 2
2023-05-25 21:34:14,063:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3090, verbose=0, warm_start=False)
2023-05-25 21:34:14,064:INFO:create_model() successfully completed......................................
2023-05-25 21:34:14,152:INFO:SubProcess create_model() end ==================================
2023-05-25 21:34:14,152:INFO:Creating metrics dataframe
2023-05-25 21:34:14,163:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 21:34:14,163:INFO:Total runtime is 0.3787872989972432 minutes
2023-05-25 21:34:14,166:INFO:SubProcess create_model() called ==================================
2023-05-25 21:34:14,167:INFO:Initializing create_model()
2023-05-25 21:34:14,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:34:14,167:INFO:Checking exceptions
2023-05-25 21:34:14,167:INFO:Importing libraries
2023-05-25 21:34:14,167:INFO:Copying training dataset
2023-05-25 21:34:14,171:INFO:Defining folds
2023-05-25 21:34:14,172:INFO:Declaring metric variables
2023-05-25 21:34:14,174:INFO:Importing untrained model
2023-05-25 21:34:14,177:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 21:34:14,184:INFO:Starting cross validation
2023-05-25 21:34:14,185:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:34:14,262:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,270:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,271:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,273:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:14,273:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:14,274:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:15,529:INFO:Calculating mean and std
2023-05-25 21:34:15,530:INFO:Creating metrics dataframe
2023-05-25 21:34:15,953:INFO:Uploading results into container
2023-05-25 21:34:15,953:INFO:Uploading model into container now
2023-05-25 21:34:15,953:INFO:_master_model_container: 8
2023-05-25 21:34:15,954:INFO:_display_container: 2
2023-05-25 21:34:15,954:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 21:34:15,954:INFO:create_model() successfully completed......................................
2023-05-25 21:34:16,038:INFO:SubProcess create_model() end ==================================
2023-05-25 21:34:16,038:INFO:Creating metrics dataframe
2023-05-25 21:34:16,048:INFO:Initializing Ada Boost Classifier
2023-05-25 21:34:16,048:INFO:Total runtime is 0.4102133790651957 minutes
2023-05-25 21:34:16,051:INFO:SubProcess create_model() called ==================================
2023-05-25 21:34:16,051:INFO:Initializing create_model()
2023-05-25 21:34:16,051:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:34:16,052:INFO:Checking exceptions
2023-05-25 21:34:16,052:INFO:Importing libraries
2023-05-25 21:34:16,052:INFO:Copying training dataset
2023-05-25 21:34:16,057:INFO:Defining folds
2023-05-25 21:34:16,057:INFO:Declaring metric variables
2023-05-25 21:34:16,059:INFO:Importing untrained model
2023-05-25 21:34:16,062:INFO:Ada Boost Classifier Imported successfully
2023-05-25 21:34:16,068:INFO:Starting cross validation
2023-05-25 21:34:16,069:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:34:16,493:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,493:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,494:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,494:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:16,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,501:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,503:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,505:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,510:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,512:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,513:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:16,514:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,514:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,517:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:16,518:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:16,519:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:17,717:INFO:Calculating mean and std
2023-05-25 21:34:17,718:INFO:Creating metrics dataframe
2023-05-25 21:34:18,146:INFO:Uploading results into container
2023-05-25 21:34:18,147:INFO:Uploading model into container now
2023-05-25 21:34:18,147:INFO:_master_model_container: 9
2023-05-25 21:34:18,147:INFO:_display_container: 2
2023-05-25 21:34:18,147:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3090)
2023-05-25 21:34:18,147:INFO:create_model() successfully completed......................................
2023-05-25 21:34:18,232:INFO:SubProcess create_model() end ==================================
2023-05-25 21:34:18,233:INFO:Creating metrics dataframe
2023-05-25 21:34:18,243:INFO:Initializing Gradient Boosting Classifier
2023-05-25 21:34:18,243:INFO:Total runtime is 0.4467854897181193 minutes
2023-05-25 21:34:18,246:INFO:SubProcess create_model() called ==================================
2023-05-25 21:34:18,246:INFO:Initializing create_model()
2023-05-25 21:34:18,246:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:34:18,247:INFO:Checking exceptions
2023-05-25 21:34:18,247:INFO:Importing libraries
2023-05-25 21:34:18,247:INFO:Copying training dataset
2023-05-25 21:34:18,251:INFO:Defining folds
2023-05-25 21:34:18,251:INFO:Declaring metric variables
2023-05-25 21:34:18,253:INFO:Importing untrained model
2023-05-25 21:34:18,256:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 21:34:18,262:INFO:Starting cross validation
2023-05-25 21:34:18,263:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:34:24,691:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,691:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,692:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,693:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,693:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,694:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,710:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,711:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,712:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,743:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,744:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,747:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,773:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,775:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:24,777:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:25,950:INFO:Calculating mean and std
2023-05-25 21:34:25,951:INFO:Creating metrics dataframe
2023-05-25 21:34:26,390:INFO:Uploading results into container
2023-05-25 21:34:26,391:INFO:Uploading model into container now
2023-05-25 21:34:26,391:INFO:_master_model_container: 10
2023-05-25 21:34:26,391:INFO:_display_container: 2
2023-05-25 21:34:26,391:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3090, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 21:34:26,391:INFO:create_model() successfully completed......................................
2023-05-25 21:34:26,478:INFO:SubProcess create_model() end ==================================
2023-05-25 21:34:26,478:INFO:Creating metrics dataframe
2023-05-25 21:34:26,488:INFO:Initializing Linear Discriminant Analysis
2023-05-25 21:34:26,488:INFO:Total runtime is 0.5842121442159017 minutes
2023-05-25 21:34:26,491:INFO:SubProcess create_model() called ==================================
2023-05-25 21:34:26,491:INFO:Initializing create_model()
2023-05-25 21:34:26,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:34:26,491:INFO:Checking exceptions
2023-05-25 21:34:26,491:INFO:Importing libraries
2023-05-25 21:34:26,491:INFO:Copying training dataset
2023-05-25 21:34:26,496:INFO:Defining folds
2023-05-25 21:34:26,496:INFO:Declaring metric variables
2023-05-25 21:34:26,499:INFO:Importing untrained model
2023-05-25 21:34:26,502:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 21:34:26,508:INFO:Starting cross validation
2023-05-25 21:34:26,508:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:34:26,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,584:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,585:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,587:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,589:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,589:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,590:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,591:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,591:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,593:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,594:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:26,594:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:27,831:INFO:Calculating mean and std
2023-05-25 21:34:27,833:INFO:Creating metrics dataframe
2023-05-25 21:34:28,264:INFO:Uploading results into container
2023-05-25 21:34:28,264:INFO:Uploading model into container now
2023-05-25 21:34:28,265:INFO:_master_model_container: 11
2023-05-25 21:34:28,265:INFO:_display_container: 2
2023-05-25 21:34:28,265:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 21:34:28,265:INFO:create_model() successfully completed......................................
2023-05-25 21:34:28,349:INFO:SubProcess create_model() end ==================================
2023-05-25 21:34:28,349:INFO:Creating metrics dataframe
2023-05-25 21:34:28,361:INFO:Initializing Extra Trees Classifier
2023-05-25 21:34:28,361:INFO:Total runtime is 0.6154171586036683 minutes
2023-05-25 21:34:28,363:INFO:SubProcess create_model() called ==================================
2023-05-25 21:34:28,363:INFO:Initializing create_model()
2023-05-25 21:34:28,363:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:34:28,363:INFO:Checking exceptions
2023-05-25 21:34:28,364:INFO:Importing libraries
2023-05-25 21:34:28,364:INFO:Copying training dataset
2023-05-25 21:34:28,368:INFO:Defining folds
2023-05-25 21:34:28,368:INFO:Declaring metric variables
2023-05-25 21:34:28,371:INFO:Importing untrained model
2023-05-25 21:34:28,374:INFO:Extra Trees Classifier Imported successfully
2023-05-25 21:34:28,380:INFO:Starting cross validation
2023-05-25 21:34:28,381:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:34:28,946:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,948:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,948:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:28,949:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,949:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,949:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,951:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,951:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,951:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:28,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:28,953:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,953:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,953:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,953:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:28,954:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,954:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,955:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:28,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:28,957:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:30,218:INFO:Calculating mean and std
2023-05-25 21:34:30,219:INFO:Creating metrics dataframe
2023-05-25 21:34:30,655:INFO:Uploading results into container
2023-05-25 21:34:30,656:INFO:Uploading model into container now
2023-05-25 21:34:30,656:INFO:_master_model_container: 12
2023-05-25 21:34:30,656:INFO:_display_container: 2
2023-05-25 21:34:30,656:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3090, verbose=0, warm_start=False)
2023-05-25 21:34:30,656:INFO:create_model() successfully completed......................................
2023-05-25 21:34:30,738:INFO:SubProcess create_model() end ==================================
2023-05-25 21:34:30,738:INFO:Creating metrics dataframe
2023-05-25 21:34:30,750:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 21:34:30,750:INFO:Total runtime is 0.6552435676256817 minutes
2023-05-25 21:34:30,754:INFO:SubProcess create_model() called ==================================
2023-05-25 21:34:30,754:INFO:Initializing create_model()
2023-05-25 21:34:30,754:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:34:30,754:INFO:Checking exceptions
2023-05-25 21:34:30,754:INFO:Importing libraries
2023-05-25 21:34:30,754:INFO:Copying training dataset
2023-05-25 21:34:30,758:INFO:Defining folds
2023-05-25 21:34:30,759:INFO:Declaring metric variables
2023-05-25 21:34:30,761:INFO:Importing untrained model
2023-05-25 21:34:30,764:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 21:34:30,772:INFO:Starting cross validation
2023-05-25 21:34:30,774:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:34:32,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,767:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,768:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:32,769:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,782:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,784:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,786:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,792:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,794:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,795:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,823:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,825:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:32,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,830:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,831:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:32,833:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,039:INFO:Calculating mean and std
2023-05-25 21:34:34,039:INFO:Creating metrics dataframe
2023-05-25 21:34:34,481:INFO:Uploading results into container
2023-05-25 21:34:34,481:INFO:Uploading model into container now
2023-05-25 21:34:34,481:INFO:_master_model_container: 13
2023-05-25 21:34:34,481:INFO:_display_container: 2
2023-05-25 21:34:34,482:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3090, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 21:34:34,482:INFO:create_model() successfully completed......................................
2023-05-25 21:34:34,573:INFO:SubProcess create_model() end ==================================
2023-05-25 21:34:34,573:INFO:Creating metrics dataframe
2023-05-25 21:34:34,585:INFO:Initializing Dummy Classifier
2023-05-25 21:34:34,585:INFO:Total runtime is 0.7191636959711712 minutes
2023-05-25 21:34:34,588:INFO:SubProcess create_model() called ==================================
2023-05-25 21:34:34,588:INFO:Initializing create_model()
2023-05-25 21:34:34,588:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000022299797CD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:34:34,588:INFO:Checking exceptions
2023-05-25 21:34:34,588:INFO:Importing libraries
2023-05-25 21:34:34,588:INFO:Copying training dataset
2023-05-25 21:34:34,594:INFO:Defining folds
2023-05-25 21:34:34,594:INFO:Declaring metric variables
2023-05-25 21:34:34,597:INFO:Importing untrained model
2023-05-25 21:34:34,600:INFO:Dummy Classifier Imported successfully
2023-05-25 21:34:34,605:INFO:Starting cross validation
2023-05-25 21:34:34,606:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:34:34,670:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,672:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,673:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,673:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:34,673:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,673:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,674:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:34,675:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,675:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,676:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,677:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:34,678:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,679:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,681:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,682:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:34,682:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,683:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:34,685:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:34,686:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:35,928:INFO:Calculating mean and std
2023-05-25 21:34:35,928:INFO:Creating metrics dataframe
2023-05-25 21:34:36,363:INFO:Uploading results into container
2023-05-25 21:34:36,364:INFO:Uploading model into container now
2023-05-25 21:34:36,364:INFO:_master_model_container: 14
2023-05-25 21:34:36,364:INFO:_display_container: 2
2023-05-25 21:34:36,364:INFO:DummyClassifier(constant=None, random_state=3090, strategy='prior')
2023-05-25 21:34:36,364:INFO:create_model() successfully completed......................................
2023-05-25 21:34:36,453:INFO:SubProcess create_model() end ==================================
2023-05-25 21:34:36,453:INFO:Creating metrics dataframe
2023-05-25 21:34:36,471:INFO:Initializing create_model()
2023-05-25 21:34:36,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:34:36,473:INFO:Checking exceptions
2023-05-25 21:34:36,474:INFO:Importing libraries
2023-05-25 21:34:36,474:INFO:Copying training dataset
2023-05-25 21:34:36,478:INFO:Defining folds
2023-05-25 21:34:36,478:INFO:Declaring metric variables
2023-05-25 21:34:36,478:INFO:Importing untrained model
2023-05-25 21:34:36,478:INFO:Declaring custom model
2023-05-25 21:34:36,479:INFO:Logistic Regression Imported successfully
2023-05-25 21:34:36,479:INFO:Cross validation set to False
2023-05-25 21:34:36,479:INFO:Fitting Model
2023-05-25 21:34:37,020:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:37,356:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 21:34:37,356:INFO:create_model() successfully completed......................................
2023-05-25 21:34:37,468:INFO:_master_model_container: 14
2023-05-25 21:34:37,468:INFO:_display_container: 2
2023-05-25 21:34:37,468:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 21:34:37,468:INFO:compare_models() successfully completed......................................
2023-05-25 21:34:41,071:INFO:Initializing tune_model()
2023-05-25 21:34:41,071:INFO:tune_model(estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>)
2023-05-25 21:34:41,071:INFO:Checking exceptions
2023-05-25 21:34:41,089:INFO:Copying training dataset
2023-05-25 21:34:41,093:INFO:Checking base model
2023-05-25 21:34:41,093:INFO:Base model : Logistic Regression
2023-05-25 21:34:41,096:INFO:Declaring metric variables
2023-05-25 21:34:41,099:INFO:Defining Hyperparameters
2023-05-25 21:34:41,186:INFO:Tuning with n_jobs=-1
2023-05-25 21:34:41,186:INFO:Initializing RandomizedSearchCV
2023-05-25 21:34:42,028:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,077:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,086:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,088:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,099:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,106:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,156:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,158:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,166:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,179:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,180:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,183:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,188:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,208:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:42,216:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,738:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,810:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,834:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,864:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,885:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,897:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,911:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,929:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,932:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,934:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,947:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,958:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:43,972:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:44,012:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:45,068:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:45,090:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:45,097:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:45,251:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:45,576:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:45,923:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:46,257:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:46,609:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:46,938:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:47,264:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:47,624:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:47,954:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:48,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:48,615:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:48,962:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:49,287:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:49,627:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:49,950:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:34:59,676:INFO:best_params: {'actual_estimator__class_weight': {}, 'actual_estimator__C': 1.1}
2023-05-25 21:34:59,677:INFO:Hyperparameter search completed
2023-05-25 21:34:59,677:INFO:SubProcess create_model() called ==================================
2023-05-25 21:34:59,677:INFO:Initializing create_model()
2023-05-25 21:34:59,678:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002229BFC2110>, model_only=True, return_train_score=False, kwargs={'class_weight': {}, 'C': 1.1})
2023-05-25 21:34:59,678:INFO:Checking exceptions
2023-05-25 21:34:59,678:INFO:Importing libraries
2023-05-25 21:34:59,678:INFO:Copying training dataset
2023-05-25 21:34:59,682:INFO:Defining folds
2023-05-25 21:34:59,682:INFO:Declaring metric variables
2023-05-25 21:34:59,686:INFO:Importing untrained model
2023-05-25 21:34:59,686:INFO:Declaring custom model
2023-05-25 21:34:59,689:INFO:Logistic Regression Imported successfully
2023-05-25 21:34:59,694:INFO:Starting cross validation
2023-05-25 21:34:59,695:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:34:59,767:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,769:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,769:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,770:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,771:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,772:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:34:59,773:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,773:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,774:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,776:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,776:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,777:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,779:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,779:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,781:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:34:59,783:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:01,092:INFO:Calculating mean and std
2023-05-25 21:35:01,093:INFO:Creating metrics dataframe
2023-05-25 21:35:01,098:INFO:Finalizing model
2023-05-25 21:35:01,702:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:02,068:INFO:Uploading results into container
2023-05-25 21:35:02,069:INFO:Uploading model into container now
2023-05-25 21:35:02,069:INFO:_master_model_container: 15
2023-05-25 21:35:02,069:INFO:_display_container: 3
2023-05-25 21:35:02,069:INFO:LogisticRegression(C=1.1, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 21:35:02,069:INFO:create_model() successfully completed......................................
2023-05-25 21:35:02,157:INFO:SubProcess create_model() end ==================================
2023-05-25 21:35:02,157:INFO:choose_better activated
2023-05-25 21:35:02,160:INFO:SubProcess create_model() called ==================================
2023-05-25 21:35:02,160:INFO:Initializing create_model()
2023-05-25 21:35:02,160:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:35:02,160:INFO:Checking exceptions
2023-05-25 21:35:02,161:INFO:Importing libraries
2023-05-25 21:35:02,161:INFO:Copying training dataset
2023-05-25 21:35:02,165:INFO:Defining folds
2023-05-25 21:35:02,165:INFO:Declaring metric variables
2023-05-25 21:35:02,165:INFO:Importing untrained model
2023-05-25 21:35:02,165:INFO:Declaring custom model
2023-05-25 21:35:02,166:INFO:Logistic Regression Imported successfully
2023-05-25 21:35:02,166:INFO:Starting cross validation
2023-05-25 21:35:02,166:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:35:02,237:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,239:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,240:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,241:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,241:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,242:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:35:02,242:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,243:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,245:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,245:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,246:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,247:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,248:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,250:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,251:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:02,253:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:35:03,555:INFO:Calculating mean and std
2023-05-25 21:35:03,555:INFO:Creating metrics dataframe
2023-05-25 21:35:03,557:INFO:Finalizing model
2023-05-25 21:35:04,039:INFO:Uploading results into container
2023-05-25 21:35:04,039:INFO:Uploading model into container now
2023-05-25 21:35:04,039:INFO:_master_model_container: 16
2023-05-25 21:35:04,039:INFO:_display_container: 4
2023-05-25 21:35:04,040:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 21:35:04,040:INFO:create_model() successfully completed......................................
2023-05-25 21:35:04,125:INFO:SubProcess create_model() end ==================================
2023-05-25 21:35:04,126:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.396
2023-05-25 21:35:04,126:INFO:LogisticRegression(C=1.1, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) result for Accuracy is 0.3975
2023-05-25 21:35:04,127:INFO:LogisticRegression(C=1.1, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False) is best model
2023-05-25 21:35:04,127:INFO:choose_better completed
2023-05-25 21:35:04,134:INFO:_master_model_container: 16
2023-05-25 21:35:04,134:INFO:_display_container: 3
2023-05-25 21:35:04,134:INFO:LogisticRegression(C=1.1, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 21:35:04,134:INFO:tune_model() successfully completed......................................
2023-05-25 21:35:10,230:INFO:Initializing evaluate_model()
2023-05-25 21:35:10,230:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=LogisticRegression(C=1.1, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-25 21:35:10,244:INFO:Initializing plot_model()
2023-05-25 21:35:10,244:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.1, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, system=True)
2023-05-25 21:35:10,244:INFO:Checking exceptions
2023-05-25 21:35:10,246:INFO:Preloading libraries
2023-05-25 21:35:10,246:INFO:Copying training dataset
2023-05-25 21:35:10,247:INFO:Plot type: pipeline
2023-05-25 21:35:10,385:INFO:Visual Rendered Successfully
2023-05-25 21:35:10,476:INFO:plot_model() successfully completed......................................
2023-05-25 21:35:13,563:INFO:Initializing plot_model()
2023-05-25 21:35:13,563:INFO:plot_model(plot=vc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.1, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, system=True)
2023-05-25 21:35:13,563:INFO:Checking exceptions
2023-05-25 21:35:13,564:INFO:Preloading libraries
2023-05-25 21:35:13,564:INFO:Copying training dataset
2023-05-25 21:35:13,564:INFO:Plot type: vc
2023-05-25 21:35:13,565:INFO:Determining param_name
2023-05-25 21:35:13,565:INFO:param_name: l1_ratio
2023-05-25 21:35:13,641:INFO:Fitting Model
2023-05-25 21:35:13,656:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:14,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:14,106:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:14,546:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:14,550:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:15,006:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:15,010:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:15,443:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:15,447:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:15,947:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:15,951:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:16,438:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:16,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:16,880:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:16,884:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:17,303:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:17,308:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:17,772:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:17,776:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:18,231:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:18,235:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:18,706:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:18,711:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:19,162:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:19,166:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:19,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:19,591:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:20,028:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:20,032:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:20,458:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:20,461:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:20,899:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:20,903:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:21,363:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:21,367:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:21,807:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:21,811:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:22,258:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:22,261:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:22,687:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:22,691:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:23,124:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:23,129:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:23,559:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:23,562:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:24,002:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:24,006:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:24,436:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:24,440:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:24,875:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:24,879:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:25,311:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:25,315:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:25,750:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:25,755:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:26,207:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:26,210:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:26,671:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:26,674:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:27,094:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:27,099:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:27,575:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:27,579:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:28,029:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:28,033:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:28,452:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:28,456:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:28,889:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:28,893:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:29,310:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:29,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:29,744:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:29,749:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:30,174:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:30,178:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:30,607:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:30,611:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:31,061:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:31,066:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:31,520:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:31,524:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:31,970:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:31,975:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:32,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:32,414:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:32,848:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:32,852:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:33,290:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:33,293:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:33,741:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:33,744:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:34,161:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:34,166:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:34,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:34,590:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:35,006:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:35,010:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:35,423:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:35,428:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:35,874:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:35,878:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:36,309:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:36,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:36,735:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:36,738:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:37,201:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:37,205:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:37,631:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:37,634:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:38,085:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:38,089:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:38,544:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:38,548:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:39,006:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:39,010:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:39,460:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:39,464:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:39,907:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:39,912:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:40,346:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:40,350:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:40,787:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:40,793:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:41,243:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:41,248:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:41,693:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:41,698:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:42,175:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:42,179:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:42,631:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:42,637:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:43,082:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:43,086:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:43,520:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:43,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:43,958:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:43,961:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:44,373:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:44,378:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:44,815:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:44,819:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:45,239:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:45,243:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:45,679:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:45,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:46,131:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:46,135:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:46,589:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:46,594:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:47,022:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:47,026:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:47,481:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:47,485:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:47,929:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:47,933:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:48,352:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:48,357:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:48,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:48,830:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:49,253:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:49,257:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:49,699:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:49,702:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:50,138:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:50,142:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:50,558:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:50,562:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:51,000:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:51,006:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:51,473:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:51,478:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:51,939:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:51,943:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:52,419:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:52,423:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:52,889:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:52,893:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:53,332:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:53,336:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:53,787:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:53,791:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:54,219:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:54,223:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:54,644:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:54,649:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:55,074:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:55,078:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:55,534:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:55,538:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:55,982:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:55,986:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:56,413:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:56,418:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:56,882:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:56,886:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:57,302:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:57,306:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:57,745:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:57,749:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:58,206:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:58,210:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:58,671:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:58,677:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:59,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:59,111:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:35:59,578:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:35:59,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:00,034:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:00,039:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:00,485:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:00,489:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:00,961:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:00,965:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:01,407:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:01,412:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:01,880:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:01,884:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:02,321:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:02,324:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:02,761:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:02,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:03,228:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:03,232:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:03,663:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:03,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:04,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:04,121:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:04,576:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:04,580:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:05,022:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:05,026:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:05,457:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:05,461:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:05,904:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:05,908:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:06,355:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:06,360:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:06,815:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:06,819:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:07,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:07,269:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:07,755:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:07,759:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:08,229:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:08,233:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:08,687:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:08,691:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:09,143:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:09,148:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:09,599:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:09,604:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:10,091:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:10,095:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:10,529:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:10,533:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:11,036:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:11,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:11,489:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:11,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:11,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:11,957:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:12,413:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:12,417:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:12,865:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:12,869:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:13,307:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:13,312:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:13,739:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:13,743:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:14,176:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:14,180:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:14,615:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:14,619:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:15,072:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:15,077:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:15,527:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:15,530:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:15,983:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:15,988:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:16,424:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:16,427:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:16,917:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:16,922:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:17,400:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:17,405:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:17,853:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:17,857:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:18,319:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:18,322:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:18,762:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:18,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:19,195:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:19,199:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:19,617:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:19,622:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:20,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:20,056:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:20,512:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:20,516:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:20,960:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:20,965:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:21,403:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:21,407:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:21,889:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:21,894:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:22,367:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:22,371:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:22,833:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:22,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:23,277:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:23,281:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:23,725:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:23,730:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:24,180:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:24,186:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:24,634:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:24,638:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:25,090:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:25,094:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:25,584:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:25,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:26,112:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:26,117:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:26,641:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:26,646:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:27,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:27,149:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:27,644:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:27,649:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:28,133:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:28,139:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:28,656:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:28,661:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:29,171:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:29,177:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:29,768:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:29,772:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:30,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:30,323:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:30,864:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:30,869:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:31,446:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:31,451:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:31,968:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:31,972:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:32,430:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:32,434:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:32,911:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:32,915:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:33,436:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:33,441:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:33,902:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:33,906:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:34,353:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:34,357:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:34,804:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:34,809:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:35,240:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:35,245:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:35,698:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:35,702:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:36,152:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:36,156:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:36,622:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:36,626:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:37,062:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:37,066:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:37,519:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:37,525:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:37,945:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:37,949:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:38,425:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:38,428:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:38,866:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:38,869:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:39,309:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:39,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:39,761:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:39,765:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:40,212:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:40,216:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:40,657:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:40,660:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:41,110:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:41,113:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:41,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:41,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:42,073:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:42,077:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:42,529:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:42,533:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:42,990:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:42,996:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:43,472:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:43,476:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:43,920:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:43,924:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:44,381:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:44,385:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:44,815:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:44,819:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:45,255:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:45,259:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:45,701:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:45,705:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:46,161:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:46,164:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:46,597:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:46,602:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:47,056:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:47,060:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:47,522:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:47,527:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:48,005:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:48,009:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:48,486:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:48,492:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:48,937:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:48,942:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:49,402:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:49,407:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:49,845:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:49,850:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:50,289:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:50,293:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:50,737:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:50,742:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:51,217:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:51,222:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:51,704:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:51,709:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:52,175:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:52,180:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:52,695:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:52,699:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:53,149:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:53,152:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:53,639:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:53,643:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:54,140:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:54,145:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:54,617:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:54,620:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:55,074:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:55,079:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:55,537:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:55,544:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:56,092:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:56,095:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:56,593:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:56,598:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:57,100:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:57,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:57,612:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:57,616:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:58,117:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:58,122:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:58,646:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:58,650:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:59,105:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:59,110:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:36:59,559:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:36:59,563:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:00,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:00,047:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:00,515:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:00,519:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:00,979:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:00,983:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:01,452:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:01,455:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:01,913:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:01,917:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:02,365:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:02,370:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:02,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:02,840:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:03,297:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:03,300:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:03,747:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:03,750:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:04,207:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:04,211:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:04,667:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:04,671:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:05,164:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:05,169:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:05,617:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:05,620:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:06,099:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:06,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:06,591:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:06,594:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:07,051:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:07,055:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:07,538:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:07,543:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:08,018:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:08,022:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:08,572:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:08,579:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:09,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:09,056:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:09,511:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:09,515:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:10,008:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:10,013:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:10,595:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:10,599:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:11,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:11,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:11,579:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:11,584:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:12,038:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:12,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:12,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:12,501:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:12,986:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:12,991:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:13,488:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:13,494:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:13,942:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:13,945:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:14,395:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:14,398:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:14,848:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:14,852:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:15,292:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:15,297:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:15,750:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:15,754:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:16,237:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:16,241:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:16,712:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:16,718:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:17,278:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:17,283:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:17,735:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:17,739:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:18,234:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:18,238:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:18,694:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:18,698:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:19,149:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:19,153:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:19,594:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:19,598:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:20,034:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:20,038:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:20,473:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:20,477:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:20,943:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:20,948:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:21,420:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:21,423:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:21,880:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:21,884:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:22,345:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:22,349:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:22,810:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:22,814:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:23,271:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:23,275:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:23,773:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:23,778:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:24,251:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:24,255:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:24,713:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:24,716:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:25,274:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:25,278:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:25,738:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:25,742:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:26,203:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:26,208:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:26,694:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:26,698:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:27,190:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:27,194:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:27,669:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:27,673:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:28,162:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:28,166:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:28,616:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:28,620:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:29,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:29,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:29,571:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:29,575:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:30,037:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:30,042:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:30,508:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:30,514:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:31,034:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:31,037:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:31,546:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:31,550:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:32,042:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:32,045:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:32,500:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:32,505:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:32,944:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:32,948:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:33,422:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:33,427:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:33,893:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:33,897:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:34,346:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:34,350:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:34,823:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:34,826:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:35,278:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:35,283:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:35,714:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:35,717:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:36,189:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:36,194:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:36,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:36,651:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:37,135:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:37,140:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:37,640:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:37,645:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:38,135:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:38,138:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:38,618:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:38,623:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:39,118:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:39,122:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:39,607:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:39,613:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:40,098:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:40,102:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:40,579:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:40,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:41,095:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:41,100:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:41,606:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:41,610:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:42,115:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:42,120:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:42,556:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:42,559:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:42,993:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:42,997:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:43,422:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:43,427:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:43,866:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:43,870:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:44,304:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:44,308:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:44,747:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:44,750:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:45,183:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:45,187:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:45,620:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:45,624:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:46,068:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:46,071:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:46,538:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:46,544:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:47,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:47,057:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:47,514:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:47,519:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:47,998:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:48,002:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:48,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:48,501:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:48,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:48,955:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:49,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:49,414:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:49,847:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:49,850:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:50,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:50,272:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:50,708:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:50,712:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:51,184:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:51,188:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:51,661:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:51,665:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:52,106:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:52,110:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:52,564:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:52,567:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:53,032:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:53,036:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:53,470:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:53,473:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:53,906:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:53,910:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:54,339:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:54,344:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:54,779:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:54,784:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:55,206:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:55,211:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:55,656:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:55,660:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:56,102:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:56,105:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:56,554:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:56,558:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:56,986:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:56,990:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:57,459:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:57,463:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:57,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:57,960:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:58,436:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:58,441:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:58,899:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:58,904:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:59,407:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:59,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:37:59,854:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:37:59,858:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:00,357:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:00,361:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:00,802:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:00,806:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:01,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:01,270:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:01,746:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:01,749:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:02,217:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:02,220:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:02,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:02,688:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:03,145:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:03,150:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:03,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:03,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:04,030:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:04,034:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:04,470:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:04,474:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:04,910:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:04,914:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:05,363:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:05,368:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:05,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:05,859:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:06,338:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:06,342:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:06,811:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:06,816:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:07,275:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:07,280:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:07,750:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:07,754:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:08,239:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:08,244:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:08,734:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:08,740:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:09,191:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:09,194:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:09,666:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:09,670:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:10,115:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:10,120:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:10,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:10,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:11,007:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:11,011:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:11,470:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:11,475:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:11,968:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:11,972:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:12,449:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:12,453:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:12,916:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:12,920:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:13,440:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:13,446:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:14,091:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:14,098:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:14,612:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:14,616:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:15,074:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:15,079:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:15,560:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:15,566:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:16,029:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:16,033:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:16,464:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:16,468:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:16,975:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:16,979:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:17,437:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:17,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:17,880:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:17,884:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:18,367:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:18,370:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:18,889:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:18,895:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:19,388:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:19,392:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:19,856:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:19,860:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:20,284:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:20,288:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:20,727:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:20,730:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:21,156:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:21,161:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:21,618:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:21,623:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:22,083:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:22,086:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:22,526:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:22,531:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:22,989:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:22,993:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:23,515:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:23,519:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:23,991:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:23,994:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:24,457:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:24,460:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:24,945:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:24,949:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:25,416:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:25,420:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:25,979:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:25,986:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:26,512:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:26,516:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:27,556:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:27,562:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:28,170:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:28,174:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:28,685:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:28,690:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:29,234:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:29,238:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:29,857:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:29,862:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:30,340:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:30,343:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:30,883:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:30,887:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:31,468:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:31,475:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:32,185:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:32,190:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:32,677:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:32,682:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:33,177:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:33,184:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:33,713:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:33,718:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:34,180:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:34,184:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:34,654:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:34,660:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:35,165:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:35,169:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:35,619:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:35,623:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:36,096:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:36,099:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:36,578:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:36,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:37,097:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:37,102:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:37,593:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:37,598:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:38,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:38,106:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:38,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:38,589:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:39,051:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:39,056:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:39,519:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:39,524:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:40,001:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:40,005:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:40,465:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:40,469:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:40,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:40,957:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:41,556:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:41,562:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:42,128:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:42,133:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:42,660:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:42,665:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:43,216:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:43,222:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:43,739:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:43,744:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:44,274:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:44,279:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:44,828:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:44,835:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:45,382:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:45,388:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:45,910:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:45,915:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:46,451:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:46,456:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:46,994:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:46,999:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:47,530:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:47,535:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:48,009:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:48,013:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:48,546:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:48,550:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:49,010:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:49,014:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:49,490:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:49,494:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:49,973:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:49,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:50,533:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:50,539:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:51,319:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:51,323:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:51,971:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:51,976:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:52,515:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:52,520:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:53,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:53,046:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:53,575:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:53,580:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:54,064:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:54,068:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:54,560:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:54,566:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:55,073:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:55,078:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:55,622:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:55,628:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:56,147:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:56,151:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:56,670:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:56,675:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:57,222:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:57,228:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:57,798:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:57,803:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:58,369:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:58,375:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:58,892:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:58,897:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:59,393:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:59,397:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:38:59,877:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:38:59,882:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:00,364:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:00,369:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:00,846:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:00,850:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:01,360:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:01,366:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:01,910:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:01,914:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:02,416:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:02,420:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:02,911:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:02,916:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:03,382:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:03,387:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:03,917:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:03,923:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:04,450:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:04,455:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:04,954:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:04,959:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:05,503:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:05,508:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:06,067:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:06,073:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:06,594:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:06,599:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:07,113:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:07,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:07,627:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:07,631:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:08,089:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:08,092:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:08,572:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:08,576:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:09,054:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:09,059:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:09,577:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:09,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:10,171:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:10,176:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:10,837:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:10,842:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:11,406:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:11,411:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:1165: UserWarning: l1_ratio parameter is only used when penalty is 'elasticnet'. Got (penalty=l2)
  warnings.warn(

2023-05-25 21:39:11,949:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:39:12,172:INFO:Visual Rendered Successfully
2023-05-25 21:39:12,283:INFO:plot_model() successfully completed......................................
2023-05-25 21:39:12,298:INFO:Initializing evaluate_model()
2023-05-25 21:39:12,298:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, estimator=LogisticRegression(C=1.1, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-25 21:39:12,309:INFO:Initializing plot_model()
2023-05-25 21:39:12,310:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=LogisticRegression(C=1.1, class_weight={}, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3090, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x0000022299797B80>, system=True)
2023-05-25 21:39:12,310:INFO:Checking exceptions
2023-05-25 21:39:12,311:INFO:Preloading libraries
2023-05-25 21:39:12,311:INFO:Copying training dataset
2023-05-25 21:39:12,312:INFO:Plot type: pipeline
2023-05-25 21:39:12,406:INFO:Visual Rendered Successfully
2023-05-25 21:39:12,516:INFO:plot_model() successfully completed......................................
2023-05-25 21:58:26,635:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_16108\1569036350.py:20: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  correlation_matrix = scdf.corr()

2023-05-25 21:58:40,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 21:58:40,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 21:58:40,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 21:58:40,907:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-25 21:58:41,628:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-25 21:58:42,090:INFO:PyCaret ClassificationExperiment
2023-05-25 21:58:42,091:INFO:Logging name: clf-default-name
2023-05-25 21:58:42,091:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 21:58:42,091:INFO:version 3.0.2
2023-05-25 21:58:42,091:INFO:Initializing setup()
2023-05-25 21:58:42,091:INFO:self.USI: 07dd
2023-05-25 21:58:42,091:INFO:self._variable_keys: {'fold_shuffle_param', 'pipeline', 'gpu_n_jobs_param', 'target_param', '_ml_usecase', 'html_param', 'idx', 'seed', 'y_test', 'y_train', 'data', 'fold_generator', 'exp_name_log', 'gpu_param', 'logging_param', 'X_train', 'fold_groups_param', 'y', 'is_multiclass', 'log_plots_param', 'exp_id', '_available_plots', 'fix_imbalance', 'X_test', 'X', 'USI', 'memory', 'n_jobs_param'}
2023-05-25 21:58:42,091:INFO:Checking environment
2023-05-25 21:58:42,091:INFO:python_version: 3.10.9
2023-05-25 21:58:42,091:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 21:58:42,091:INFO:machine: AMD64
2023-05-25 21:58:42,091:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 21:58:42,091:INFO:Memory: svmem(total=17112055808, available=8370499584, percent=51.1, used=8741556224, free=8370499584)
2023-05-25 21:58:42,091:INFO:Physical Core: 8
2023-05-25 21:58:42,091:INFO:Logical Core: 16
2023-05-25 21:58:42,091:INFO:Checking libraries
2023-05-25 21:58:42,091:INFO:System:
2023-05-25 21:58:42,091:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 21:58:42,091:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 21:58:42,092:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 21:58:42,092:INFO:PyCaret required dependencies:
2023-05-25 21:58:42,092:INFO:                 pip: 22.3.1
2023-05-25 21:58:42,092:INFO:          setuptools: 65.6.3
2023-05-25 21:58:42,092:INFO:             pycaret: 3.0.2
2023-05-25 21:58:42,092:INFO:             IPython: 8.10.0
2023-05-25 21:58:42,092:INFO:          ipywidgets: 7.6.5
2023-05-25 21:58:42,092:INFO:                tqdm: 4.64.1
2023-05-25 21:58:42,092:INFO:               numpy: 1.23.5
2023-05-25 21:58:42,092:INFO:              pandas: 1.5.3
2023-05-25 21:58:42,092:INFO:              jinja2: 3.1.2
2023-05-25 21:58:42,092:INFO:               scipy: 1.10.0
2023-05-25 21:58:42,092:INFO:              joblib: 1.1.1
2023-05-25 21:58:42,092:INFO:             sklearn: 1.2.1
2023-05-25 21:58:42,092:INFO:                pyod: 1.0.9
2023-05-25 21:58:42,092:INFO:            imblearn: 0.10.1
2023-05-25 21:58:42,092:INFO:   category_encoders: 2.6.1
2023-05-25 21:58:42,092:INFO:            lightgbm: 3.3.5
2023-05-25 21:58:42,092:INFO:               numba: 0.56.4
2023-05-25 21:58:42,092:INFO:            requests: 2.28.1
2023-05-25 21:58:42,092:INFO:          matplotlib: 3.7.0
2023-05-25 21:58:42,093:INFO:          scikitplot: 0.3.7
2023-05-25 21:58:42,093:INFO:         yellowbrick: 1.5
2023-05-25 21:58:42,093:INFO:              plotly: 5.9.0
2023-05-25 21:58:42,093:INFO:             kaleido: 0.2.1
2023-05-25 21:58:42,093:INFO:         statsmodels: 0.13.5
2023-05-25 21:58:42,093:INFO:              sktime: 0.17.0
2023-05-25 21:58:42,093:INFO:               tbats: 1.1.3
2023-05-25 21:58:42,093:INFO:            pmdarima: 2.0.3
2023-05-25 21:58:42,093:INFO:              psutil: 5.9.0
2023-05-25 21:58:42,093:INFO:PyCaret optional dependencies:
2023-05-25 21:58:42,104:INFO:                shap: Not installed
2023-05-25 21:58:42,104:INFO:           interpret: Not installed
2023-05-25 21:58:42,104:INFO:                umap: Not installed
2023-05-25 21:58:42,104:INFO:    pandas_profiling: Not installed
2023-05-25 21:58:42,104:INFO:  explainerdashboard: Not installed
2023-05-25 21:58:42,104:INFO:             autoviz: Not installed
2023-05-25 21:58:42,105:INFO:           fairlearn: Not installed
2023-05-25 21:58:42,105:INFO:             xgboost: Not installed
2023-05-25 21:58:42,105:INFO:            catboost: Not installed
2023-05-25 21:58:42,105:INFO:              kmodes: Not installed
2023-05-25 21:58:42,105:INFO:             mlxtend: Not installed
2023-05-25 21:58:42,105:INFO:       statsforecast: Not installed
2023-05-25 21:58:42,105:INFO:        tune_sklearn: Not installed
2023-05-25 21:58:42,105:INFO:                 ray: Not installed
2023-05-25 21:58:42,105:INFO:            hyperopt: Not installed
2023-05-25 21:58:42,105:INFO:              optuna: Not installed
2023-05-25 21:58:42,105:INFO:               skopt: Not installed
2023-05-25 21:58:42,105:INFO:              mlflow: Not installed
2023-05-25 21:58:42,105:INFO:              gradio: Not installed
2023-05-25 21:58:42,105:INFO:             fastapi: Not installed
2023-05-25 21:58:42,105:INFO:             uvicorn: Not installed
2023-05-25 21:58:42,105:INFO:              m2cgen: Not installed
2023-05-25 21:58:42,105:INFO:           evidently: Not installed
2023-05-25 21:58:42,105:INFO:               fugue: Not installed
2023-05-25 21:58:42,105:INFO:           streamlit: Not installed
2023-05-25 21:58:42,105:INFO:             prophet: Not installed
2023-05-25 21:58:42,105:INFO:None
2023-05-25 21:58:42,105:INFO:Set up data.
2023-05-25 21:58:42,112:INFO:Set up train/test split.
2023-05-25 21:58:42,117:INFO:Set up index.
2023-05-25 21:58:42,117:INFO:Set up folding strategy.
2023-05-25 21:58:42,117:INFO:Assigning column types.
2023-05-25 21:58:42,120:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 21:58:42,187:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 21:58:42,190:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:58:42,238:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,422:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,459:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 21:58:42,460:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:58:42,484:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,484:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,484:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 21:58:42,525:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:58:42,548:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,548:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,587:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:58:42,611:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,611:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,611:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 21:58:42,672:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,672:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,735:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,735:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,736:INFO:Preparing preprocessing pipeline...
2023-05-25 21:58:42,738:INFO:Set up label encoding.
2023-05-25 21:58:42,738:INFO:Set up simple imputation.
2023-05-25 21:58:42,760:INFO:Finished creating preprocessing pipeline.
2023-05-25 21:58:42,766:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours', 'APM',
                                             'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'Minimap...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-05-25 21:58:42,766:INFO:Creating final display dataframe.
2023-05-25 21:58:42,835:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      8385
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                (3337, 17)
5        Transformed data shape                                (3337, 17)
6   Transformed train set shape                                (2669, 17)
7    Transformed test set shape                                 (668, 17)
8              Numeric features                                        16
9                    Preprocess                                      True
10              Imputation type                                    simple
11           Numeric imputation                                      mean
12       Categorical imputation                                      mode
13               Fold Generator                           StratifiedKFold
14                  Fold Number                                         5
15                     CPU Jobs                                        -1
16                      Use GPU                                     False
17               Log Experiment                                     False
18              Experiment Name                          clf-default-name
19                          USI                                      07dd
2023-05-25 21:58:42,902:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,903:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,963:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,963:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:42,965:INFO:setup() successfully completed in 1.2s...............
2023-05-25 21:58:43,291:INFO:PyCaret ClassificationExperiment
2023-05-25 21:58:43,291:INFO:Logging name: clf-default-name
2023-05-25 21:58:43,291:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-25 21:58:43,291:INFO:version 3.0.2
2023-05-25 21:58:43,291:INFO:Initializing setup()
2023-05-25 21:58:43,291:INFO:self.USI: 9987
2023-05-25 21:58:43,292:INFO:self._variable_keys: {'fold_shuffle_param', 'pipeline', 'gpu_n_jobs_param', 'target_param', '_ml_usecase', 'html_param', 'idx', 'seed', 'y_test', 'y_train', 'data', 'fold_generator', 'exp_name_log', 'gpu_param', 'logging_param', 'X_train', 'fold_groups_param', 'y', 'is_multiclass', 'log_plots_param', 'exp_id', '_available_plots', 'fix_imbalance', 'X_test', 'X', 'USI', 'memory', 'n_jobs_param'}
2023-05-25 21:58:43,292:INFO:Checking environment
2023-05-25 21:58:43,292:INFO:python_version: 3.10.9
2023-05-25 21:58:43,292:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-25 21:58:43,292:INFO:machine: AMD64
2023-05-25 21:58:43,292:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-25 21:58:43,292:INFO:Memory: svmem(total=17112055808, available=8356909056, percent=51.2, used=8755146752, free=8356909056)
2023-05-25 21:58:43,292:INFO:Physical Core: 8
2023-05-25 21:58:43,292:INFO:Logical Core: 16
2023-05-25 21:58:43,292:INFO:Checking libraries
2023-05-25 21:58:43,292:INFO:System:
2023-05-25 21:58:43,292:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-25 21:58:43,292:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-25 21:58:43,292:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-25 21:58:43,292:INFO:PyCaret required dependencies:
2023-05-25 21:58:43,292:INFO:                 pip: 22.3.1
2023-05-25 21:58:43,292:INFO:          setuptools: 65.6.3
2023-05-25 21:58:43,292:INFO:             pycaret: 3.0.2
2023-05-25 21:58:43,292:INFO:             IPython: 8.10.0
2023-05-25 21:58:43,292:INFO:          ipywidgets: 7.6.5
2023-05-25 21:58:43,293:INFO:                tqdm: 4.64.1
2023-05-25 21:58:43,293:INFO:               numpy: 1.23.5
2023-05-25 21:58:43,293:INFO:              pandas: 1.5.3
2023-05-25 21:58:43,293:INFO:              jinja2: 3.1.2
2023-05-25 21:58:43,293:INFO:               scipy: 1.10.0
2023-05-25 21:58:43,293:INFO:              joblib: 1.1.1
2023-05-25 21:58:43,293:INFO:             sklearn: 1.2.1
2023-05-25 21:58:43,293:INFO:                pyod: 1.0.9
2023-05-25 21:58:43,293:INFO:            imblearn: 0.10.1
2023-05-25 21:58:43,293:INFO:   category_encoders: 2.6.1
2023-05-25 21:58:43,293:INFO:            lightgbm: 3.3.5
2023-05-25 21:58:43,293:INFO:               numba: 0.56.4
2023-05-25 21:58:43,293:INFO:            requests: 2.28.1
2023-05-25 21:58:43,293:INFO:          matplotlib: 3.7.0
2023-05-25 21:58:43,293:INFO:          scikitplot: 0.3.7
2023-05-25 21:58:43,293:INFO:         yellowbrick: 1.5
2023-05-25 21:58:43,293:INFO:              plotly: 5.9.0
2023-05-25 21:58:43,293:INFO:             kaleido: 0.2.1
2023-05-25 21:58:43,293:INFO:         statsmodels: 0.13.5
2023-05-25 21:58:43,293:INFO:              sktime: 0.17.0
2023-05-25 21:58:43,293:INFO:               tbats: 1.1.3
2023-05-25 21:58:43,293:INFO:            pmdarima: 2.0.3
2023-05-25 21:58:43,293:INFO:              psutil: 5.9.0
2023-05-25 21:58:43,294:INFO:PyCaret optional dependencies:
2023-05-25 21:58:43,294:INFO:                shap: Not installed
2023-05-25 21:58:43,294:INFO:           interpret: Not installed
2023-05-25 21:58:43,294:INFO:                umap: Not installed
2023-05-25 21:58:43,294:INFO:    pandas_profiling: Not installed
2023-05-25 21:58:43,294:INFO:  explainerdashboard: Not installed
2023-05-25 21:58:43,294:INFO:             autoviz: Not installed
2023-05-25 21:58:43,294:INFO:           fairlearn: Not installed
2023-05-25 21:58:43,294:INFO:             xgboost: Not installed
2023-05-25 21:58:43,294:INFO:            catboost: Not installed
2023-05-25 21:58:43,294:INFO:              kmodes: Not installed
2023-05-25 21:58:43,294:INFO:             mlxtend: Not installed
2023-05-25 21:58:43,294:INFO:       statsforecast: Not installed
2023-05-25 21:58:43,294:INFO:        tune_sklearn: Not installed
2023-05-25 21:58:43,294:INFO:                 ray: Not installed
2023-05-25 21:58:43,294:INFO:            hyperopt: Not installed
2023-05-25 21:58:43,294:INFO:              optuna: Not installed
2023-05-25 21:58:43,294:INFO:               skopt: Not installed
2023-05-25 21:58:43,294:INFO:              mlflow: Not installed
2023-05-25 21:58:43,294:INFO:              gradio: Not installed
2023-05-25 21:58:43,294:INFO:             fastapi: Not installed
2023-05-25 21:58:43,294:INFO:             uvicorn: Not installed
2023-05-25 21:58:43,294:INFO:              m2cgen: Not installed
2023-05-25 21:58:43,294:INFO:           evidently: Not installed
2023-05-25 21:58:43,295:INFO:               fugue: Not installed
2023-05-25 21:58:43,295:INFO:           streamlit: Not installed
2023-05-25 21:58:43,295:INFO:             prophet: Not installed
2023-05-25 21:58:43,295:INFO:None
2023-05-25 21:58:43,295:INFO:Set up data.
2023-05-25 21:58:43,300:INFO:Set up train/test split.
2023-05-25 21:58:43,305:INFO:Set up index.
2023-05-25 21:58:43,305:INFO:Set up folding strategy.
2023-05-25 21:58:43,305:INFO:Assigning column types.
2023-05-25 21:58:43,309:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-25 21:58:43,346:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 21:58:43,346:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:58:43,369:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,370:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,406:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-25 21:58:43,407:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:58:43,430:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,430:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,431:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-25 21:58:43,468:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:58:43,492:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,492:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,532:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-25 21:58:43,556:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,557:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,557:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-25 21:58:43,624:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,624:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,690:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,691:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,692:INFO:Preparing preprocessing pipeline...
2023-05-25 21:58:43,693:INFO:Set up label encoding.
2023-05-25 21:58:43,693:INFO:Set up simple imputation.
2023-05-25 21:58:43,716:INFO:Finished creating preprocessing pipeline.
2023-05-25 21:58:43,720:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours', 'APM',
                                             'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'Minimap...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-05-25 21:58:43,720:INFO:Creating final display dataframe.
2023-05-25 21:58:43,795:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      8418
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                (3337, 17)
5        Transformed data shape                                (3337, 17)
6   Transformed train set shape                                (2669, 17)
7    Transformed test set shape                                 (668, 17)
8              Numeric features                                        16
9                    Preprocess                                      True
10              Imputation type                                    simple
11           Numeric imputation                                      mean
12       Categorical imputation                                      mode
13               Fold Generator                           StratifiedKFold
14                  Fold Number                                         5
15                     CPU Jobs                                        -1
16                      Use GPU                                     False
17               Log Experiment                                     False
18              Experiment Name                          clf-default-name
19                          USI                                      9987
2023-05-25 21:58:43,866:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,867:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,935:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,936:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-25 21:58:43,936:INFO:setup() successfully completed in 0.97s...............
2023-05-25 21:58:46,353:INFO:Initializing compare_models()
2023-05-25 21:58:46,353:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-25 21:58:46,353:INFO:Checking exceptions
2023-05-25 21:58:46,356:INFO:Preparing display monitor
2023-05-25 21:58:46,380:INFO:Initializing Logistic Regression
2023-05-25 21:58:46,381:INFO:Total runtime is 1.6721089680989585e-05 minutes
2023-05-25 21:58:46,383:INFO:SubProcess create_model() called ==================================
2023-05-25 21:58:46,384:INFO:Initializing create_model()
2023-05-25 21:58:46,384:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:58:46,384:INFO:Checking exceptions
2023-05-25 21:58:46,384:INFO:Importing libraries
2023-05-25 21:58:46,384:INFO:Copying training dataset
2023-05-25 21:58:46,387:INFO:Defining folds
2023-05-25 21:58:46,387:INFO:Declaring metric variables
2023-05-25 21:58:46,390:INFO:Importing untrained model
2023-05-25 21:58:46,393:INFO:Logistic Regression Imported successfully
2023-05-25 21:58:46,399:INFO:Starting cross validation
2023-05-25 21:58:46,400:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:58:51,281:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:58:51,286:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:58:51,287:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:58:51,317:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:58:51,325:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-25 21:58:51,343:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,344:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,346:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,350:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,350:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,352:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,352:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,353:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:58:51,353:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,354:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,381:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,383:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,384:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,389:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,390:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:51,392:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:52,714:INFO:Calculating mean and std
2023-05-25 21:58:52,715:INFO:Creating metrics dataframe
2023-05-25 21:58:53,182:INFO:Uploading results into container
2023-05-25 21:58:53,182:INFO:Uploading model into container now
2023-05-25 21:58:53,183:INFO:_master_model_container: 1
2023-05-25 21:58:53,183:INFO:_display_container: 2
2023-05-25 21:58:53,183:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8418, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-25 21:58:53,183:INFO:create_model() successfully completed......................................
2023-05-25 21:58:53,270:INFO:SubProcess create_model() end ==================================
2023-05-25 21:58:53,270:INFO:Creating metrics dataframe
2023-05-25 21:58:53,281:INFO:Initializing K Neighbors Classifier
2023-05-25 21:58:53,281:INFO:Total runtime is 0.11501200199127198 minutes
2023-05-25 21:58:53,284:INFO:SubProcess create_model() called ==================================
2023-05-25 21:58:53,285:INFO:Initializing create_model()
2023-05-25 21:58:53,285:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:58:53,285:INFO:Checking exceptions
2023-05-25 21:58:53,285:INFO:Importing libraries
2023-05-25 21:58:53,285:INFO:Copying training dataset
2023-05-25 21:58:53,289:INFO:Defining folds
2023-05-25 21:58:53,290:INFO:Declaring metric variables
2023-05-25 21:58:53,293:INFO:Importing untrained model
2023-05-25 21:58:53,297:INFO:K Neighbors Classifier Imported successfully
2023-05-25 21:58:53,304:INFO:Starting cross validation
2023-05-25 21:58:53,305:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:58:55,692:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,693:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,693:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,694:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,695:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,695:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,695:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,696:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:58:55,696:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:58:55,696:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,697:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,697:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,698:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,699:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,700:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:58:55,700:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,701:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:55,701:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:58:55,702:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:57,061:INFO:Calculating mean and std
2023-05-25 21:58:57,062:INFO:Creating metrics dataframe
2023-05-25 21:58:57,534:INFO:Uploading results into container
2023-05-25 21:58:57,535:INFO:Uploading model into container now
2023-05-25 21:58:57,535:INFO:_master_model_container: 2
2023-05-25 21:58:57,535:INFO:_display_container: 2
2023-05-25 21:58:57,535:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-25 21:58:57,535:INFO:create_model() successfully completed......................................
2023-05-25 21:58:57,613:INFO:SubProcess create_model() end ==================================
2023-05-25 21:58:57,613:INFO:Creating metrics dataframe
2023-05-25 21:58:57,621:INFO:Initializing Naive Bayes
2023-05-25 21:58:57,622:INFO:Total runtime is 0.18737577597300215 minutes
2023-05-25 21:58:57,625:INFO:SubProcess create_model() called ==================================
2023-05-25 21:58:57,625:INFO:Initializing create_model()
2023-05-25 21:58:57,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:58:57,625:INFO:Checking exceptions
2023-05-25 21:58:57,625:INFO:Importing libraries
2023-05-25 21:58:57,625:INFO:Copying training dataset
2023-05-25 21:58:57,630:INFO:Defining folds
2023-05-25 21:58:57,630:INFO:Declaring metric variables
2023-05-25 21:58:57,633:INFO:Importing untrained model
2023-05-25 21:58:57,635:INFO:Naive Bayes Imported successfully
2023-05-25 21:58:57,641:INFO:Starting cross validation
2023-05-25 21:58:57,642:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:58:59,852:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,852:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,853:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,853:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,856:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,856:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,858:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,858:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,859:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,859:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,860:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:58:59,861:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:01,205:INFO:Calculating mean and std
2023-05-25 21:59:01,206:INFO:Creating metrics dataframe
2023-05-25 21:59:01,661:INFO:Uploading results into container
2023-05-25 21:59:01,662:INFO:Uploading model into container now
2023-05-25 21:59:01,662:INFO:_master_model_container: 3
2023-05-25 21:59:01,662:INFO:_display_container: 2
2023-05-25 21:59:01,662:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-25 21:59:01,662:INFO:create_model() successfully completed......................................
2023-05-25 21:59:01,737:INFO:SubProcess create_model() end ==================================
2023-05-25 21:59:01,737:INFO:Creating metrics dataframe
2023-05-25 21:59:01,746:INFO:Initializing Decision Tree Classifier
2023-05-25 21:59:01,747:INFO:Total runtime is 0.256125549475352 minutes
2023-05-25 21:59:01,751:INFO:SubProcess create_model() called ==================================
2023-05-25 21:59:01,751:INFO:Initializing create_model()
2023-05-25 21:59:01,751:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:59:01,751:INFO:Checking exceptions
2023-05-25 21:59:01,751:INFO:Importing libraries
2023-05-25 21:59:01,751:INFO:Copying training dataset
2023-05-25 21:59:01,756:INFO:Defining folds
2023-05-25 21:59:01,756:INFO:Declaring metric variables
2023-05-25 21:59:01,758:INFO:Importing untrained model
2023-05-25 21:59:01,762:INFO:Decision Tree Classifier Imported successfully
2023-05-25 21:59:01,769:INFO:Starting cross validation
2023-05-25 21:59:01,770:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:59:01,876:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:01,876:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:01,877:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:01,878:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:01,879:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:01,879:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:01,882:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:01,884:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:01,884:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:01,885:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:01,886:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:01,887:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:03,907:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:03,908:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:03,910:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:03,913:INFO:Calculating mean and std
2023-05-25 21:59:03,914:INFO:Creating metrics dataframe
2023-05-25 21:59:04,399:INFO:Uploading results into container
2023-05-25 21:59:04,400:INFO:Uploading model into container now
2023-05-25 21:59:04,400:INFO:_master_model_container: 4
2023-05-25 21:59:04,400:INFO:_display_container: 2
2023-05-25 21:59:04,400:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8418, splitter='best')
2023-05-25 21:59:04,400:INFO:create_model() successfully completed......................................
2023-05-25 21:59:04,482:INFO:SubProcess create_model() end ==================================
2023-05-25 21:59:04,482:INFO:Creating metrics dataframe
2023-05-25 21:59:04,492:INFO:Initializing SVM - Linear Kernel
2023-05-25 21:59:04,492:INFO:Total runtime is 0.3018732309341431 minutes
2023-05-25 21:59:04,495:INFO:SubProcess create_model() called ==================================
2023-05-25 21:59:04,495:INFO:Initializing create_model()
2023-05-25 21:59:04,495:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:59:04,495:INFO:Checking exceptions
2023-05-25 21:59:04,495:INFO:Importing libraries
2023-05-25 21:59:04,495:INFO:Copying training dataset
2023-05-25 21:59:04,501:INFO:Defining folds
2023-05-25 21:59:04,501:INFO:Declaring metric variables
2023-05-25 21:59:04,504:INFO:Importing untrained model
2023-05-25 21:59:04,507:INFO:SVM - Linear Kernel Imported successfully
2023-05-25 21:59:04,513:INFO:Starting cross validation
2023-05-25 21:59:04,514:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:59:04,601:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:59:04,602:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,603:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:59:04,603:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,604:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,604:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:04,605:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,606:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,606:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:59:04,607:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:04,607:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,608:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:59:04,608:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,608:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,609:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,610:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,611:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:04,611:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:04,611:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,612:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,617:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-25 21:59:04,618:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,620:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:04,622:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:04,623:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:05,952:INFO:Calculating mean and std
2023-05-25 21:59:05,953:INFO:Creating metrics dataframe
2023-05-25 21:59:06,412:INFO:Uploading results into container
2023-05-25 21:59:06,413:INFO:Uploading model into container now
2023-05-25 21:59:06,413:INFO:_master_model_container: 5
2023-05-25 21:59:06,413:INFO:_display_container: 2
2023-05-25 21:59:06,414:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8418, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-25 21:59:06,414:INFO:create_model() successfully completed......................................
2023-05-25 21:59:06,488:INFO:SubProcess create_model() end ==================================
2023-05-25 21:59:06,489:INFO:Creating metrics dataframe
2023-05-25 21:59:06,498:INFO:Initializing Ridge Classifier
2023-05-25 21:59:06,498:INFO:Total runtime is 0.3353115359942119 minutes
2023-05-25 21:59:06,502:INFO:SubProcess create_model() called ==================================
2023-05-25 21:59:06,502:INFO:Initializing create_model()
2023-05-25 21:59:06,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:59:06,502:INFO:Checking exceptions
2023-05-25 21:59:06,502:INFO:Importing libraries
2023-05-25 21:59:06,502:INFO:Copying training dataset
2023-05-25 21:59:06,506:INFO:Defining folds
2023-05-25 21:59:06,506:INFO:Declaring metric variables
2023-05-25 21:59:06,509:INFO:Importing untrained model
2023-05-25 21:59:06,512:INFO:Ridge Classifier Imported successfully
2023-05-25 21:59:06,517:INFO:Starting cross validation
2023-05-25 21:59:06,518:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:59:06,561:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.4593e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-25 21:59:06,570:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.33856e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-25 21:59:06,573:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.6248e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-25 21:59:06,577:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.37736e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-25 21:59:06,577:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:59:06,578:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,580:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.19266e-09): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-25 21:59:06,580:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,582:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:06,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,586:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:59:06,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,588:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:59:06,589:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,589:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,590:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:06,591:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,591:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,591:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:06,593:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,594:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:59:06,595:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,597:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,598:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:06,599:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,599:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-25 21:59:06,600:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,603:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:06,604:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:06,604:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:07,921:INFO:Calculating mean and std
2023-05-25 21:59:07,922:INFO:Creating metrics dataframe
2023-05-25 21:59:08,388:INFO:Uploading results into container
2023-05-25 21:59:08,388:INFO:Uploading model into container now
2023-05-25 21:59:08,389:INFO:_master_model_container: 6
2023-05-25 21:59:08,389:INFO:_display_container: 2
2023-05-25 21:59:08,389:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8418, solver='auto',
                tol=0.0001)
2023-05-25 21:59:08,389:INFO:create_model() successfully completed......................................
2023-05-25 21:59:08,465:INFO:SubProcess create_model() end ==================================
2023-05-25 21:59:08,465:INFO:Creating metrics dataframe
2023-05-25 21:59:08,475:INFO:Initializing Random Forest Classifier
2023-05-25 21:59:08,475:INFO:Total runtime is 0.3682570536931356 minutes
2023-05-25 21:59:08,477:INFO:SubProcess create_model() called ==================================
2023-05-25 21:59:08,478:INFO:Initializing create_model()
2023-05-25 21:59:08,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:59:08,478:INFO:Checking exceptions
2023-05-25 21:59:08,478:INFO:Importing libraries
2023-05-25 21:59:08,478:INFO:Copying training dataset
2023-05-25 21:59:08,482:INFO:Defining folds
2023-05-25 21:59:08,482:INFO:Declaring metric variables
2023-05-25 21:59:08,485:INFO:Importing untrained model
2023-05-25 21:59:08,488:INFO:Random Forest Classifier Imported successfully
2023-05-25 21:59:08,495:INFO:Starting cross validation
2023-05-25 21:59:08,496:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:59:09,257:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,258:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,258:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,259:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:09,259:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,259:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,260:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,260:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,261:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,261:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,261:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,262:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:09,262:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:09,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:09,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:09,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:10,645:INFO:Calculating mean and std
2023-05-25 21:59:10,645:INFO:Creating metrics dataframe
2023-05-25 21:59:11,111:INFO:Uploading results into container
2023-05-25 21:59:11,112:INFO:Uploading model into container now
2023-05-25 21:59:11,112:INFO:_master_model_container: 7
2023-05-25 21:59:11,112:INFO:_display_container: 2
2023-05-25 21:59:11,113:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8418, verbose=0, warm_start=False)
2023-05-25 21:59:11,113:INFO:create_model() successfully completed......................................
2023-05-25 21:59:11,187:INFO:SubProcess create_model() end ==================================
2023-05-25 21:59:11,187:INFO:Creating metrics dataframe
2023-05-25 21:59:11,197:INFO:Initializing Quadratic Discriminant Analysis
2023-05-25 21:59:11,197:INFO:Total runtime is 0.4136235237121582 minutes
2023-05-25 21:59:11,201:INFO:SubProcess create_model() called ==================================
2023-05-25 21:59:11,201:INFO:Initializing create_model()
2023-05-25 21:59:11,201:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:59:11,201:INFO:Checking exceptions
2023-05-25 21:59:11,201:INFO:Importing libraries
2023-05-25 21:59:11,201:INFO:Copying training dataset
2023-05-25 21:59:11,205:INFO:Defining folds
2023-05-25 21:59:11,205:INFO:Declaring metric variables
2023-05-25 21:59:11,209:INFO:Importing untrained model
2023-05-25 21:59:11,212:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-25 21:59:11,218:INFO:Starting cross validation
2023-05-25 21:59:11,219:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:59:11,303:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,305:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,306:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,306:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,307:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,307:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,307:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,308:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:11,309:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,310:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,314:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,316:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,317:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,318:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,318:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:11,320:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:12,649:INFO:Calculating mean and std
2023-05-25 21:59:12,650:INFO:Creating metrics dataframe
2023-05-25 21:59:13,121:INFO:Uploading results into container
2023-05-25 21:59:13,121:INFO:Uploading model into container now
2023-05-25 21:59:13,122:INFO:_master_model_container: 8
2023-05-25 21:59:13,122:INFO:_display_container: 2
2023-05-25 21:59:13,122:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-25 21:59:13,122:INFO:create_model() successfully completed......................................
2023-05-25 21:59:13,197:INFO:SubProcess create_model() end ==================================
2023-05-25 21:59:13,197:INFO:Creating metrics dataframe
2023-05-25 21:59:13,208:INFO:Initializing Ada Boost Classifier
2023-05-25 21:59:13,208:INFO:Total runtime is 0.44713423252105716 minutes
2023-05-25 21:59:13,211:INFO:SubProcess create_model() called ==================================
2023-05-25 21:59:13,212:INFO:Initializing create_model()
2023-05-25 21:59:13,212:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:59:13,212:INFO:Checking exceptions
2023-05-25 21:59:13,212:INFO:Importing libraries
2023-05-25 21:59:13,212:INFO:Copying training dataset
2023-05-25 21:59:13,216:INFO:Defining folds
2023-05-25 21:59:13,216:INFO:Declaring metric variables
2023-05-25 21:59:13,219:INFO:Importing untrained model
2023-05-25 21:59:13,223:INFO:Ada Boost Classifier Imported successfully
2023-05-25 21:59:13,233:INFO:Starting cross validation
2023-05-25 21:59:13,233:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:59:13,671:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,673:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,674:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:13,674:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,674:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,676:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,676:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:13,677:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,683:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,684:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,685:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:13,686:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,696:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,698:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,699:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:13,699:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,700:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,701:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:13,702:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:13,703:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:15,076:INFO:Calculating mean and std
2023-05-25 21:59:15,077:INFO:Creating metrics dataframe
2023-05-25 21:59:15,555:INFO:Uploading results into container
2023-05-25 21:59:15,556:INFO:Uploading model into container now
2023-05-25 21:59:15,557:INFO:_master_model_container: 9
2023-05-25 21:59:15,557:INFO:_display_container: 2
2023-05-25 21:59:15,557:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8418)
2023-05-25 21:59:15,557:INFO:create_model() successfully completed......................................
2023-05-25 21:59:15,643:INFO:SubProcess create_model() end ==================================
2023-05-25 21:59:15,643:INFO:Creating metrics dataframe
2023-05-25 21:59:15,655:INFO:Initializing Gradient Boosting Classifier
2023-05-25 21:59:15,655:INFO:Total runtime is 0.4879134337107341 minutes
2023-05-25 21:59:15,658:INFO:SubProcess create_model() called ==================================
2023-05-25 21:59:15,658:INFO:Initializing create_model()
2023-05-25 21:59:15,658:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:59:15,658:INFO:Checking exceptions
2023-05-25 21:59:15,658:INFO:Importing libraries
2023-05-25 21:59:15,658:INFO:Copying training dataset
2023-05-25 21:59:15,663:INFO:Defining folds
2023-05-25 21:59:15,663:INFO:Declaring metric variables
2023-05-25 21:59:15,666:INFO:Importing untrained model
2023-05-25 21:59:15,670:INFO:Gradient Boosting Classifier Imported successfully
2023-05-25 21:59:15,676:INFO:Starting cross validation
2023-05-25 21:59:15,677:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:59:22,754:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,755:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,757:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,779:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,781:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,782:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,810:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,812:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,814:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,856:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,857:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,859:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,864:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,866:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:22,867:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,160:INFO:Calculating mean and std
2023-05-25 21:59:24,161:INFO:Creating metrics dataframe
2023-05-25 21:59:24,651:INFO:Uploading results into container
2023-05-25 21:59:24,651:INFO:Uploading model into container now
2023-05-25 21:59:24,652:INFO:_master_model_container: 10
2023-05-25 21:59:24,652:INFO:_display_container: 2
2023-05-25 21:59:24,652:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8418, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-25 21:59:24,652:INFO:create_model() successfully completed......................................
2023-05-25 21:59:24,734:INFO:SubProcess create_model() end ==================================
2023-05-25 21:59:24,734:INFO:Creating metrics dataframe
2023-05-25 21:59:24,745:INFO:Initializing Linear Discriminant Analysis
2023-05-25 21:59:24,745:INFO:Total runtime is 0.6394228696823121 minutes
2023-05-25 21:59:24,748:INFO:SubProcess create_model() called ==================================
2023-05-25 21:59:24,748:INFO:Initializing create_model()
2023-05-25 21:59:24,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:59:24,749:INFO:Checking exceptions
2023-05-25 21:59:24,749:INFO:Importing libraries
2023-05-25 21:59:24,749:INFO:Copying training dataset
2023-05-25 21:59:24,753:INFO:Defining folds
2023-05-25 21:59:24,754:INFO:Declaring metric variables
2023-05-25 21:59:24,756:INFO:Importing untrained model
2023-05-25 21:59:24,760:INFO:Linear Discriminant Analysis Imported successfully
2023-05-25 21:59:24,766:INFO:Starting cross validation
2023-05-25 21:59:24,768:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:59:24,850:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,850:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,852:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,852:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,853:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,854:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,854:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,855:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,858:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,858:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,860:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,861:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,862:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:24,864:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:26,252:INFO:Calculating mean and std
2023-05-25 21:59:26,253:INFO:Creating metrics dataframe
2023-05-25 21:59:26,761:INFO:Uploading results into container
2023-05-25 21:59:26,762:INFO:Uploading model into container now
2023-05-25 21:59:26,762:INFO:_master_model_container: 11
2023-05-25 21:59:26,762:INFO:_display_container: 2
2023-05-25 21:59:26,763:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-25 21:59:26,763:INFO:create_model() successfully completed......................................
2023-05-25 21:59:26,839:INFO:SubProcess create_model() end ==================================
2023-05-25 21:59:26,839:INFO:Creating metrics dataframe
2023-05-25 21:59:26,850:INFO:Initializing Extra Trees Classifier
2023-05-25 21:59:26,850:INFO:Total runtime is 0.6745047966639202 minutes
2023-05-25 21:59:26,853:INFO:SubProcess create_model() called ==================================
2023-05-25 21:59:26,854:INFO:Initializing create_model()
2023-05-25 21:59:26,854:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:59:26,854:INFO:Checking exceptions
2023-05-25 21:59:26,854:INFO:Importing libraries
2023-05-25 21:59:26,854:INFO:Copying training dataset
2023-05-25 21:59:26,859:INFO:Defining folds
2023-05-25 21:59:26,859:INFO:Declaring metric variables
2023-05-25 21:59:26,863:INFO:Importing untrained model
2023-05-25 21:59:26,866:INFO:Extra Trees Classifier Imported successfully
2023-05-25 21:59:26,873:INFO:Starting cross validation
2023-05-25 21:59:26,874:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:59:27,581:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:27,584:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:27,586:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:27,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:27,599:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:27,601:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:27,602:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:27,602:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:27,603:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:27,603:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:27,604:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:27,610:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:27,613:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:27,614:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:27,615:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:27,616:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:27,616:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:27,616:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:27,617:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:29,031:INFO:Calculating mean and std
2023-05-25 21:59:29,032:INFO:Creating metrics dataframe
2023-05-25 21:59:29,533:INFO:Uploading results into container
2023-05-25 21:59:29,534:INFO:Uploading model into container now
2023-05-25 21:59:29,534:INFO:_master_model_container: 12
2023-05-25 21:59:29,534:INFO:_display_container: 2
2023-05-25 21:59:29,534:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8418, verbose=0, warm_start=False)
2023-05-25 21:59:29,534:INFO:create_model() successfully completed......................................
2023-05-25 21:59:29,617:INFO:SubProcess create_model() end ==================================
2023-05-25 21:59:29,618:INFO:Creating metrics dataframe
2023-05-25 21:59:29,629:INFO:Initializing Light Gradient Boosting Machine
2023-05-25 21:59:29,629:INFO:Total runtime is 0.7208258152008057 minutes
2023-05-25 21:59:29,632:INFO:SubProcess create_model() called ==================================
2023-05-25 21:59:29,632:INFO:Initializing create_model()
2023-05-25 21:59:29,632:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:59:29,632:INFO:Checking exceptions
2023-05-25 21:59:29,633:INFO:Importing libraries
2023-05-25 21:59:29,633:INFO:Copying training dataset
2023-05-25 21:59:29,638:INFO:Defining folds
2023-05-25 21:59:29,638:INFO:Declaring metric variables
2023-05-25 21:59:29,641:INFO:Importing untrained model
2023-05-25 21:59:29,645:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-25 21:59:29,650:INFO:Starting cross validation
2023-05-25 21:59:29,652:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:59:32,091:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,094:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,096:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,140:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,143:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,144:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,193:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,195:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,197:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:32,197:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,201:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,203:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,205:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:32,206:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,211:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,213:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:32,213:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:32,214:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:33,575:INFO:Calculating mean and std
2023-05-25 21:59:33,576:INFO:Creating metrics dataframe
2023-05-25 21:59:34,068:INFO:Uploading results into container
2023-05-25 21:59:34,068:INFO:Uploading model into container now
2023-05-25 21:59:34,069:INFO:_master_model_container: 13
2023-05-25 21:59:34,069:INFO:_display_container: 2
2023-05-25 21:59:34,069:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8418, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-25 21:59:34,069:INFO:create_model() successfully completed......................................
2023-05-25 21:59:34,151:INFO:SubProcess create_model() end ==================================
2023-05-25 21:59:34,151:INFO:Creating metrics dataframe
2023-05-25 21:59:34,163:INFO:Initializing Dummy Classifier
2023-05-25 21:59:34,164:INFO:Total runtime is 0.7963859240214031 minutes
2023-05-25 21:59:34,167:INFO:SubProcess create_model() called ==================================
2023-05-25 21:59:34,167:INFO:Initializing create_model()
2023-05-25 21:59:34,167:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000237CBDBD0F0>, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:59:34,167:INFO:Checking exceptions
2023-05-25 21:59:34,168:INFO:Importing libraries
2023-05-25 21:59:34,168:INFO:Copying training dataset
2023-05-25 21:59:34,172:INFO:Defining folds
2023-05-25 21:59:34,172:INFO:Declaring metric variables
2023-05-25 21:59:34,175:INFO:Importing untrained model
2023-05-25 21:59:34,179:INFO:Dummy Classifier Imported successfully
2023-05-25 21:59:34,185:INFO:Starting cross validation
2023-05-25 21:59:34,186:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-25 21:59:34,253:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,255:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,257:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:34,258:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,263:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,264:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:34,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:34,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,270:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,270:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,271:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:34,272:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,272:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:34,273:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-25 21:59:34,274:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-25 21:59:35,681:INFO:Calculating mean and std
2023-05-25 21:59:35,682:INFO:Creating metrics dataframe
2023-05-25 21:59:36,162:INFO:Uploading results into container
2023-05-25 21:59:36,163:INFO:Uploading model into container now
2023-05-25 21:59:36,163:INFO:_master_model_container: 14
2023-05-25 21:59:36,163:INFO:_display_container: 2
2023-05-25 21:59:36,163:INFO:DummyClassifier(constant=None, random_state=8418, strategy='prior')
2023-05-25 21:59:36,163:INFO:create_model() successfully completed......................................
2023-05-25 21:59:36,242:INFO:SubProcess create_model() end ==================================
2023-05-25 21:59:36,242:INFO:Creating metrics dataframe
2023-05-25 21:59:36,261:INFO:Initializing create_model()
2023-05-25 21:59:36,261:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000237C42ADD80>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8418, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-25 21:59:36,261:INFO:Checking exceptions
2023-05-25 21:59:36,262:INFO:Importing libraries
2023-05-25 21:59:36,262:INFO:Copying training dataset
2023-05-25 21:59:36,267:INFO:Defining folds
2023-05-25 21:59:36,267:INFO:Declaring metric variables
2023-05-25 21:59:36,267:INFO:Importing untrained model
2023-05-25 21:59:36,267:INFO:Declaring custom model
2023-05-25 21:59:36,268:INFO:Random Forest Classifier Imported successfully
2023-05-25 21:59:36,268:INFO:Cross validation set to False
2023-05-25 21:59:36,269:INFO:Fitting Model
2023-05-25 21:59:36,954:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8418, verbose=0, warm_start=False)
2023-05-25 21:59:36,954:INFO:create_model() successfully completed......................................
2023-05-25 21:59:37,068:INFO:_master_model_container: 14
2023-05-25 21:59:37,068:INFO:_display_container: 2
2023-05-25 21:59:37,068:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8418, verbose=0, warm_start=False)
2023-05-25 21:59:37,068:INFO:compare_models() successfully completed......................................
2023-05-29 12:17:44,905:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_360\1569036350.py:20: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  correlation_matrix = scdf.corr()

2023-05-29 12:18:47,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-29 12:18:47,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-29 12:18:47,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-29 12:18:47,048:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-05-29 12:18:48,382:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-05-29 12:18:49,096:INFO:PyCaret ClassificationExperiment
2023-05-29 12:18:49,096:INFO:Logging name: clf-default-name
2023-05-29 12:18:49,096:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-29 12:18:49,096:INFO:version 3.0.2
2023-05-29 12:18:49,096:INFO:Initializing setup()
2023-05-29 12:18:49,096:INFO:self.USI: 217e
2023-05-29 12:18:49,096:INFO:self._variable_keys: {'fix_imbalance', 'is_multiclass', 'X_train', '_ml_usecase', '_available_plots', 'exp_name_log', 'gpu_n_jobs_param', 'pipeline', 'y_train', 'X', 'n_jobs_param', 'idx', 'data', 'target_param', 'exp_id', 'fold_groups_param', 'logging_param', 'fold_generator', 'memory', 'X_test', 'y_test', 'gpu_param', 'fold_shuffle_param', 'USI', 'y', 'seed', 'html_param', 'log_plots_param'}
2023-05-29 12:18:49,096:INFO:Checking environment
2023-05-29 12:18:49,096:INFO:python_version: 3.10.9
2023-05-29 12:18:49,096:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-29 12:18:49,096:INFO:machine: AMD64
2023-05-29 12:18:49,097:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-29 12:18:49,097:INFO:Memory: svmem(total=17112055808, available=6868058112, percent=59.9, used=10243997696, free=6868058112)
2023-05-29 12:18:49,097:INFO:Physical Core: 8
2023-05-29 12:18:49,097:INFO:Logical Core: 16
2023-05-29 12:18:49,097:INFO:Checking libraries
2023-05-29 12:18:49,097:INFO:System:
2023-05-29 12:18:49,097:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-29 12:18:49,097:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-29 12:18:49,097:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-29 12:18:49,097:INFO:PyCaret required dependencies:
2023-05-29 12:18:49,097:INFO:                 pip: 22.3.1
2023-05-29 12:18:49,097:INFO:          setuptools: 65.6.3
2023-05-29 12:18:49,097:INFO:             pycaret: 3.0.2
2023-05-29 12:18:49,097:INFO:             IPython: 8.10.0
2023-05-29 12:18:49,098:INFO:          ipywidgets: 7.6.5
2023-05-29 12:18:49,098:INFO:                tqdm: 4.64.1
2023-05-29 12:18:49,098:INFO:               numpy: 1.23.5
2023-05-29 12:18:49,098:INFO:              pandas: 1.5.3
2023-05-29 12:18:49,098:INFO:              jinja2: 3.1.2
2023-05-29 12:18:49,098:INFO:               scipy: 1.10.0
2023-05-29 12:18:49,098:INFO:              joblib: 1.1.1
2023-05-29 12:18:49,098:INFO:             sklearn: 1.2.1
2023-05-29 12:18:49,098:INFO:                pyod: 1.0.9
2023-05-29 12:18:49,098:INFO:            imblearn: 0.10.1
2023-05-29 12:18:49,098:INFO:   category_encoders: 2.6.1
2023-05-29 12:18:49,098:INFO:            lightgbm: 3.3.5
2023-05-29 12:18:49,098:INFO:               numba: 0.56.4
2023-05-29 12:18:49,098:INFO:            requests: 2.28.1
2023-05-29 12:18:49,098:INFO:          matplotlib: 3.7.0
2023-05-29 12:18:49,098:INFO:          scikitplot: 0.3.7
2023-05-29 12:18:49,098:INFO:         yellowbrick: 1.5
2023-05-29 12:18:49,098:INFO:              plotly: 5.9.0
2023-05-29 12:18:49,098:INFO:             kaleido: 0.2.1
2023-05-29 12:18:49,098:INFO:         statsmodels: 0.13.5
2023-05-29 12:18:49,098:INFO:              sktime: 0.17.0
2023-05-29 12:18:49,099:INFO:               tbats: 1.1.3
2023-05-29 12:18:49,099:INFO:            pmdarima: 2.0.3
2023-05-29 12:18:49,099:INFO:              psutil: 5.9.0
2023-05-29 12:18:49,099:INFO:PyCaret optional dependencies:
2023-05-29 12:18:49,111:INFO:                shap: Not installed
2023-05-29 12:18:49,111:INFO:           interpret: Not installed
2023-05-29 12:18:49,112:INFO:                umap: Not installed
2023-05-29 12:18:49,112:INFO:    pandas_profiling: Not installed
2023-05-29 12:18:49,112:INFO:  explainerdashboard: Not installed
2023-05-29 12:18:49,112:INFO:             autoviz: Not installed
2023-05-29 12:18:49,112:INFO:           fairlearn: Not installed
2023-05-29 12:18:49,112:INFO:             xgboost: Not installed
2023-05-29 12:18:49,112:INFO:            catboost: Not installed
2023-05-29 12:18:49,112:INFO:              kmodes: Not installed
2023-05-29 12:18:49,112:INFO:             mlxtend: Not installed
2023-05-29 12:18:49,112:INFO:       statsforecast: Not installed
2023-05-29 12:18:49,112:INFO:        tune_sklearn: Not installed
2023-05-29 12:18:49,112:INFO:                 ray: Not installed
2023-05-29 12:18:49,112:INFO:            hyperopt: Not installed
2023-05-29 12:18:49,112:INFO:              optuna: Not installed
2023-05-29 12:18:49,112:INFO:               skopt: Not installed
2023-05-29 12:18:49,112:INFO:              mlflow: Not installed
2023-05-29 12:18:49,112:INFO:              gradio: Not installed
2023-05-29 12:18:49,112:INFO:             fastapi: Not installed
2023-05-29 12:18:49,112:INFO:             uvicorn: Not installed
2023-05-29 12:18:49,113:INFO:              m2cgen: Not installed
2023-05-29 12:18:49,113:INFO:           evidently: Not installed
2023-05-29 12:18:49,113:INFO:               fugue: Not installed
2023-05-29 12:18:49,113:INFO:           streamlit: Not installed
2023-05-29 12:18:49,113:INFO:             prophet: Not installed
2023-05-29 12:18:49,113:INFO:None
2023-05-29 12:18:49,113:INFO:Set up data.
2023-05-29 12:18:49,119:INFO:Set up train/test split.
2023-05-29 12:18:49,126:INFO:Set up index.
2023-05-29 12:18:49,126:INFO:Set up folding strategy.
2023-05-29 12:18:49,126:INFO:Assigning column types.
2023-05-29 12:18:49,129:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-29 12:18:49,170:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-29 12:18:49,172:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-29 12:18:49,210:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:49,559:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:49,598:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-29 12:18:49,599:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-29 12:18:49,623:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:49,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:49,623:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-29 12:18:49,662:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-29 12:18:49,685:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:49,685:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:49,723:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-29 12:18:49,747:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:49,747:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:49,748:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-29 12:18:49,810:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:49,810:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:49,871:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:49,872:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:49,879:INFO:Preparing preprocessing pipeline...
2023-05-29 12:18:49,880:INFO:Set up label encoding.
2023-05-29 12:18:49,880:INFO:Set up simple imputation.
2023-05-29 12:18:49,901:INFO:Finished creating preprocessing pipeline.
2023-05-29 12:18:49,907:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['HoursPerWeek', 'TotalHours',
                                             'APM', 'SelectByHotkeys',
                                             'UniqueHotkeys', 'MinimapAttacks',
                                             'MinimapRightCl...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-05-29 12:18:49,907:INFO:Creating final display dataframe.
2023-05-29 12:18:49,972:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      3025
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                (3337, 12)
5        Transformed data shape                                (3337, 12)
6   Transformed train set shape                                (2669, 12)
7    Transformed test set shape                                 (668, 12)
8              Numeric features                                        11
9                    Preprocess                                      True
10              Imputation type                                    simple
11           Numeric imputation                                      mean
12       Categorical imputation                                      mode
13               Fold Generator                           StratifiedKFold
14                  Fold Number                                         5
15                     CPU Jobs                                        -1
16                      Use GPU                                     False
17               Log Experiment                                     False
18              Experiment Name                          clf-default-name
19                          USI                                      217e
2023-05-29 12:18:50,042:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:50,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:50,106:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:50,106:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:18:50,107:INFO:setup() successfully completed in 1.45s...............
2023-05-29 12:18:55,102:INFO:Initializing compare_models()
2023-05-29 12:18:55,102:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-29 12:18:55,102:INFO:Checking exceptions
2023-05-29 12:18:55,105:INFO:Preparing display monitor
2023-05-29 12:18:55,132:INFO:Initializing Logistic Regression
2023-05-29 12:18:55,133:INFO:Total runtime is 1.6677379608154298e-05 minutes
2023-05-29 12:18:55,136:INFO:SubProcess create_model() called ==================================
2023-05-29 12:18:55,136:INFO:Initializing create_model()
2023-05-29 12:18:55,136:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:18:55,136:INFO:Checking exceptions
2023-05-29 12:18:55,136:INFO:Importing libraries
2023-05-29 12:18:55,136:INFO:Copying training dataset
2023-05-29 12:18:55,142:INFO:Defining folds
2023-05-29 12:18:55,142:INFO:Declaring metric variables
2023-05-29 12:18:55,145:INFO:Importing untrained model
2023-05-29 12:18:55,148:INFO:Logistic Regression Imported successfully
2023-05-29 12:18:55,154:INFO:Starting cross validation
2023-05-29 12:18:55,155:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:18:59,816:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-29 12:18:59,816:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-29 12:18:59,819:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-29 12:18:59,825:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-29 12:18:59,840:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-29 12:18:59,875:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,875:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,875:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,877:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,877:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,877:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,877:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,878:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,878:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:18:59,879:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,879:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,879:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,880:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,894:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,895:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:18:59,897:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:01,215:INFO:Calculating mean and std
2023-05-29 12:19:01,216:INFO:Creating metrics dataframe
2023-05-29 12:19:01,650:INFO:Uploading results into container
2023-05-29 12:19:01,650:INFO:Uploading model into container now
2023-05-29 12:19:01,652:INFO:_master_model_container: 1
2023-05-29 12:19:01,652:INFO:_display_container: 2
2023-05-29 12:19:01,652:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3025, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-29 12:19:01,652:INFO:create_model() successfully completed......................................
2023-05-29 12:19:01,720:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:01,720:INFO:Creating metrics dataframe
2023-05-29 12:19:01,728:INFO:Initializing K Neighbors Classifier
2023-05-29 12:19:01,728:INFO:Total runtime is 0.10993566513061524 minutes
2023-05-29 12:19:01,731:INFO:SubProcess create_model() called ==================================
2023-05-29 12:19:01,732:INFO:Initializing create_model()
2023-05-29 12:19:01,732:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:01,732:INFO:Checking exceptions
2023-05-29 12:19:01,732:INFO:Importing libraries
2023-05-29 12:19:01,732:INFO:Copying training dataset
2023-05-29 12:19:01,736:INFO:Defining folds
2023-05-29 12:19:01,736:INFO:Declaring metric variables
2023-05-29 12:19:01,739:INFO:Importing untrained model
2023-05-29 12:19:01,741:INFO:K Neighbors Classifier Imported successfully
2023-05-29 12:19:01,747:INFO:Starting cross validation
2023-05-29 12:19:01,748:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:19:03,763:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,764:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,764:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,765:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,765:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:03,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:03,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,766:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:03,767:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,767:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,768:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,769:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,769:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,770:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:03,771:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:03,772:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:05,090:INFO:Calculating mean and std
2023-05-29 12:19:05,091:INFO:Creating metrics dataframe
2023-05-29 12:19:05,542:INFO:Uploading results into container
2023-05-29 12:19:05,542:INFO:Uploading model into container now
2023-05-29 12:19:05,543:INFO:_master_model_container: 2
2023-05-29 12:19:05,543:INFO:_display_container: 2
2023-05-29 12:19:05,543:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-29 12:19:05,543:INFO:create_model() successfully completed......................................
2023-05-29 12:19:05,614:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:05,614:INFO:Creating metrics dataframe
2023-05-29 12:19:05,622:INFO:Initializing Naive Bayes
2023-05-29 12:19:05,622:INFO:Total runtime is 0.17483309110005696 minutes
2023-05-29 12:19:05,625:INFO:SubProcess create_model() called ==================================
2023-05-29 12:19:05,625:INFO:Initializing create_model()
2023-05-29 12:19:05,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:05,626:INFO:Checking exceptions
2023-05-29 12:19:05,626:INFO:Importing libraries
2023-05-29 12:19:05,626:INFO:Copying training dataset
2023-05-29 12:19:05,629:INFO:Defining folds
2023-05-29 12:19:05,629:INFO:Declaring metric variables
2023-05-29 12:19:05,632:INFO:Importing untrained model
2023-05-29 12:19:05,635:INFO:Naive Bayes Imported successfully
2023-05-29 12:19:05,640:INFO:Starting cross validation
2023-05-29 12:19:05,641:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:19:07,666:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,666:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,667:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,669:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,669:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,669:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,670:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,673:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,673:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,674:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,674:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,676:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:07,676:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:08,992:INFO:Calculating mean and std
2023-05-29 12:19:08,993:INFO:Creating metrics dataframe
2023-05-29 12:19:09,446:INFO:Uploading results into container
2023-05-29 12:19:09,446:INFO:Uploading model into container now
2023-05-29 12:19:09,447:INFO:_master_model_container: 3
2023-05-29 12:19:09,447:INFO:_display_container: 2
2023-05-29 12:19:09,447:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-29 12:19:09,447:INFO:create_model() successfully completed......................................
2023-05-29 12:19:09,525:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:09,525:INFO:Creating metrics dataframe
2023-05-29 12:19:09,535:INFO:Initializing Decision Tree Classifier
2023-05-29 12:19:09,535:INFO:Total runtime is 0.2400390863418579 minutes
2023-05-29 12:19:09,538:INFO:SubProcess create_model() called ==================================
2023-05-29 12:19:09,538:INFO:Initializing create_model()
2023-05-29 12:19:09,538:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:09,539:INFO:Checking exceptions
2023-05-29 12:19:09,539:INFO:Importing libraries
2023-05-29 12:19:09,539:INFO:Copying training dataset
2023-05-29 12:19:09,543:INFO:Defining folds
2023-05-29 12:19:09,543:INFO:Declaring metric variables
2023-05-29 12:19:09,546:INFO:Importing untrained model
2023-05-29 12:19:09,549:INFO:Decision Tree Classifier Imported successfully
2023-05-29 12:19:09,555:INFO:Starting cross validation
2023-05-29 12:19:09,556:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:19:09,644:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:09,645:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:09,647:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:09,651:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:09,653:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:09,653:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:09,654:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:09,654:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:09,655:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:09,656:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:09,656:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:09,658:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:11,463:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:11,464:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:11,466:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:11,469:INFO:Calculating mean and std
2023-05-29 12:19:11,470:INFO:Creating metrics dataframe
2023-05-29 12:19:11,932:INFO:Uploading results into container
2023-05-29 12:19:11,932:INFO:Uploading model into container now
2023-05-29 12:19:11,932:INFO:_master_model_container: 4
2023-05-29 12:19:11,933:INFO:_display_container: 2
2023-05-29 12:19:11,933:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3025, splitter='best')
2023-05-29 12:19:11,933:INFO:create_model() successfully completed......................................
2023-05-29 12:19:12,000:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:12,000:INFO:Creating metrics dataframe
2023-05-29 12:19:12,010:INFO:Initializing SVM - Linear Kernel
2023-05-29 12:19:12,010:INFO:Total runtime is 0.28129985729853313 minutes
2023-05-29 12:19:12,012:INFO:SubProcess create_model() called ==================================
2023-05-29 12:19:12,013:INFO:Initializing create_model()
2023-05-29 12:19:12,013:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:12,013:INFO:Checking exceptions
2023-05-29 12:19:12,013:INFO:Importing libraries
2023-05-29 12:19:12,013:INFO:Copying training dataset
2023-05-29 12:19:12,017:INFO:Defining folds
2023-05-29 12:19:12,017:INFO:Declaring metric variables
2023-05-29 12:19:12,020:INFO:Importing untrained model
2023-05-29 12:19:12,023:INFO:SVM - Linear Kernel Imported successfully
2023-05-29 12:19:12,031:INFO:Starting cross validation
2023-05-29 12:19:12,032:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:19:12,125:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-29 12:19:12,125:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-29 12:19:12,125:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-29 12:19:12,126:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,126:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-29 12:19:12,126:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,126:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,127:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,127:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-29 12:19:12,127:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,127:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,128:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,128:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,128:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,128:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:12,128:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:12,129:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:12,129:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,129:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,129:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:12,129:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,129:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,130:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:12,130:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:12,131:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:13,442:INFO:Calculating mean and std
2023-05-29 12:19:13,443:INFO:Creating metrics dataframe
2023-05-29 12:19:13,896:INFO:Uploading results into container
2023-05-29 12:19:13,897:INFO:Uploading model into container now
2023-05-29 12:19:13,897:INFO:_master_model_container: 5
2023-05-29 12:19:13,897:INFO:_display_container: 2
2023-05-29 12:19:13,898:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3025, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-29 12:19:13,898:INFO:create_model() successfully completed......................................
2023-05-29 12:19:13,972:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:13,972:INFO:Creating metrics dataframe
2023-05-29 12:19:13,982:INFO:Initializing Ridge Classifier
2023-05-29 12:19:13,982:INFO:Total runtime is 0.3141585151354472 minutes
2023-05-29 12:19:13,985:INFO:SubProcess create_model() called ==================================
2023-05-29 12:19:13,986:INFO:Initializing create_model()
2023-05-29 12:19:13,986:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:13,986:INFO:Checking exceptions
2023-05-29 12:19:13,986:INFO:Importing libraries
2023-05-29 12:19:13,986:INFO:Copying training dataset
2023-05-29 12:19:13,989:INFO:Defining folds
2023-05-29 12:19:13,989:INFO:Declaring metric variables
2023-05-29 12:19:13,992:INFO:Importing untrained model
2023-05-29 12:19:13,995:INFO:Ridge Classifier Imported successfully
2023-05-29 12:19:14,002:INFO:Starting cross validation
2023-05-29 12:19:14,003:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:19:14,083:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=4.81424e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-29 12:19:14,083:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=4.79351e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-29 12:19:14,083:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=6.4693e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-29 12:19:14,084:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.44811e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-29 12:19:14,084:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=5.89188e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-29 12:19:14,100:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-29 12:19:14,101:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-29 12:19:14,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:14,101:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-29 12:19:14,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:14,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:14,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:14,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:14,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:14,104:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:14,104:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-29 12:19:14,104:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:14,104:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-29 12:19:14,104:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:14,105:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:14,105:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:14,105:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:14,106:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:14,106:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:14,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:14,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:14,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:14,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:15,441:INFO:Calculating mean and std
2023-05-29 12:19:15,441:INFO:Creating metrics dataframe
2023-05-29 12:19:15,879:INFO:Uploading results into container
2023-05-29 12:19:15,880:INFO:Uploading model into container now
2023-05-29 12:19:15,880:INFO:_master_model_container: 6
2023-05-29 12:19:15,880:INFO:_display_container: 2
2023-05-29 12:19:15,880:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3025, solver='auto',
                tol=0.0001)
2023-05-29 12:19:15,880:INFO:create_model() successfully completed......................................
2023-05-29 12:19:15,949:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:15,949:INFO:Creating metrics dataframe
2023-05-29 12:19:15,958:INFO:Initializing Random Forest Classifier
2023-05-29 12:19:15,958:INFO:Total runtime is 0.34709395170211793 minutes
2023-05-29 12:19:15,961:INFO:SubProcess create_model() called ==================================
2023-05-29 12:19:15,962:INFO:Initializing create_model()
2023-05-29 12:19:15,962:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:15,962:INFO:Checking exceptions
2023-05-29 12:19:15,962:INFO:Importing libraries
2023-05-29 12:19:15,962:INFO:Copying training dataset
2023-05-29 12:19:15,966:INFO:Defining folds
2023-05-29 12:19:15,966:INFO:Declaring metric variables
2023-05-29 12:19:15,968:INFO:Importing untrained model
2023-05-29 12:19:15,971:INFO:Random Forest Classifier Imported successfully
2023-05-29 12:19:15,978:INFO:Starting cross validation
2023-05-29 12:19:15,979:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:19:16,640:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,642:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,643:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:16,643:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,655:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,657:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,657:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:16,658:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,659:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,661:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,662:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,662:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,664:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,665:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:16,665:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,665:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,667:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:16,668:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:17,982:INFO:Calculating mean and std
2023-05-29 12:19:17,983:INFO:Creating metrics dataframe
2023-05-29 12:19:18,438:INFO:Uploading results into container
2023-05-29 12:19:18,438:INFO:Uploading model into container now
2023-05-29 12:19:18,439:INFO:_master_model_container: 7
2023-05-29 12:19:18,439:INFO:_display_container: 2
2023-05-29 12:19:18,439:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3025, verbose=0, warm_start=False)
2023-05-29 12:19:18,439:INFO:create_model() successfully completed......................................
2023-05-29 12:19:18,514:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:18,514:INFO:Creating metrics dataframe
2023-05-29 12:19:18,524:INFO:Initializing Quadratic Discriminant Analysis
2023-05-29 12:19:18,524:INFO:Total runtime is 0.38985778888066613 minutes
2023-05-29 12:19:18,527:INFO:SubProcess create_model() called ==================================
2023-05-29 12:19:18,527:INFO:Initializing create_model()
2023-05-29 12:19:18,527:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:18,527:INFO:Checking exceptions
2023-05-29 12:19:18,527:INFO:Importing libraries
2023-05-29 12:19:18,528:INFO:Copying training dataset
2023-05-29 12:19:18,531:INFO:Defining folds
2023-05-29 12:19:18,531:INFO:Declaring metric variables
2023-05-29 12:19:18,534:INFO:Importing untrained model
2023-05-29 12:19:18,537:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-29 12:19:18,543:INFO:Starting cross validation
2023-05-29 12:19:18,544:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:19:18,640:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:18,641:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:18,642:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:18,642:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:18,642:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:18,642:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:18,643:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:18,643:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:18,643:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:18,643:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:18,644:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:18,645:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:18,645:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:18,645:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:19,978:INFO:Calculating mean and std
2023-05-29 12:19:19,979:INFO:Creating metrics dataframe
2023-05-29 12:19:20,426:INFO:Uploading results into container
2023-05-29 12:19:20,427:INFO:Uploading model into container now
2023-05-29 12:19:20,427:INFO:_master_model_container: 8
2023-05-29 12:19:20,427:INFO:_display_container: 2
2023-05-29 12:19:20,428:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-29 12:19:20,428:INFO:create_model() successfully completed......................................
2023-05-29 12:19:20,496:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:20,496:INFO:Creating metrics dataframe
2023-05-29 12:19:20,506:INFO:Initializing Ada Boost Classifier
2023-05-29 12:19:20,506:INFO:Total runtime is 0.42289829651514693 minutes
2023-05-29 12:19:20,509:INFO:SubProcess create_model() called ==================================
2023-05-29 12:19:20,509:INFO:Initializing create_model()
2023-05-29 12:19:20,510:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:20,510:INFO:Checking exceptions
2023-05-29 12:19:20,510:INFO:Importing libraries
2023-05-29 12:19:20,510:INFO:Copying training dataset
2023-05-29 12:19:20,514:INFO:Defining folds
2023-05-29 12:19:20,514:INFO:Declaring metric variables
2023-05-29 12:19:20,517:INFO:Importing untrained model
2023-05-29 12:19:20,520:INFO:Ada Boost Classifier Imported successfully
2023-05-29 12:19:20,525:INFO:Starting cross validation
2023-05-29 12:19:20,527:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:19:20,904:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,906:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,907:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:20,907:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,917:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,918:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,919:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:20,920:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,920:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,921:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,923:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,925:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,926:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,927:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,927:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,927:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:20,928:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:20,929:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:22,232:INFO:Calculating mean and std
2023-05-29 12:19:22,233:INFO:Creating metrics dataframe
2023-05-29 12:19:22,675:INFO:Uploading results into container
2023-05-29 12:19:22,676:INFO:Uploading model into container now
2023-05-29 12:19:22,676:INFO:_master_model_container: 9
2023-05-29 12:19:22,676:INFO:_display_container: 2
2023-05-29 12:19:22,676:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3025)
2023-05-29 12:19:22,676:INFO:create_model() successfully completed......................................
2023-05-29 12:19:22,745:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:22,745:INFO:Creating metrics dataframe
2023-05-29 12:19:22,755:INFO:Initializing Gradient Boosting Classifier
2023-05-29 12:19:22,755:INFO:Total runtime is 0.46038678089777635 minutes
2023-05-29 12:19:22,758:INFO:SubProcess create_model() called ==================================
2023-05-29 12:19:22,759:INFO:Initializing create_model()
2023-05-29 12:19:22,759:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:22,759:INFO:Checking exceptions
2023-05-29 12:19:22,759:INFO:Importing libraries
2023-05-29 12:19:22,759:INFO:Copying training dataset
2023-05-29 12:19:22,763:INFO:Defining folds
2023-05-29 12:19:22,763:INFO:Declaring metric variables
2023-05-29 12:19:22,765:INFO:Importing untrained model
2023-05-29 12:19:22,768:INFO:Gradient Boosting Classifier Imported successfully
2023-05-29 12:19:22,774:INFO:Starting cross validation
2023-05-29 12:19:22,774:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:19:28,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,059:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,060:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,062:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,063:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,065:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,067:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,177:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,178:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,179:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:28,180:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,252:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,254:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:28,256:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:29,417:INFO:Calculating mean and std
2023-05-29 12:19:29,418:INFO:Creating metrics dataframe
2023-05-29 12:19:29,879:INFO:Uploading results into container
2023-05-29 12:19:29,880:INFO:Uploading model into container now
2023-05-29 12:19:29,880:INFO:_master_model_container: 10
2023-05-29 12:19:29,880:INFO:_display_container: 2
2023-05-29 12:19:29,880:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3025, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-29 12:19:29,881:INFO:create_model() successfully completed......................................
2023-05-29 12:19:29,955:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:29,955:INFO:Creating metrics dataframe
2023-05-29 12:19:29,966:INFO:Initializing Linear Discriminant Analysis
2023-05-29 12:19:29,966:INFO:Total runtime is 0.5805689732233684 minutes
2023-05-29 12:19:29,969:INFO:SubProcess create_model() called ==================================
2023-05-29 12:19:29,970:INFO:Initializing create_model()
2023-05-29 12:19:29,970:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:29,970:INFO:Checking exceptions
2023-05-29 12:19:29,970:INFO:Importing libraries
2023-05-29 12:19:29,970:INFO:Copying training dataset
2023-05-29 12:19:29,974:INFO:Defining folds
2023-05-29 12:19:29,974:INFO:Declaring metric variables
2023-05-29 12:19:29,978:INFO:Importing untrained model
2023-05-29 12:19:29,981:INFO:Linear Discriminant Analysis Imported successfully
2023-05-29 12:19:29,987:INFO:Starting cross validation
2023-05-29 12:19:29,988:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:19:30,067:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,068:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,068:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,069:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,069:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,069:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,070:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,070:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,070:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,070:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,071:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,071:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,072:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,072:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:30,073:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:31,403:INFO:Calculating mean and std
2023-05-29 12:19:31,404:INFO:Creating metrics dataframe
2023-05-29 12:19:31,851:INFO:Uploading results into container
2023-05-29 12:19:31,851:INFO:Uploading model into container now
2023-05-29 12:19:31,852:INFO:_master_model_container: 11
2023-05-29 12:19:31,852:INFO:_display_container: 2
2023-05-29 12:19:31,852:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-29 12:19:31,852:INFO:create_model() successfully completed......................................
2023-05-29 12:19:31,919:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:31,919:INFO:Creating metrics dataframe
2023-05-29 12:19:31,930:INFO:Initializing Extra Trees Classifier
2023-05-29 12:19:31,930:INFO:Total runtime is 0.6133031805356345 minutes
2023-05-29 12:19:31,933:INFO:SubProcess create_model() called ==================================
2023-05-29 12:19:31,933:INFO:Initializing create_model()
2023-05-29 12:19:31,934:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:31,934:INFO:Checking exceptions
2023-05-29 12:19:31,934:INFO:Importing libraries
2023-05-29 12:19:31,934:INFO:Copying training dataset
2023-05-29 12:19:31,937:INFO:Defining folds
2023-05-29 12:19:31,937:INFO:Declaring metric variables
2023-05-29 12:19:31,940:INFO:Importing untrained model
2023-05-29 12:19:31,943:INFO:Extra Trees Classifier Imported successfully
2023-05-29 12:19:31,948:INFO:Starting cross validation
2023-05-29 12:19:31,949:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:19:32,480:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,480:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,481:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,482:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,482:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:32,483:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:32,483:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,483:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,487:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,488:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,489:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:32,490:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,493:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,495:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,496:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,511:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,513:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:32,514:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:33,820:INFO:Calculating mean and std
2023-05-29 12:19:33,821:INFO:Creating metrics dataframe
2023-05-29 12:19:34,275:INFO:Uploading results into container
2023-05-29 12:19:34,276:INFO:Uploading model into container now
2023-05-29 12:19:34,276:INFO:_master_model_container: 12
2023-05-29 12:19:34,276:INFO:_display_container: 2
2023-05-29 12:19:34,277:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3025, verbose=0, warm_start=False)
2023-05-29 12:19:34,277:INFO:create_model() successfully completed......................................
2023-05-29 12:19:34,354:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:34,354:INFO:Creating metrics dataframe
2023-05-29 12:19:34,366:INFO:Initializing Light Gradient Boosting Machine
2023-05-29 12:19:34,366:INFO:Total runtime is 0.6538894494374594 minutes
2023-05-29 12:19:34,369:INFO:SubProcess create_model() called ==================================
2023-05-29 12:19:34,369:INFO:Initializing create_model()
2023-05-29 12:19:34,369:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:34,369:INFO:Checking exceptions
2023-05-29 12:19:34,370:INFO:Importing libraries
2023-05-29 12:19:34,370:INFO:Copying training dataset
2023-05-29 12:19:34,374:INFO:Defining folds
2023-05-29 12:19:34,374:INFO:Declaring metric variables
2023-05-29 12:19:34,377:INFO:Importing untrained model
2023-05-29 12:19:34,380:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-29 12:19:34,387:INFO:Starting cross validation
2023-05-29 12:19:34,389:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:19:36,132:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,134:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,135:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:36,135:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,189:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,191:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,192:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,194:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,197:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,199:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,201:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,203:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,205:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,228:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,230:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:36,231:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:37,481:INFO:Calculating mean and std
2023-05-29 12:19:37,482:INFO:Creating metrics dataframe
2023-05-29 12:19:37,930:INFO:Uploading results into container
2023-05-29 12:19:37,930:INFO:Uploading model into container now
2023-05-29 12:19:37,930:INFO:_master_model_container: 13
2023-05-29 12:19:37,930:INFO:_display_container: 2
2023-05-29 12:19:37,931:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3025, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-29 12:19:37,931:INFO:create_model() successfully completed......................................
2023-05-29 12:19:37,999:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:37,999:INFO:Creating metrics dataframe
2023-05-29 12:19:38,011:INFO:Initializing Dummy Classifier
2023-05-29 12:19:38,011:INFO:Total runtime is 0.7146411379178366 minutes
2023-05-29 12:19:38,014:INFO:SubProcess create_model() called ==================================
2023-05-29 12:19:38,014:INFO:Initializing create_model()
2023-05-29 12:19:38,014:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC3400>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:38,014:INFO:Checking exceptions
2023-05-29 12:19:38,014:INFO:Importing libraries
2023-05-29 12:19:38,015:INFO:Copying training dataset
2023-05-29 12:19:38,018:INFO:Defining folds
2023-05-29 12:19:38,018:INFO:Declaring metric variables
2023-05-29 12:19:38,021:INFO:Importing untrained model
2023-05-29 12:19:38,024:INFO:Dummy Classifier Imported successfully
2023-05-29 12:19:38,030:INFO:Starting cross validation
2023-05-29 12:19:38,031:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:19:38,093:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,095:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,096:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:38,096:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,096:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,097:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,098:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,098:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:38,099:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,099:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,100:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:38,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,102:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,104:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:38,105:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,105:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,107:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:38,108:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:19:38,109:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:19:39,453:INFO:Calculating mean and std
2023-05-29 12:19:39,454:INFO:Creating metrics dataframe
2023-05-29 12:19:39,925:INFO:Uploading results into container
2023-05-29 12:19:39,925:INFO:Uploading model into container now
2023-05-29 12:19:39,926:INFO:_master_model_container: 14
2023-05-29 12:19:39,926:INFO:_display_container: 2
2023-05-29 12:19:39,926:INFO:DummyClassifier(constant=None, random_state=3025, strategy='prior')
2023-05-29 12:19:39,926:INFO:create_model() successfully completed......................................
2023-05-29 12:19:39,999:INFO:SubProcess create_model() end ==================================
2023-05-29 12:19:39,999:INFO:Creating metrics dataframe
2023-05-29 12:19:40,019:INFO:Initializing create_model()
2023-05-29 12:19:40,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0B893F460>, estimator=LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3025, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:19:40,019:INFO:Checking exceptions
2023-05-29 12:19:40,020:INFO:Importing libraries
2023-05-29 12:19:40,020:INFO:Copying training dataset
2023-05-29 12:19:40,024:INFO:Defining folds
2023-05-29 12:19:40,024:INFO:Declaring metric variables
2023-05-29 12:19:40,024:INFO:Importing untrained model
2023-05-29 12:19:40,024:INFO:Declaring custom model
2023-05-29 12:19:40,025:INFO:Logistic Regression Imported successfully
2023-05-29 12:19:40,025:INFO:Cross validation set to False
2023-05-29 12:19:40,025:INFO:Fitting Model
2023-05-29 12:19:40,524:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-29 12:19:40,875:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3025, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-29 12:19:40,875:INFO:create_model() successfully completed......................................
2023-05-29 12:19:40,970:INFO:_master_model_container: 14
2023-05-29 12:19:40,970:INFO:_display_container: 2
2023-05-29 12:19:40,971:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3025, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-29 12:19:40,971:INFO:compare_models() successfully completed......................................
2023-05-29 12:20:25,411:WARNING:C:\Users\liaoj\AppData\Local\Temp\ipykernel_360\1569036350.py:20: FutureWarning: The default value of numeric_only in DataFrame.corr is deprecated. In a future version, it will default to False. Select only valid columns or specify the value of numeric_only to silence this warning.
  correlation_matrix = scdf.corr()

2023-05-29 12:20:34,633:INFO:PyCaret ClassificationExperiment
2023-05-29 12:20:34,633:INFO:Logging name: clf-default-name
2023-05-29 12:20:34,633:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-05-29 12:20:34,633:INFO:version 3.0.2
2023-05-29 12:20:34,634:INFO:Initializing setup()
2023-05-29 12:20:34,634:INFO:self.USI: f2b5
2023-05-29 12:20:34,634:INFO:self._variable_keys: {'fix_imbalance', 'is_multiclass', 'X_train', '_ml_usecase', '_available_plots', 'exp_name_log', 'gpu_n_jobs_param', 'pipeline', 'y_train', 'X', 'n_jobs_param', 'idx', 'data', 'target_param', 'exp_id', 'fold_groups_param', 'logging_param', 'fold_generator', 'memory', 'X_test', 'y_test', 'gpu_param', 'fold_shuffle_param', 'USI', 'y', 'seed', 'html_param', 'log_plots_param'}
2023-05-29 12:20:34,634:INFO:Checking environment
2023-05-29 12:20:34,634:INFO:python_version: 3.10.9
2023-05-29 12:20:34,634:INFO:python_build: ('main', 'Mar  1 2023 18:18:15')
2023-05-29 12:20:34,634:INFO:machine: AMD64
2023-05-29 12:20:34,634:INFO:platform: Windows-10-10.0.22621-SP0
2023-05-29 12:20:34,634:INFO:Memory: svmem(total=17112055808, available=4840599552, percent=71.7, used=12271456256, free=4840599552)
2023-05-29 12:20:34,634:INFO:Physical Core: 8
2023-05-29 12:20:34,634:INFO:Logical Core: 16
2023-05-29 12:20:34,634:INFO:Checking libraries
2023-05-29 12:20:34,634:INFO:System:
2023-05-29 12:20:34,634:INFO:    python: 3.10.9 | packaged by Anaconda, Inc. | (main, Mar  1 2023, 18:18:15) [MSC v.1916 64 bit (AMD64)]
2023-05-29 12:20:34,634:INFO:executable: C:\ProgramData\anaconda3\python.exe
2023-05-29 12:20:34,634:INFO:   machine: Windows-10-10.0.22621-SP0
2023-05-29 12:20:34,634:INFO:PyCaret required dependencies:
2023-05-29 12:20:34,634:INFO:                 pip: 22.3.1
2023-05-29 12:20:34,634:INFO:          setuptools: 65.6.3
2023-05-29 12:20:34,634:INFO:             pycaret: 3.0.2
2023-05-29 12:20:34,634:INFO:             IPython: 8.10.0
2023-05-29 12:20:34,635:INFO:          ipywidgets: 7.6.5
2023-05-29 12:20:34,635:INFO:                tqdm: 4.64.1
2023-05-29 12:20:34,635:INFO:               numpy: 1.23.5
2023-05-29 12:20:34,635:INFO:              pandas: 1.5.3
2023-05-29 12:20:34,635:INFO:              jinja2: 3.1.2
2023-05-29 12:20:34,635:INFO:               scipy: 1.10.0
2023-05-29 12:20:34,635:INFO:              joblib: 1.1.1
2023-05-29 12:20:34,635:INFO:             sklearn: 1.2.1
2023-05-29 12:20:34,635:INFO:                pyod: 1.0.9
2023-05-29 12:20:34,635:INFO:            imblearn: 0.10.1
2023-05-29 12:20:34,635:INFO:   category_encoders: 2.6.1
2023-05-29 12:20:34,635:INFO:            lightgbm: 3.3.5
2023-05-29 12:20:34,635:INFO:               numba: 0.56.4
2023-05-29 12:20:34,635:INFO:            requests: 2.28.1
2023-05-29 12:20:34,635:INFO:          matplotlib: 3.7.0
2023-05-29 12:20:34,635:INFO:          scikitplot: 0.3.7
2023-05-29 12:20:34,635:INFO:         yellowbrick: 1.5
2023-05-29 12:20:34,635:INFO:              plotly: 5.9.0
2023-05-29 12:20:34,635:INFO:             kaleido: 0.2.1
2023-05-29 12:20:34,635:INFO:         statsmodels: 0.13.5
2023-05-29 12:20:34,635:INFO:              sktime: 0.17.0
2023-05-29 12:20:34,635:INFO:               tbats: 1.1.3
2023-05-29 12:20:34,636:INFO:            pmdarima: 2.0.3
2023-05-29 12:20:34,636:INFO:              psutil: 5.9.0
2023-05-29 12:20:34,636:INFO:PyCaret optional dependencies:
2023-05-29 12:20:34,636:INFO:                shap: Not installed
2023-05-29 12:20:34,636:INFO:           interpret: Not installed
2023-05-29 12:20:34,636:INFO:                umap: Not installed
2023-05-29 12:20:34,636:INFO:    pandas_profiling: Not installed
2023-05-29 12:20:34,636:INFO:  explainerdashboard: Not installed
2023-05-29 12:20:34,636:INFO:             autoviz: Not installed
2023-05-29 12:20:34,636:INFO:           fairlearn: Not installed
2023-05-29 12:20:34,636:INFO:             xgboost: Not installed
2023-05-29 12:20:34,636:INFO:            catboost: Not installed
2023-05-29 12:20:34,636:INFO:              kmodes: Not installed
2023-05-29 12:20:34,636:INFO:             mlxtend: Not installed
2023-05-29 12:20:34,636:INFO:       statsforecast: Not installed
2023-05-29 12:20:34,636:INFO:        tune_sklearn: Not installed
2023-05-29 12:20:34,636:INFO:                 ray: Not installed
2023-05-29 12:20:34,636:INFO:            hyperopt: Not installed
2023-05-29 12:20:34,636:INFO:              optuna: Not installed
2023-05-29 12:20:34,636:INFO:               skopt: Not installed
2023-05-29 12:20:34,636:INFO:              mlflow: Not installed
2023-05-29 12:20:34,636:INFO:              gradio: Not installed
2023-05-29 12:20:34,636:INFO:             fastapi: Not installed
2023-05-29 12:20:34,637:INFO:             uvicorn: Not installed
2023-05-29 12:20:34,637:INFO:              m2cgen: Not installed
2023-05-29 12:20:34,637:INFO:           evidently: Not installed
2023-05-29 12:20:34,637:INFO:               fugue: Not installed
2023-05-29 12:20:34,637:INFO:           streamlit: Not installed
2023-05-29 12:20:34,637:INFO:             prophet: Not installed
2023-05-29 12:20:34,637:INFO:None
2023-05-29 12:20:34,637:INFO:Set up data.
2023-05-29 12:20:34,643:INFO:Set up train/test split.
2023-05-29 12:20:34,648:INFO:Set up index.
2023-05-29 12:20:34,648:INFO:Set up folding strategy.
2023-05-29 12:20:34,648:INFO:Assigning column types.
2023-05-29 12:20:34,651:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-05-29 12:20:34,688:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-29 12:20:34,689:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-29 12:20:34,713:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:34,713:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:34,751:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-05-29 12:20:34,751:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-29 12:20:34,775:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:34,775:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:34,776:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-05-29 12:20:34,814:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-29 12:20:34,838:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:34,838:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:34,876:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-05-29 12:20:34,899:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:34,899:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:34,899:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-05-29 12:20:34,960:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:34,960:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:35,022:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:35,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:35,023:INFO:Preparing preprocessing pipeline...
2023-05-29 12:20:35,024:INFO:Set up label encoding.
2023-05-29 12:20:35,024:INFO:Set up simple imputation.
2023-05-29 12:20:35,045:INFO:Finished creating preprocessing pipeline.
2023-05-29 12:20:35,049:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\liaoj\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Age', 'HoursPerWeek',
                                             'TotalHours', 'APM',
                                             'SelectByHotkeys',
                                             'AssignToHotkeys', 'UniqueHotkeys',
                                             'Minimap...
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='mean',
                                                              verbose='deprecated'))),
                ('categorical_imputer',
                 TransformerWrapper(exclude=None, include=[],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated')))],
         verbose=False)
2023-05-29 12:20:35,049:INFO:Creating final display dataframe.
2023-05-29 12:20:35,115:INFO:Setup _display_container:                     Description                                     Value
0                    Session id                                      1223
1                        Target                               LeagueIndex
2                   Target type                                Multiclass
3                Target mapping  1: 0, 2: 1, 3: 2, 4: 3, 5: 4, 6: 5, 7: 6
4           Original data shape                                (3338, 15)
5        Transformed data shape                                (3338, 15)
6   Transformed train set shape                                (2670, 15)
7    Transformed test set shape                                 (668, 15)
8              Numeric features                                        14
9                    Preprocess                                      True
10              Imputation type                                    simple
11           Numeric imputation                                      mean
12       Categorical imputation                                      mode
13               Fold Generator                           StratifiedKFold
14                  Fold Number                                         5
15                     CPU Jobs                                        -1
16                      Use GPU                                     False
17               Log Experiment                                     False
18              Experiment Name                          clf-default-name
19                          USI                                      f2b5
2023-05-29 12:20:35,189:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:35,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:35,252:WARNING:
'xgboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install xgboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:35,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-05-29 12:20:35,253:INFO:setup() successfully completed in 0.98s...............
2023-05-29 12:20:38,459:INFO:Initializing compare_models()
2023-05-29 12:20:38,459:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-05-29 12:20:38,459:INFO:Checking exceptions
2023-05-29 12:20:38,462:INFO:Preparing display monitor
2023-05-29 12:20:38,487:INFO:Initializing Logistic Regression
2023-05-29 12:20:38,487:INFO:Total runtime is 0.0 minutes
2023-05-29 12:20:38,490:INFO:SubProcess create_model() called ==================================
2023-05-29 12:20:38,491:INFO:Initializing create_model()
2023-05-29 12:20:38,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=lr, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:20:38,491:INFO:Checking exceptions
2023-05-29 12:20:38,491:INFO:Importing libraries
2023-05-29 12:20:38,491:INFO:Copying training dataset
2023-05-29 12:20:38,495:INFO:Defining folds
2023-05-29 12:20:38,495:INFO:Declaring metric variables
2023-05-29 12:20:38,498:INFO:Importing untrained model
2023-05-29 12:20:38,501:INFO:Logistic Regression Imported successfully
2023-05-29 12:20:38,507:INFO:Starting cross validation
2023-05-29 12:20:38,508:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:20:38,949:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-29 12:20:39,001:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,002:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,004:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,113:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-29 12:20:39,129:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-29 12:20:39,130:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-29 12:20:39,162:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-05-29 12:20:39,165:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,167:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,168:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:39,168:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,182:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,184:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,184:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,186:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,186:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:39,186:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,187:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:39,187:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,213:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,215:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:39,216:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:40,392:INFO:Calculating mean and std
2023-05-29 12:20:40,393:INFO:Creating metrics dataframe
2023-05-29 12:20:40,851:INFO:Uploading results into container
2023-05-29 12:20:40,852:INFO:Uploading model into container now
2023-05-29 12:20:40,852:INFO:_master_model_container: 1
2023-05-29 12:20:40,852:INFO:_display_container: 2
2023-05-29 12:20:40,853:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=1223, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-05-29 12:20:40,853:INFO:create_model() successfully completed......................................
2023-05-29 12:20:40,928:INFO:SubProcess create_model() end ==================================
2023-05-29 12:20:40,928:INFO:Creating metrics dataframe
2023-05-29 12:20:40,936:INFO:Initializing K Neighbors Classifier
2023-05-29 12:20:40,936:INFO:Total runtime is 0.04081657330195109 minutes
2023-05-29 12:20:40,939:INFO:SubProcess create_model() called ==================================
2023-05-29 12:20:40,940:INFO:Initializing create_model()
2023-05-29 12:20:40,940:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=knn, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:20:40,940:INFO:Checking exceptions
2023-05-29 12:20:40,940:INFO:Importing libraries
2023-05-29 12:20:40,940:INFO:Copying training dataset
2023-05-29 12:20:40,944:INFO:Defining folds
2023-05-29 12:20:40,944:INFO:Declaring metric variables
2023-05-29 12:20:40,947:INFO:Importing untrained model
2023-05-29 12:20:40,950:INFO:K Neighbors Classifier Imported successfully
2023-05-29 12:20:40,955:INFO:Starting cross validation
2023-05-29 12:20:40,955:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:20:41,058:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,060:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,061:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,063:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,064:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,065:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,065:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,066:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,067:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,071:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,072:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,072:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,074:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,074:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:41,075:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:41,075:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:42,405:INFO:Calculating mean and std
2023-05-29 12:20:42,406:INFO:Creating metrics dataframe
2023-05-29 12:20:42,862:INFO:Uploading results into container
2023-05-29 12:20:42,862:INFO:Uploading model into container now
2023-05-29 12:20:42,863:INFO:_master_model_container: 2
2023-05-29 12:20:42,863:INFO:_display_container: 2
2023-05-29 12:20:42,863:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-05-29 12:20:42,863:INFO:create_model() successfully completed......................................
2023-05-29 12:20:42,938:INFO:SubProcess create_model() end ==================================
2023-05-29 12:20:42,938:INFO:Creating metrics dataframe
2023-05-29 12:20:42,946:INFO:Initializing Naive Bayes
2023-05-29 12:20:42,946:INFO:Total runtime is 0.07431440353393555 minutes
2023-05-29 12:20:42,949:INFO:SubProcess create_model() called ==================================
2023-05-29 12:20:42,950:INFO:Initializing create_model()
2023-05-29 12:20:42,950:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=nb, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:20:42,950:INFO:Checking exceptions
2023-05-29 12:20:42,950:INFO:Importing libraries
2023-05-29 12:20:42,950:INFO:Copying training dataset
2023-05-29 12:20:42,953:INFO:Defining folds
2023-05-29 12:20:42,954:INFO:Declaring metric variables
2023-05-29 12:20:42,956:INFO:Importing untrained model
2023-05-29 12:20:42,959:INFO:Naive Bayes Imported successfully
2023-05-29 12:20:42,964:INFO:Starting cross validation
2023-05-29 12:20:42,965:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:20:43,032:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,033:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,034:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,037:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,038:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,042:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,043:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,044:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:43,045:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,045:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,047:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:43,048:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:44,389:INFO:Calculating mean and std
2023-05-29 12:20:44,390:INFO:Creating metrics dataframe
2023-05-29 12:20:44,854:INFO:Uploading results into container
2023-05-29 12:20:44,854:INFO:Uploading model into container now
2023-05-29 12:20:44,855:INFO:_master_model_container: 3
2023-05-29 12:20:44,855:INFO:_display_container: 2
2023-05-29 12:20:44,855:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-05-29 12:20:44,855:INFO:create_model() successfully completed......................................
2023-05-29 12:20:44,934:INFO:SubProcess create_model() end ==================================
2023-05-29 12:20:44,934:INFO:Creating metrics dataframe
2023-05-29 12:20:44,943:INFO:Initializing Decision Tree Classifier
2023-05-29 12:20:44,943:INFO:Total runtime is 0.10760732491811117 minutes
2023-05-29 12:20:44,946:INFO:SubProcess create_model() called ==================================
2023-05-29 12:20:44,946:INFO:Initializing create_model()
2023-05-29 12:20:44,947:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=dt, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:20:44,947:INFO:Checking exceptions
2023-05-29 12:20:44,947:INFO:Importing libraries
2023-05-29 12:20:44,947:INFO:Copying training dataset
2023-05-29 12:20:44,951:INFO:Defining folds
2023-05-29 12:20:44,951:INFO:Declaring metric variables
2023-05-29 12:20:44,953:INFO:Importing untrained model
2023-05-29 12:20:44,956:INFO:Decision Tree Classifier Imported successfully
2023-05-29 12:20:44,964:INFO:Starting cross validation
2023-05-29 12:20:44,965:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:20:45,051:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,054:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,054:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,056:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,057:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,057:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,059:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,060:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,061:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,062:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,064:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,064:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,065:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:45,067:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:46,402:INFO:Calculating mean and std
2023-05-29 12:20:46,403:INFO:Creating metrics dataframe
2023-05-29 12:20:46,863:INFO:Uploading results into container
2023-05-29 12:20:46,864:INFO:Uploading model into container now
2023-05-29 12:20:46,864:INFO:_master_model_container: 4
2023-05-29 12:20:46,864:INFO:_display_container: 2
2023-05-29 12:20:46,865:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=1223, splitter='best')
2023-05-29 12:20:46,865:INFO:create_model() successfully completed......................................
2023-05-29 12:20:46,939:INFO:SubProcess create_model() end ==================================
2023-05-29 12:20:46,939:INFO:Creating metrics dataframe
2023-05-29 12:20:46,948:INFO:Initializing SVM - Linear Kernel
2023-05-29 12:20:46,948:INFO:Total runtime is 0.14101264874140423 minutes
2023-05-29 12:20:46,951:INFO:SubProcess create_model() called ==================================
2023-05-29 12:20:46,951:INFO:Initializing create_model()
2023-05-29 12:20:46,951:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=svm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:20:46,951:INFO:Checking exceptions
2023-05-29 12:20:46,951:INFO:Importing libraries
2023-05-29 12:20:46,952:INFO:Copying training dataset
2023-05-29 12:20:46,956:INFO:Defining folds
2023-05-29 12:20:46,956:INFO:Declaring metric variables
2023-05-29 12:20:46,959:INFO:Importing untrained model
2023-05-29 12:20:46,961:INFO:SVM - Linear Kernel Imported successfully
2023-05-29 12:20:46,968:INFO:Starting cross validation
2023-05-29 12:20:46,968:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:20:47,034:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-29 12:20:47,035:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,036:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,037:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:47,038:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,038:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-29 12:20:47,039:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,040:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:47,041:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,047:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-29 12:20:47,047:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,049:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,049:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-29 12:20:47,049:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1236, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-05-29 12:20:47,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:47,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,050:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,051:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,051:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:47,052:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:47,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:47,053:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:48,383:INFO:Calculating mean and std
2023-05-29 12:20:48,384:INFO:Creating metrics dataframe
2023-05-29 12:20:48,846:INFO:Uploading results into container
2023-05-29 12:20:48,847:INFO:Uploading model into container now
2023-05-29 12:20:48,847:INFO:_master_model_container: 5
2023-05-29 12:20:48,847:INFO:_display_container: 2
2023-05-29 12:20:48,848:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=1223, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-05-29 12:20:48,848:INFO:create_model() successfully completed......................................
2023-05-29 12:20:48,929:INFO:SubProcess create_model() end ==================================
2023-05-29 12:20:48,929:INFO:Creating metrics dataframe
2023-05-29 12:20:48,939:INFO:Initializing Ridge Classifier
2023-05-29 12:20:48,939:INFO:Total runtime is 0.1741957187652588 minutes
2023-05-29 12:20:48,942:INFO:SubProcess create_model() called ==================================
2023-05-29 12:20:48,943:INFO:Initializing create_model()
2023-05-29 12:20:48,943:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=ridge, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:20:48,943:INFO:Checking exceptions
2023-05-29 12:20:48,943:INFO:Importing libraries
2023-05-29 12:20:48,943:INFO:Copying training dataset
2023-05-29 12:20:48,948:INFO:Defining folds
2023-05-29 12:20:48,948:INFO:Declaring metric variables
2023-05-29 12:20:48,951:INFO:Importing untrained model
2023-05-29 12:20:48,954:INFO:Ridge Classifier Imported successfully
2023-05-29 12:20:48,959:INFO:Starting cross validation
2023-05-29 12:20:48,960:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:20:49,000:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=9.99887e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-29 12:20:49,005:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=6.05276e-10): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-29 12:20:49,009:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=9.99865e-13): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-29 12:20:49,010:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.00053e-12): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-29 12:20:49,012:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\linear_model\_ridge.py:216: LinAlgWarning: Ill-conditioned matrix (rcond=1.00022e-12): result may not be accurate.
  return linalg.solve(A, Xy, assume_a="pos", overwrite_a=True).T

2023-05-29 12:20:49,015:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-29 12:20:49,016:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,017:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,018:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:49,019:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,020:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-29 12:20:49,020:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,022:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,023:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:49,023:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-29 12:20:49,023:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,023:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,024:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-29 12:20:49,025:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,025:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,026:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:49,026:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,027:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,027:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:49,027:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-05-29 12:20:49,028:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,028:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,031:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:49,032:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:49,033:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:50,385:INFO:Calculating mean and std
2023-05-29 12:20:50,386:INFO:Creating metrics dataframe
2023-05-29 12:20:50,838:INFO:Uploading results into container
2023-05-29 12:20:50,839:INFO:Uploading model into container now
2023-05-29 12:20:50,839:INFO:_master_model_container: 6
2023-05-29 12:20:50,839:INFO:_display_container: 2
2023-05-29 12:20:50,839:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=1223, solver='auto',
                tol=0.0001)
2023-05-29 12:20:50,840:INFO:create_model() successfully completed......................................
2023-05-29 12:20:50,913:INFO:SubProcess create_model() end ==================================
2023-05-29 12:20:50,913:INFO:Creating metrics dataframe
2023-05-29 12:20:50,922:INFO:Initializing Random Forest Classifier
2023-05-29 12:20:50,922:INFO:Total runtime is 0.20725465218226116 minutes
2023-05-29 12:20:50,926:INFO:SubProcess create_model() called ==================================
2023-05-29 12:20:50,926:INFO:Initializing create_model()
2023-05-29 12:20:50,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=rf, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:20:50,926:INFO:Checking exceptions
2023-05-29 12:20:50,926:INFO:Importing libraries
2023-05-29 12:20:50,926:INFO:Copying training dataset
2023-05-29 12:20:50,930:INFO:Defining folds
2023-05-29 12:20:50,930:INFO:Declaring metric variables
2023-05-29 12:20:50,933:INFO:Importing untrained model
2023-05-29 12:20:50,936:INFO:Random Forest Classifier Imported successfully
2023-05-29 12:20:50,943:INFO:Starting cross validation
2023-05-29 12:20:50,944:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:20:51,585:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:51,587:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:51,588:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:51,606:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:51,607:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:51,608:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:51,608:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:51,608:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:51,609:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:51,609:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:51,609:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:51,609:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:51,610:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:51,611:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:51,615:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:51,616:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:51,617:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:51,618:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:52,943:INFO:Calculating mean and std
2023-05-29 12:20:52,944:INFO:Creating metrics dataframe
2023-05-29 12:20:53,402:INFO:Uploading results into container
2023-05-29 12:20:53,403:INFO:Uploading model into container now
2023-05-29 12:20:53,403:INFO:_master_model_container: 7
2023-05-29 12:20:53,403:INFO:_display_container: 2
2023-05-29 12:20:53,403:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False)
2023-05-29 12:20:53,403:INFO:create_model() successfully completed......................................
2023-05-29 12:20:53,484:INFO:SubProcess create_model() end ==================================
2023-05-29 12:20:53,484:INFO:Creating metrics dataframe
2023-05-29 12:20:53,494:INFO:Initializing Quadratic Discriminant Analysis
2023-05-29 12:20:53,494:INFO:Total runtime is 0.25012230475743613 minutes
2023-05-29 12:20:53,497:INFO:SubProcess create_model() called ==================================
2023-05-29 12:20:53,498:INFO:Initializing create_model()
2023-05-29 12:20:53,498:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=qda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:20:53,498:INFO:Checking exceptions
2023-05-29 12:20:53,498:INFO:Importing libraries
2023-05-29 12:20:53,498:INFO:Copying training dataset
2023-05-29 12:20:53,503:INFO:Defining folds
2023-05-29 12:20:53,503:INFO:Declaring metric variables
2023-05-29 12:20:53,506:INFO:Importing untrained model
2023-05-29 12:20:53,509:INFO:Quadratic Discriminant Analysis Imported successfully
2023-05-29 12:20:53,515:INFO:Starting cross validation
2023-05-29 12:20:53,515:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:20:53,590:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:53,592:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:53,592:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:53,593:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:53,594:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:53,595:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:53,603:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:53,604:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:53,605:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:53,606:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:53,606:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:53,606:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:53,607:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:53,608:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:54,959:INFO:Calculating mean and std
2023-05-29 12:20:54,961:INFO:Creating metrics dataframe
2023-05-29 12:20:55,427:INFO:Uploading results into container
2023-05-29 12:20:55,427:INFO:Uploading model into container now
2023-05-29 12:20:55,428:INFO:_master_model_container: 8
2023-05-29 12:20:55,428:INFO:_display_container: 2
2023-05-29 12:20:55,428:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-05-29 12:20:55,428:INFO:create_model() successfully completed......................................
2023-05-29 12:20:55,501:INFO:SubProcess create_model() end ==================================
2023-05-29 12:20:55,501:INFO:Creating metrics dataframe
2023-05-29 12:20:55,511:INFO:Initializing Ada Boost Classifier
2023-05-29 12:20:55,511:INFO:Total runtime is 0.2837414105733236 minutes
2023-05-29 12:20:55,514:INFO:SubProcess create_model() called ==================================
2023-05-29 12:20:55,515:INFO:Initializing create_model()
2023-05-29 12:20:55,515:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=ada, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:20:55,515:INFO:Checking exceptions
2023-05-29 12:20:55,515:INFO:Importing libraries
2023-05-29 12:20:55,515:INFO:Copying training dataset
2023-05-29 12:20:55,519:INFO:Defining folds
2023-05-29 12:20:55,519:INFO:Declaring metric variables
2023-05-29 12:20:55,522:INFO:Importing untrained model
2023-05-29 12:20:55,525:INFO:Ada Boost Classifier Imported successfully
2023-05-29 12:20:55,531:INFO:Starting cross validation
2023-05-29 12:20:55,532:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:20:55,952:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,953:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,955:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,958:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,961:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,962:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:55,962:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,962:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,963:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,964:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,972:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,973:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,975:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:55,976:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,981:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,983:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:55,984:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:20:55,984:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:20:57,321:INFO:Calculating mean and std
2023-05-29 12:20:57,322:INFO:Creating metrics dataframe
2023-05-29 12:20:57,778:INFO:Uploading results into container
2023-05-29 12:20:57,778:INFO:Uploading model into container now
2023-05-29 12:20:57,779:INFO:_master_model_container: 9
2023-05-29 12:20:57,779:INFO:_display_container: 2
2023-05-29 12:20:57,779:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=1223)
2023-05-29 12:20:57,779:INFO:create_model() successfully completed......................................
2023-05-29 12:20:57,853:INFO:SubProcess create_model() end ==================================
2023-05-29 12:20:57,853:INFO:Creating metrics dataframe
2023-05-29 12:20:57,863:INFO:Initializing Gradient Boosting Classifier
2023-05-29 12:20:57,863:INFO:Total runtime is 0.3229369640350342 minutes
2023-05-29 12:20:57,866:INFO:SubProcess create_model() called ==================================
2023-05-29 12:20:57,867:INFO:Initializing create_model()
2023-05-29 12:20:57,867:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=gbc, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:20:57,867:INFO:Checking exceptions
2023-05-29 12:20:57,867:INFO:Importing libraries
2023-05-29 12:20:57,867:INFO:Copying training dataset
2023-05-29 12:20:57,871:INFO:Defining folds
2023-05-29 12:20:57,871:INFO:Declaring metric variables
2023-05-29 12:20:57,874:INFO:Importing untrained model
2023-05-29 12:20:57,877:INFO:Gradient Boosting Classifier Imported successfully
2023-05-29 12:20:57,883:INFO:Starting cross validation
2023-05-29 12:20:57,884:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:21:03,914:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,916:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,917:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,922:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,923:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,924:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,936:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,937:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,938:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,938:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,939:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,940:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,977:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,978:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:03,980:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,306:INFO:Calculating mean and std
2023-05-29 12:21:05,308:INFO:Creating metrics dataframe
2023-05-29 12:21:05,776:INFO:Uploading results into container
2023-05-29 12:21:05,776:INFO:Uploading model into container now
2023-05-29 12:21:05,777:INFO:_master_model_container: 10
2023-05-29 12:21:05,777:INFO:_display_container: 2
2023-05-29 12:21:05,777:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=1223, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-05-29 12:21:05,777:INFO:create_model() successfully completed......................................
2023-05-29 12:21:05,852:INFO:SubProcess create_model() end ==================================
2023-05-29 12:21:05,852:INFO:Creating metrics dataframe
2023-05-29 12:21:05,862:INFO:Initializing Linear Discriminant Analysis
2023-05-29 12:21:05,863:INFO:Total runtime is 0.4562666296958924 minutes
2023-05-29 12:21:05,865:INFO:SubProcess create_model() called ==================================
2023-05-29 12:21:05,865:INFO:Initializing create_model()
2023-05-29 12:21:05,866:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=lda, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:21:05,866:INFO:Checking exceptions
2023-05-29 12:21:05,866:INFO:Importing libraries
2023-05-29 12:21:05,866:INFO:Copying training dataset
2023-05-29 12:21:05,870:INFO:Defining folds
2023-05-29 12:21:05,870:INFO:Declaring metric variables
2023-05-29 12:21:05,873:INFO:Importing untrained model
2023-05-29 12:21:05,875:INFO:Linear Discriminant Analysis Imported successfully
2023-05-29 12:21:05,881:INFO:Starting cross validation
2023-05-29 12:21:05,882:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:21:05,956:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,957:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,959:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,959:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,961:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,962:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,962:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,962:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,963:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,963:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,964:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,965:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,965:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,965:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:05,966:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:07,328:INFO:Calculating mean and std
2023-05-29 12:21:07,330:INFO:Creating metrics dataframe
2023-05-29 12:21:07,798:INFO:Uploading results into container
2023-05-29 12:21:07,799:INFO:Uploading model into container now
2023-05-29 12:21:07,799:INFO:_master_model_container: 11
2023-05-29 12:21:07,799:INFO:_display_container: 2
2023-05-29 12:21:07,799:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-05-29 12:21:07,799:INFO:create_model() successfully completed......................................
2023-05-29 12:21:07,874:INFO:SubProcess create_model() end ==================================
2023-05-29 12:21:07,874:INFO:Creating metrics dataframe
2023-05-29 12:21:07,884:INFO:Initializing Extra Trees Classifier
2023-05-29 12:21:07,885:INFO:Total runtime is 0.4899637858072917 minutes
2023-05-29 12:21:07,887:INFO:SubProcess create_model() called ==================================
2023-05-29 12:21:07,888:INFO:Initializing create_model()
2023-05-29 12:21:07,888:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=et, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:21:07,888:INFO:Checking exceptions
2023-05-29 12:21:07,888:INFO:Importing libraries
2023-05-29 12:21:07,888:INFO:Copying training dataset
2023-05-29 12:21:07,892:INFO:Defining folds
2023-05-29 12:21:07,892:INFO:Declaring metric variables
2023-05-29 12:21:07,895:INFO:Importing untrained model
2023-05-29 12:21:07,898:INFO:Extra Trees Classifier Imported successfully
2023-05-29 12:21:07,903:INFO:Starting cross validation
2023-05-29 12:21:07,904:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:21:08,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,442:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,444:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,444:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,444:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:08,445:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,445:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,455:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,457:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,457:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,458:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:08,458:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,459:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,460:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,461:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,461:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:08,462:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:08,462:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:08,463:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:09,841:INFO:Calculating mean and std
2023-05-29 12:21:09,842:INFO:Creating metrics dataframe
2023-05-29 12:21:10,315:INFO:Uploading results into container
2023-05-29 12:21:10,315:INFO:Uploading model into container now
2023-05-29 12:21:10,315:INFO:_master_model_container: 12
2023-05-29 12:21:10,316:INFO:_display_container: 2
2023-05-29 12:21:10,316:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=1223, verbose=0, warm_start=False)
2023-05-29 12:21:10,316:INFO:create_model() successfully completed......................................
2023-05-29 12:21:10,394:INFO:SubProcess create_model() end ==================================
2023-05-29 12:21:10,394:INFO:Creating metrics dataframe
2023-05-29 12:21:10,405:INFO:Initializing Light Gradient Boosting Machine
2023-05-29 12:21:10,406:INFO:Total runtime is 0.5319782336552938 minutes
2023-05-29 12:21:10,409:INFO:SubProcess create_model() called ==================================
2023-05-29 12:21:10,409:INFO:Initializing create_model()
2023-05-29 12:21:10,409:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:21:10,409:INFO:Checking exceptions
2023-05-29 12:21:10,409:INFO:Importing libraries
2023-05-29 12:21:10,409:INFO:Copying training dataset
2023-05-29 12:21:10,413:INFO:Defining folds
2023-05-29 12:21:10,413:INFO:Declaring metric variables
2023-05-29 12:21:10,415:INFO:Importing untrained model
2023-05-29 12:21:10,418:INFO:Light Gradient Boosting Machine Imported successfully
2023-05-29 12:21:10,426:INFO:Starting cross validation
2023-05-29 12:21:10,427:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:21:11,557:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:11,559:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:11,560:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:11,560:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:11,580:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:11,583:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:11,584:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:11,585:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:12,331:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:12,333:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:12,333:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:12,334:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:12,335:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:12,335:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:12,336:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:12,337:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:12,337:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:12,338:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:12,338:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,043:INFO:Calculating mean and std
2023-05-29 12:21:13,044:INFO:Creating metrics dataframe
2023-05-29 12:21:13,520:INFO:Uploading results into container
2023-05-29 12:21:13,521:INFO:Uploading model into container now
2023-05-29 12:21:13,521:INFO:_master_model_container: 13
2023-05-29 12:21:13,521:INFO:_display_container: 2
2023-05-29 12:21:13,521:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=1223, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-05-29 12:21:13,521:INFO:create_model() successfully completed......................................
2023-05-29 12:21:13,602:INFO:SubProcess create_model() end ==================================
2023-05-29 12:21:13,602:INFO:Creating metrics dataframe
2023-05-29 12:21:13,615:INFO:Initializing Dummy Classifier
2023-05-29 12:21:13,615:INFO:Total runtime is 0.5854656736056011 minutes
2023-05-29 12:21:13,618:INFO:SubProcess create_model() called ==================================
2023-05-29 12:21:13,618:INFO:Initializing create_model()
2023-05-29 12:21:13,618:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=dummy, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BCAC2DD0>, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:21:13,619:INFO:Checking exceptions
2023-05-29 12:21:13,619:INFO:Importing libraries
2023-05-29 12:21:13,619:INFO:Copying training dataset
2023-05-29 12:21:13,623:INFO:Defining folds
2023-05-29 12:21:13,624:INFO:Declaring metric variables
2023-05-29 12:21:13,627:INFO:Importing untrained model
2023-05-29 12:21:13,630:INFO:Dummy Classifier Imported successfully
2023-05-29 12:21:13,636:INFO:Starting cross validation
2023-05-29 12:21:13,637:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:21:13,701:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,702:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,703:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:13,703:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,704:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,705:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,706:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,706:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:13,707:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,708:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,709:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:13,709:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,710:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,711:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,712:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:13,712:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,713:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,714:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:13,715:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:13,716:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:15,103:INFO:Calculating mean and std
2023-05-29 12:21:15,104:INFO:Creating metrics dataframe
2023-05-29 12:21:15,572:INFO:Uploading results into container
2023-05-29 12:21:15,573:INFO:Uploading model into container now
2023-05-29 12:21:15,573:INFO:_master_model_container: 14
2023-05-29 12:21:15,573:INFO:_display_container: 2
2023-05-29 12:21:15,573:INFO:DummyClassifier(constant=None, random_state=1223, strategy='prior')
2023-05-29 12:21:15,573:INFO:create_model() successfully completed......................................
2023-05-29 12:21:15,648:INFO:SubProcess create_model() end ==================================
2023-05-29 12:21:15,648:INFO:Creating metrics dataframe
2023-05-29 12:21:15,666:INFO:Initializing create_model()
2023-05-29 12:21:15,666:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:21:15,666:INFO:Checking exceptions
2023-05-29 12:21:15,668:INFO:Importing libraries
2023-05-29 12:21:15,668:INFO:Copying training dataset
2023-05-29 12:21:15,672:INFO:Defining folds
2023-05-29 12:21:15,672:INFO:Declaring metric variables
2023-05-29 12:21:15,672:INFO:Importing untrained model
2023-05-29 12:21:15,672:INFO:Declaring custom model
2023-05-29 12:21:15,673:INFO:Random Forest Classifier Imported successfully
2023-05-29 12:21:15,673:INFO:Cross validation set to False
2023-05-29 12:21:15,673:INFO:Fitting Model
2023-05-29 12:21:16,343:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False)
2023-05-29 12:21:16,343:INFO:create_model() successfully completed......................................
2023-05-29 12:21:16,442:INFO:_master_model_container: 14
2023-05-29 12:21:16,442:INFO:_display_container: 2
2023-05-29 12:21:16,443:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False)
2023-05-29 12:21:16,443:INFO:compare_models() successfully completed......................................
2023-05-29 12:21:22,001:INFO:Initializing tune_model()
2023-05-29 12:21:22,001:INFO:tune_model(estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False), fold=None, round=4, n_iter=10, custom_grid=None, optimize=Accuracy, custom_scorer=None, search_library=scikit-learn, search_algorithm=None, early_stopping=False, early_stopping_max_iters=10, choose_better=True, fit_kwargs=None, groups=None, return_tuner=False, verbose=True, tuner_verbose=True, return_train_score=False, kwargs={}, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>)
2023-05-29 12:21:22,001:INFO:Checking exceptions
2023-05-29 12:21:22,019:INFO:Copying training dataset
2023-05-29 12:21:22,022:INFO:Checking base model
2023-05-29 12:21:22,022:INFO:Base model : Random Forest Classifier
2023-05-29 12:21:22,026:INFO:Declaring metric variables
2023-05-29 12:21:22,029:INFO:Defining Hyperparameters
2023-05-29 12:21:22,110:INFO:Tuning with n_jobs=-1
2023-05-29 12:21:22,110:INFO:Initializing RandomizedSearchCV
2023-05-29 12:21:23,041:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-29 12:21:23,042:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.64s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-29 12:21:23,084:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.68s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-29 12:21:23,090:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.66s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-29 12:21:23,250:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.75s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-29 12:21:24,090:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.72s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-05-29 12:21:27,262:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.56s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-29 12:21:27,476:WARNING:C:\Users\liaoj\AppData\Roaming\Python\Python310\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-05-29 12:21:45,512:INFO:best_params: {'actual_estimator__n_estimators': 280, 'actual_estimator__min_samples_split': 2, 'actual_estimator__min_samples_leaf': 2, 'actual_estimator__min_impurity_decrease': 0.0002, 'actual_estimator__max_features': 'sqrt', 'actual_estimator__max_depth': 9, 'actual_estimator__criterion': 'gini', 'actual_estimator__class_weight': 'balanced', 'actual_estimator__bootstrap': False}
2023-05-29 12:21:45,513:INFO:Hyperparameter search completed
2023-05-29 12:21:45,513:INFO:SubProcess create_model() called ==================================
2023-05-29 12:21:45,514:INFO:Initializing create_model()
2023-05-29 12:21:45,514:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=True, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000002F0BC7FCF40>, model_only=True, return_train_score=False, kwargs={'n_estimators': 280, 'min_samples_split': 2, 'min_samples_leaf': 2, 'min_impurity_decrease': 0.0002, 'max_features': 'sqrt', 'max_depth': 9, 'criterion': 'gini', 'class_weight': 'balanced', 'bootstrap': False})
2023-05-29 12:21:45,514:INFO:Checking exceptions
2023-05-29 12:21:45,514:INFO:Importing libraries
2023-05-29 12:21:45,514:INFO:Copying training dataset
2023-05-29 12:21:45,518:INFO:Defining folds
2023-05-29 12:21:45,518:INFO:Declaring metric variables
2023-05-29 12:21:45,521:INFO:Importing untrained model
2023-05-29 12:21:45,521:INFO:Declaring custom model
2023-05-29 12:21:45,525:INFO:Random Forest Classifier Imported successfully
2023-05-29 12:21:45,531:INFO:Starting cross validation
2023-05-29 12:21:45,531:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:21:46,096:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,097:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,099:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,101:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,103:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,104:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,119:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,121:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,122:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,126:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,128:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,129:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,154:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,156:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:46,157:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:47,605:INFO:Calculating mean and std
2023-05-29 12:21:47,606:INFO:Creating metrics dataframe
2023-05-29 12:21:47,612:INFO:Finalizing model
2023-05-29 12:21:48,886:INFO:Uploading results into container
2023-05-29 12:21:48,886:INFO:Uploading model into container now
2023-05-29 12:21:48,887:INFO:_master_model_container: 15
2023-05-29 12:21:48,887:INFO:_display_container: 3
2023-05-29 12:21:48,887:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=280, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False)
2023-05-29 12:21:48,887:INFO:create_model() successfully completed......................................
2023-05-29 12:21:48,970:INFO:SubProcess create_model() end ==================================
2023-05-29 12:21:48,970:INFO:choose_better activated
2023-05-29 12:21:48,973:INFO:SubProcess create_model() called ==================================
2023-05-29 12:21:48,974:INFO:Initializing create_model()
2023-05-29 12:21:48,974:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False), fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-05-29 12:21:48,974:INFO:Checking exceptions
2023-05-29 12:21:48,975:INFO:Importing libraries
2023-05-29 12:21:48,975:INFO:Copying training dataset
2023-05-29 12:21:48,979:INFO:Defining folds
2023-05-29 12:21:48,980:INFO:Declaring metric variables
2023-05-29 12:21:48,980:INFO:Importing untrained model
2023-05-29 12:21:48,980:INFO:Declaring custom model
2023-05-29 12:21:48,980:INFO:Random Forest Classifier Imported successfully
2023-05-29 12:21:48,981:INFO:Starting cross validation
2023-05-29 12:21:48,981:INFO:Cross validating with StratifiedKFold(n_splits=5, random_state=None, shuffle=False), n_jobs=-1
2023-05-29 12:21:49,253:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,254:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,256:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,256:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,257:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:49,257:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,257:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,264:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,265:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:49,266:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,267:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,268:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,269:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:49,269:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-05-29 12:21:49,269:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:49,270:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 7) is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-05-29 12:21:50,757:INFO:Calculating mean and std
2023-05-29 12:21:50,757:INFO:Creating metrics dataframe
2023-05-29 12:21:50,759:INFO:Finalizing model
2023-05-29 12:21:51,331:INFO:Uploading results into container
2023-05-29 12:21:51,331:INFO:Uploading model into container now
2023-05-29 12:21:51,332:INFO:_master_model_container: 16
2023-05-29 12:21:51,332:INFO:_display_container: 4
2023-05-29 12:21:51,332:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False)
2023-05-29 12:21:51,332:INFO:create_model() successfully completed......................................
2023-05-29 12:21:51,414:INFO:SubProcess create_model() end ==================================
2023-05-29 12:21:51,414:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False) result for Accuracy is 0.4019
2023-05-29 12:21:51,415:INFO:RandomForestClassifier(bootstrap=False, ccp_alpha=0.0, class_weight='balanced',
                       criterion='gini', max_depth=9, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0002, min_samples_leaf=2,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=280, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False) result for Accuracy is 0.3903
2023-05-29 12:21:51,415:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False) is best model
2023-05-29 12:21:51,415:INFO:choose_better completed
2023-05-29 12:21:51,415:INFO:Original model was better than the tuned model, hence it will be returned. NOTE: The display metrics are for the tuned model (not the original one).
2023-05-29 12:21:51,422:INFO:_master_model_container: 16
2023-05-29 12:21:51,423:INFO:_display_container: 3
2023-05-29 12:21:51,423:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False)
2023-05-29 12:21:51,423:INFO:tune_model() successfully completed......................................
2023-05-29 12:22:21,099:INFO:Initializing evaluate_model()
2023-05-29 12:22:21,099:INFO:evaluate_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False), fold=None, fit_kwargs=None, plot_kwargs=None, feature_name=None, groups=None, use_train_data=False)
2023-05-29 12:22:21,116:INFO:Initializing plot_model()
2023-05-29 12:22:21,116:INFO:plot_model(plot=pipeline, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, system=True)
2023-05-29 12:22:21,116:INFO:Checking exceptions
2023-05-29 12:22:21,134:INFO:Preloading libraries
2023-05-29 12:22:21,156:INFO:Copying training dataset
2023-05-29 12:22:21,156:INFO:Plot type: pipeline
2023-05-29 12:22:21,291:INFO:Visual Rendered Successfully
2023-05-29 12:22:21,366:INFO:plot_model() successfully completed......................................
2023-05-29 12:22:25,985:INFO:Initializing plot_model()
2023-05-29 12:22:25,985:INFO:plot_model(plot=confusion_matrix, fold=StratifiedKFold(n_splits=5, random_state=None, shuffle=False), use_train_data=False, verbose=False, display=None, display_format=None, estimator=RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=1223, verbose=0, warm_start=False), feature_name=None, fit_kwargs={}, groups=None, label=False, plot_kwargs=None, save=False, scale=1, self=<pycaret.classification.oop.ClassificationExperiment object at 0x000002F0BC7DC5E0>, system=True)
2023-05-29 12:22:25,985:INFO:Checking exceptions
2023-05-29 12:22:26,006:INFO:Preloading libraries
2023-05-29 12:22:26,030:INFO:Copying training dataset
2023-05-29 12:22:26,030:INFO:Plot type: confusion_matrix
2023-05-29 12:22:26,097:INFO:Fitting Model
2023-05-29 12:22:26,099:WARNING:C:\ProgramData\anaconda3\lib\site-packages\sklearn\base.py:420: UserWarning: X does not have valid feature names, but RandomForestClassifier was fitted with feature names
  warnings.warn(

2023-05-29 12:22:26,100:INFO:Scoring test/hold-out set
2023-05-29 12:22:26,373:INFO:Visual Rendered Successfully
2023-05-29 12:22:26,456:INFO:plot_model() successfully completed......................................
